{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"selec",
				"selectedField"
			],
			[
				"pre",
				"precision_num"
			],
			[
				"Calc",
				"CalcThompson"
			],
			[
				"va",
				"valueIndex"
			],
			[
				"CalcT",
				"CalcThompson"
			],
			[
				"inpt",
				"inputElements"
			],
			[
				"__De",
				"__delay_us"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Q = s =>\nQA = s =>\nFieldIndex(arg)\nSaveConfig()\nLoadConfig()\n(v, i) =>\nPartitionArray(a, size)\nGetFieldElements(n)\nGetFieldValue(n)\n  e =>\nSetFieldValue(n, v)\n  e =>\nSelectField(i)\n(e, x) =>\nGuessField()\n  v =>\nGetSelected()\n  e =>\nGetValue(name)\nSetValue(name, value)\nCalcThompson()\nSetField(i, num, round = \n(config.precision ?? 3))\nRoundFunction(prec = 3)\nn =>\nCalcFrequency()\nCalcInductance()\nCalcCapacity()\nExponent(num)\nThousand(exponent)\nExp2Unit(exponent)\nUnit(str)\n([a]) =>\nOnInput({ target })\nClearValues(idx)\nProcessValue(value, name)\nParseValue(value, name)\nReadFields(name)\n({ name, value }, i) =>\nWriteFields(name)\nFormatNumber(num, exp, unit, round = a => a.\n(12).\n(/\\.0*$/g, ''))\nWaitFor(ms)\n  resolve =>\nSetStatus(str, t1 = 3000, t2 = 1000)\nCopyToClipboard(str)\nSetupFields()\n() =>\n(a, i) =>\n  e =>\ne =>\n  e =>\n  e =>\n  e =>\nChangePrecision(p)\nInit()\n  e =>\nevent =>\nevent =>\n() =>",
			"settings":
			{
				"buffer_size": 898,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					454,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1189,
								1214
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1409,
								1413
							],
							[
								1469,
								1492
							],
							[
								1624,
								1633
							],
							[
								1823,
								1844
							],
							[
								1871,
								1875
							],
							[
								1952,
								1974
							],
							[
								2007,
								2011
							],
							[
								2069,
								2092
							],
							[
								2331,
								2361
							],
							[
								2839,
								2862
							],
							[
								3151,
								3185
							],
							[
								3198,
								3233
							],
							[
								3548,
								3580
							],
							[
								3623,
								3628
							],
							[
								3655,
								3679
							],
							[
								3816,
								3841
							],
							[
								3974,
								3997
							],
							[
								4130,
								4152
							],
							[
								4196,
								4223
							],
							[
								4297,
								4324
							],
							[
								4649,
								4667
							],
							[
								4815,
								4823
							],
							[
								5283,
								5311
							],
							[
								5491,
								5516
							],
							[
								5637,
								5671
							],
							[
								5828,
								5860
							],
							[
								6350,
								6375
							],
							[
								6476,
								6499
							],
							[
								6703,
								6729
							],
							[
								6872,
								6925
							],
							[
								6932,
								6937
							],
							[
								6944,
								6959
							],
							[
								7248,
								7269
							],
							[
								7293,
								7303
							],
							[
								7333,
								7384
							],
							[
								7955,
								7990
							],
							[
								8087,
								8109
							],
							[
								8156,
								8161
							],
							[
								8261,
								8270
							],
							[
								8299,
								8303
							],
							[
								8331,
								8336
							],
							[
								8369,
								8373
							],
							[
								8405,
								8415
							],
							[
								8548,
								8558
							],
							[
								8728,
								8755
							],
							[
								9005,
								9020
							],
							[
								9094,
								9098
							],
							[
								9310,
								9319
							],
							[
								9514,
								9523
							],
							[
								10190,
								10195
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					455,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1189,
								1214
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1409,
								1413
							],
							[
								1469,
								1492
							],
							[
								1624,
								1633
							],
							[
								1823,
								1844
							],
							[
								1871,
								1875
							],
							[
								1952,
								1974
							],
							[
								2007,
								2011
							],
							[
								2069,
								2092
							],
							[
								2331,
								2361
							],
							[
								2839,
								2862
							],
							[
								3151,
								3185
							],
							[
								3198,
								3233
							],
							[
								3548,
								3580
							],
							[
								3623,
								3628
							],
							[
								3655,
								3679
							],
							[
								3816,
								3841
							],
							[
								3974,
								3997
							],
							[
								4130,
								4152
							],
							[
								4196,
								4223
							],
							[
								4297,
								4324
							],
							[
								4649,
								4667
							],
							[
								4815,
								4823
							],
							[
								5283,
								5311
							],
							[
								5491,
								5516
							],
							[
								5637,
								5671
							],
							[
								5828,
								5860
							],
							[
								6350,
								6375
							],
							[
								6476,
								6499
							],
							[
								6703,
								6729
							],
							[
								6872,
								6925
							],
							[
								6932,
								6937
							],
							[
								6944,
								6959
							],
							[
								7248,
								7269
							],
							[
								7293,
								7303
							],
							[
								7333,
								7384
							],
							[
								7955,
								7990
							],
							[
								8087,
								8109
							],
							[
								8156,
								8161
							],
							[
								8261,
								8270
							],
							[
								8299,
								8303
							],
							[
								8331,
								8336
							],
							[
								8369,
								8373
							],
							[
								8405,
								8415
							],
							[
								8548,
								8558
							],
							[
								8728,
								8755
							],
							[
								9005,
								9020
							],
							[
								9094,
								9098
							],
							[
								9310,
								9319
							],
							[
								9514,
								9523
							],
							[
								10190,
								10195
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					456,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1189,
								1214
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1409,
								1413
							],
							[
								1469,
								1492
							],
							[
								1624,
								1633
							],
							[
								1823,
								1844
							],
							[
								1871,
								1875
							],
							[
								1952,
								1974
							],
							[
								2007,
								2011
							],
							[
								2069,
								2092
							],
							[
								2331,
								2361
							],
							[
								2839,
								2862
							],
							[
								3151,
								3185
							],
							[
								3198,
								3233
							],
							[
								3548,
								3580
							],
							[
								3623,
								3628
							],
							[
								3655,
								3679
							],
							[
								3816,
								3841
							],
							[
								3974,
								3997
							],
							[
								4130,
								4152
							],
							[
								4196,
								4223
							],
							[
								4297,
								4324
							],
							[
								4649,
								4667
							],
							[
								4815,
								4823
							],
							[
								5283,
								5311
							],
							[
								5491,
								5516
							],
							[
								5637,
								5671
							],
							[
								5828,
								5860
							],
							[
								6350,
								6375
							],
							[
								6476,
								6499
							],
							[
								6703,
								6729
							],
							[
								6872,
								6925
							],
							[
								6932,
								6937
							],
							[
								6944,
								6959
							],
							[
								7248,
								7269
							],
							[
								7293,
								7303
							],
							[
								7333,
								7384
							],
							[
								7955,
								7990
							],
							[
								8087,
								8109
							],
							[
								8156,
								8161
							],
							[
								8261,
								8270
							],
							[
								8299,
								8303
							],
							[
								8331,
								8336
							],
							[
								8369,
								8373
							],
							[
								8405,
								8415
							],
							[
								8548,
								8558
							],
							[
								8728,
								8755
							],
							[
								9005,
								9020
							],
							[
								9094,
								9098
							],
							[
								9310,
								9319
							],
							[
								9514,
								9523
							],
							[
								10190,
								10195
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					457,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					458,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1189,
								1214
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1409,
								1413
							],
							[
								1469,
								1492
							],
							[
								1624,
								1633
							],
							[
								1823,
								1844
							],
							[
								1871,
								1875
							],
							[
								1952,
								1974
							],
							[
								2007,
								2011
							],
							[
								2069,
								2092
							],
							[
								2331,
								2361
							],
							[
								2839,
								2862
							],
							[
								3151,
								3185
							],
							[
								3198,
								3233
							],
							[
								3548,
								3580
							],
							[
								3623,
								3628
							],
							[
								3655,
								3679
							],
							[
								3816,
								3841
							],
							[
								3974,
								3997
							],
							[
								4130,
								4152
							],
							[
								4196,
								4223
							],
							[
								4297,
								4324
							],
							[
								4649,
								4667
							],
							[
								4815,
								4823
							],
							[
								5283,
								5311
							],
							[
								5491,
								5516
							],
							[
								5637,
								5671
							],
							[
								5828,
								5860
							],
							[
								6350,
								6375
							],
							[
								6476,
								6499
							],
							[
								6703,
								6729
							],
							[
								6872,
								6925
							],
							[
								6932,
								6937
							],
							[
								6944,
								6959
							],
							[
								7248,
								7269
							],
							[
								7293,
								7303
							],
							[
								7333,
								7384
							],
							[
								7955,
								7990
							],
							[
								8087,
								8109
							],
							[
								8156,
								8161
							],
							[
								8261,
								8270
							],
							[
								8299,
								8303
							],
							[
								8331,
								8336
							],
							[
								8369,
								8373
							],
							[
								8405,
								8415
							],
							[
								8548,
								8558
							],
							[
								8728,
								8755
							],
							[
								9005,
								9020
							],
							[
								9094,
								9098
							],
							[
								9310,
								9319
							],
							[
								9514,
								9523
							],
							[
								10190,
								10195
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					459,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					460,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					461,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					462,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					463,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					464,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					465,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					466,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					467,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					468,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					469,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					470,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					471,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					472,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AwAAAAAAAAAAAAAAjQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0DAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGdsb2JhbFRoaXMuY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAI0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					473,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					474,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					475,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACNAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooZ2xvYmFsVGhpcy5jb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					476,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					477,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					478,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					479,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					480,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								730,
								751
							],
							[
								900,
								909
							],
							[
								982,
								1015
							],
							[
								1091,
								1119
							],
							[
								1201,
								1226
							],
							[
								1266,
								1270
							],
							[
								1329,
								1357
							],
							[
								1397,
								1401
							],
							[
								1457,
								1480
							],
							[
								1612,
								1621
							],
							[
								1811,
								1832
							],
							[
								1859,
								1863
							],
							[
								1940,
								1962
							],
							[
								1995,
								1999
							],
							[
								2057,
								2080
							],
							[
								2319,
								2349
							],
							[
								2827,
								2850
							],
							[
								3139,
								3173
							],
							[
								3186,
								3221
							],
							[
								3536,
								3568
							],
							[
								3611,
								3616
							],
							[
								3643,
								3667
							],
							[
								3804,
								3829
							],
							[
								3962,
								3985
							],
							[
								4118,
								4140
							],
							[
								4184,
								4211
							],
							[
								4285,
								4312
							],
							[
								4637,
								4655
							],
							[
								4803,
								4811
							],
							[
								5271,
								5299
							],
							[
								5479,
								5504
							],
							[
								5625,
								5659
							],
							[
								5816,
								5848
							],
							[
								6338,
								6363
							],
							[
								6464,
								6487
							],
							[
								6691,
								6717
							],
							[
								6860,
								6913
							],
							[
								6920,
								6925
							],
							[
								6932,
								6947
							],
							[
								7236,
								7257
							],
							[
								7281,
								7291
							],
							[
								7321,
								7372
							],
							[
								7943,
								7978
							],
							[
								8075,
								8097
							],
							[
								8144,
								8149
							],
							[
								8249,
								8258
							],
							[
								8287,
								8291
							],
							[
								8319,
								8324
							],
							[
								8357,
								8361
							],
							[
								8393,
								8403
							],
							[
								8536,
								8546
							],
							[
								8716,
								8743
							],
							[
								8993,
								9008
							],
							[
								9082,
								9086
							],
							[
								9298,
								9307
							],
							[
								9502,
								9511
							],
							[
								10178,
								10183
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(globalThis.config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAjQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					481,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								700,
								721
							],
							[
								870,
								879
							],
							[
								952,
								985
							],
							[
								1061,
								1089
							],
							[
								1171,
								1196
							],
							[
								1236,
								1240
							],
							[
								1299,
								1327
							],
							[
								1367,
								1371
							],
							[
								1427,
								1450
							],
							[
								1582,
								1591
							],
							[
								1781,
								1802
							],
							[
								1829,
								1833
							],
							[
								1910,
								1932
							],
							[
								1965,
								1969
							],
							[
								2027,
								2050
							],
							[
								2289,
								2319
							],
							[
								2797,
								2820
							],
							[
								3109,
								3143
							],
							[
								3156,
								3181
							],
							[
								3496,
								3528
							],
							[
								3571,
								3576
							],
							[
								3603,
								3627
							],
							[
								3764,
								3789
							],
							[
								3922,
								3945
							],
							[
								4078,
								4100
							],
							[
								4144,
								4171
							],
							[
								4245,
								4272
							],
							[
								4597,
								4615
							],
							[
								4763,
								4771
							],
							[
								5231,
								5259
							],
							[
								5439,
								5464
							],
							[
								5585,
								5619
							],
							[
								5776,
								5808
							],
							[
								6298,
								6323
							],
							[
								6424,
								6447
							],
							[
								6651,
								6677
							],
							[
								6820,
								6873
							],
							[
								6880,
								6885
							],
							[
								6892,
								6907
							],
							[
								7196,
								7217
							],
							[
								7241,
								7251
							],
							[
								7281,
								7332
							],
							[
								7903,
								7938
							],
							[
								8035,
								8057
							],
							[
								8104,
								8109
							],
							[
								8209,
								8218
							],
							[
								8247,
								8251
							],
							[
								8279,
								8284
							],
							[
								8317,
								8321
							],
							[
								8353,
								8363
							],
							[
								8496,
								8506
							],
							[
								8676,
								8703
							],
							[
								8943,
								8958
							],
							[
								9032,
								9036
							],
							[
								9238,
								9247
							],
							[
								9442,
								9451
							],
							[
								10038,
								10043
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"( config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihnbG9iYWxUaGlzLmNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwMAAFEgPSBzID0+ClFBID0gcyA9PgpGaWVsZEluZGV4KGFyZykKU2F2ZUNvbmZpZygpCkxvYWRDb25maWcoKQoodiwgaSkgPT4KUGFydGl0aW9uQXJyYXkoYSwgc2l6ZSkKR2V0RmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZFZhbHVlKG4pCiAgZSA9PgpTZXRGaWVsZFZhbHVlKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRWYWx1ZShuYW1lKQpTZXRWYWx1ZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKU2V0RmllbGQoaSwgbnVtLCByb3VuZCA9IAooIGNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACDAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					482,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								697,
								718
							],
							[
								867,
								876
							],
							[
								949,
								982
							],
							[
								1058,
								1086
							],
							[
								1168,
								1193
							],
							[
								1233,
								1237
							],
							[
								1296,
								1324
							],
							[
								1364,
								1368
							],
							[
								1424,
								1447
							],
							[
								1579,
								1588
							],
							[
								1778,
								1799
							],
							[
								1826,
								1830
							],
							[
								1907,
								1929
							],
							[
								1962,
								1966
							],
							[
								2024,
								2047
							],
							[
								2286,
								2316
							],
							[
								2794,
								2817
							],
							[
								3106,
								3140
							],
							[
								3153,
								3177
							],
							[
								3492,
								3524
							],
							[
								3567,
								3572
							],
							[
								3599,
								3623
							],
							[
								3760,
								3785
							],
							[
								3918,
								3941
							],
							[
								4074,
								4096
							],
							[
								4140,
								4167
							],
							[
								4241,
								4268
							],
							[
								4593,
								4611
							],
							[
								4759,
								4767
							],
							[
								5227,
								5255
							],
							[
								5435,
								5460
							],
							[
								5581,
								5615
							],
							[
								5772,
								5804
							],
							[
								6294,
								6319
							],
							[
								6420,
								6443
							],
							[
								6647,
								6673
							],
							[
								6816,
								6869
							],
							[
								6876,
								6881
							],
							[
								6888,
								6903
							],
							[
								7192,
								7213
							],
							[
								7237,
								7247
							],
							[
								7277,
								7328
							],
							[
								7899,
								7934
							],
							[
								8031,
								8053
							],
							[
								8100,
								8105
							],
							[
								8205,
								8214
							],
							[
								8243,
								8247
							],
							[
								8275,
								8280
							],
							[
								8313,
								8317
							],
							[
								8349,
								8359
							],
							[
								8492,
								8502
							],
							[
								8672,
								8699
							],
							[
								8938,
								8953
							],
							[
								9027,
								9031
							],
							[
								9232,
								9241
							],
							[
								9436,
								9445
							],
							[
								9987,
								9992
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCiggY29uZmlnLnByZWNpc2lvbiA/PyAzKSkKUm91bmRGdW5jdGlvbihwcmVjID0gMykKbiA9PgpDYWxjRnJlcXVlbmN5KCkKQ2FsY0luZHVjdGFuY2UoKQpDYWxjQ2FwYWNpdHkoKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50KQpFeHAyVW5pdChleHBvbmVudCkKVW5pdChzdHIpCihbYV0pID0+Ck9uSW5wdXQoeyB0YXJnZXQgfSkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlVmFsdWUodmFsdWUsIG5hbWUpClJlYWRGaWVsZHMobmFtZSkKKHsgbmFtZSwgdmFsdWUgfSwgaSkgPT4KV3JpdGVGaWVsZHMobmFtZSkKRm9ybWF0TnVtYmVyKG51bSwgZXhwLCB1bml0LCByb3VuZCA9IGEgPT4gYS4KKDEyKS4KKC9cLjAqJC9nLCAnJykpCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKQ29weVRvQ2xpcGJvYXJkKHN0cikKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQogIGUgPT4KZXZlbnQgPT4KZXZlbnQgPT4KKCkgPT4AAAAAAAAAAIIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					483,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					484,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								697,
								718
							],
							[
								867,
								876
							],
							[
								949,
								982
							],
							[
								1058,
								1086
							],
							[
								1168,
								1193
							],
							[
								1233,
								1237
							],
							[
								1296,
								1324
							],
							[
								1364,
								1368
							],
							[
								1424,
								1447
							],
							[
								1579,
								1588
							],
							[
								1778,
								1799
							],
							[
								1826,
								1830
							],
							[
								1907,
								1929
							],
							[
								1962,
								1966
							],
							[
								2024,
								2047
							],
							[
								2286,
								2316
							],
							[
								2794,
								2817
							],
							[
								3106,
								3140
							],
							[
								3153,
								3177
							],
							[
								3492,
								3524
							],
							[
								3567,
								3572
							],
							[
								3599,
								3623
							],
							[
								3760,
								3785
							],
							[
								3918,
								3941
							],
							[
								4074,
								4096
							],
							[
								4140,
								4167
							],
							[
								4241,
								4268
							],
							[
								4593,
								4611
							],
							[
								4759,
								4767
							],
							[
								5227,
								5255
							],
							[
								5435,
								5460
							],
							[
								5581,
								5615
							],
							[
								5772,
								5804
							],
							[
								6294,
								6319
							],
							[
								6420,
								6443
							],
							[
								6647,
								6673
							],
							[
								6816,
								6869
							],
							[
								6876,
								6881
							],
							[
								6888,
								6903
							],
							[
								7192,
								7213
							],
							[
								7237,
								7247
							],
							[
								7277,
								7328
							],
							[
								7899,
								7934
							],
							[
								8031,
								8053
							],
							[
								8100,
								8105
							],
							[
								8205,
								8214
							],
							[
								8243,
								8247
							],
							[
								8275,
								8280
							],
							[
								8313,
								8317
							],
							[
								8349,
								8359
							],
							[
								8492,
								8502
							],
							[
								8672,
								8699
							],
							[
								8938,
								8953
							],
							[
								9027,
								9031
							],
							[
								9232,
								9241
							],
							[
								9436,
								9445
							],
							[
								9987,
								9992
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					485,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								697,
								718
							],
							[
								867,
								876
							],
							[
								949,
								982
							],
							[
								1058,
								1086
							],
							[
								1168,
								1193
							],
							[
								1233,
								1237
							],
							[
								1296,
								1324
							],
							[
								1364,
								1368
							],
							[
								1424,
								1447
							],
							[
								1579,
								1588
							],
							[
								1778,
								1799
							],
							[
								1826,
								1830
							],
							[
								1907,
								1929
							],
							[
								1962,
								1966
							],
							[
								2024,
								2047
							],
							[
								2286,
								2316
							],
							[
								2794,
								2817
							],
							[
								3106,
								3140
							],
							[
								3153,
								3177
							],
							[
								3492,
								3524
							],
							[
								3567,
								3572
							],
							[
								3599,
								3623
							],
							[
								3760,
								3785
							],
							[
								3918,
								3941
							],
							[
								4074,
								4096
							],
							[
								4140,
								4167
							],
							[
								4241,
								4268
							],
							[
								4593,
								4611
							],
							[
								4759,
								4767
							],
							[
								5227,
								5255
							],
							[
								5435,
								5460
							],
							[
								5581,
								5615
							],
							[
								5772,
								5804
							],
							[
								6294,
								6319
							],
							[
								6420,
								6443
							],
							[
								6647,
								6673
							],
							[
								6816,
								6869
							],
							[
								6876,
								6881
							],
							[
								6888,
								6903
							],
							[
								7192,
								7213
							],
							[
								7237,
								7247
							],
							[
								7277,
								7328
							],
							[
								7899,
								7934
							],
							[
								8031,
								8053
							],
							[
								8100,
								8105
							],
							[
								8205,
								8214
							],
							[
								8243,
								8247
							],
							[
								8275,
								8280
							],
							[
								8313,
								8317
							],
							[
								8349,
								8359
							],
							[
								8492,
								8502
							],
							[
								8672,
								8699
							],
							[
								8938,
								8953
							],
							[
								9027,
								9031
							],
							[
								9232,
								9241
							],
							[
								9436,
								9445
							],
							[
								9987,
								9992
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					486,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					487,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								394,
								418
							],
							[
								490,
								511
							],
							[
								697,
								718
							],
							[
								867,
								876
							],
							[
								949,
								982
							],
							[
								1058,
								1086
							],
							[
								1168,
								1193
							],
							[
								1233,
								1237
							],
							[
								1296,
								1324
							],
							[
								1364,
								1368
							],
							[
								1424,
								1447
							],
							[
								1579,
								1588
							],
							[
								1778,
								1799
							],
							[
								1826,
								1830
							],
							[
								1907,
								1929
							],
							[
								1962,
								1966
							],
							[
								2024,
								2047
							],
							[
								2286,
								2316
							],
							[
								2794,
								2817
							],
							[
								3106,
								3140
							],
							[
								3153,
								3177
							],
							[
								3492,
								3524
							],
							[
								3567,
								3572
							],
							[
								3599,
								3623
							],
							[
								3760,
								3785
							],
							[
								3918,
								3941
							],
							[
								4074,
								4096
							],
							[
								4140,
								4167
							],
							[
								4241,
								4268
							],
							[
								4593,
								4611
							],
							[
								4759,
								4767
							],
							[
								5227,
								5255
							],
							[
								5435,
								5460
							],
							[
								5581,
								5615
							],
							[
								5772,
								5804
							],
							[
								6294,
								6319
							],
							[
								6420,
								6443
							],
							[
								6647,
								6673
							],
							[
								6816,
								6869
							],
							[
								6876,
								6881
							],
							[
								6888,
								6903
							],
							[
								7192,
								7213
							],
							[
								7237,
								7247
							],
							[
								7277,
								7328
							],
							[
								7899,
								7934
							],
							[
								8031,
								8053
							],
							[
								8100,
								8105
							],
							[
								8205,
								8214
							],
							[
								8243,
								8247
							],
							[
								8275,
								8280
							],
							[
								8313,
								8317
							],
							[
								8349,
								8359
							],
							[
								8492,
								8502
							],
							[
								8672,
								8699
							],
							[
								8938,
								8953
							],
							[
								9027,
								9031
							],
							[
								9232,
								9241
							],
							[
								9436,
								9445
							],
							[
								9987,
								9992
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					488,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								392,
								416
							],
							[
								488,
								509
							],
							[
								695,
								716
							],
							[
								865,
								874
							],
							[
								947,
								980
							],
							[
								1056,
								1084
							],
							[
								1166,
								1191
							],
							[
								1231,
								1235
							],
							[
								1294,
								1322
							],
							[
								1362,
								1366
							],
							[
								1422,
								1445
							],
							[
								1577,
								1586
							],
							[
								1776,
								1797
							],
							[
								1824,
								1828
							],
							[
								1905,
								1927
							],
							[
								1960,
								1964
							],
							[
								2022,
								2045
							],
							[
								2284,
								2314
							],
							[
								2792,
								2815
							],
							[
								3104,
								3138
							],
							[
								3151,
								3175
							],
							[
								3490,
								3522
							],
							[
								3565,
								3570
							],
							[
								3597,
								3621
							],
							[
								3758,
								3783
							],
							[
								3916,
								3939
							],
							[
								4072,
								4094
							],
							[
								4138,
								4165
							],
							[
								4239,
								4266
							],
							[
								4591,
								4609
							],
							[
								4757,
								4765
							],
							[
								5225,
								5253
							],
							[
								5433,
								5458
							],
							[
								5579,
								5613
							],
							[
								5770,
								5802
							],
							[
								6292,
								6317
							],
							[
								6418,
								6441
							],
							[
								6645,
								6671
							],
							[
								6814,
								6867
							],
							[
								6874,
								6879
							],
							[
								6886,
								6901
							],
							[
								7190,
								7211
							],
							[
								7235,
								7245
							],
							[
								7275,
								7326
							],
							[
								7897,
								7932
							],
							[
								8029,
								8051
							],
							[
								8098,
								8103
							],
							[
								8203,
								8212
							],
							[
								8241,
								8245
							],
							[
								8273,
								8278
							],
							[
								8311,
								8315
							],
							[
								8347,
								8357
							],
							[
								8490,
								8500
							],
							[
								8670,
								8697
							],
							[
								8936,
								8951
							],
							[
								9025,
								9029
							],
							[
								9230,
								9239
							],
							[
								9434,
								9443
							],
							[
								9985,
								9990
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAggMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIDAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					491,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwMAAAAAAABjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								375,
								399
							],
							[
								471,
								492
							],
							[
								678,
								699
							],
							[
								848,
								857
							],
							[
								930,
								963
							],
							[
								1039,
								1067
							],
							[
								1149,
								1174
							],
							[
								1214,
								1218
							],
							[
								1277,
								1305
							],
							[
								1345,
								1349
							],
							[
								1405,
								1428
							],
							[
								1560,
								1569
							],
							[
								1759,
								1780
							],
							[
								1807,
								1811
							],
							[
								1888,
								1910
							],
							[
								1943,
								1947
							],
							[
								2005,
								2028
							],
							[
								2267,
								2297
							],
							[
								2775,
								2798
							],
							[
								3087,
								3121
							],
							[
								3134,
								3158
							],
							[
								3473,
								3505
							],
							[
								3548,
								3553
							],
							[
								3580,
								3604
							],
							[
								3741,
								3766
							],
							[
								3899,
								3922
							],
							[
								4055,
								4077
							],
							[
								4121,
								4148
							],
							[
								4222,
								4249
							],
							[
								4574,
								4592
							],
							[
								4740,
								4748
							],
							[
								5208,
								5236
							],
							[
								5416,
								5441
							],
							[
								5562,
								5596
							],
							[
								5753,
								5785
							],
							[
								6275,
								6300
							],
							[
								6401,
								6424
							],
							[
								6628,
								6654
							],
							[
								6797,
								6850
							],
							[
								6857,
								6862
							],
							[
								6869,
								6884
							],
							[
								7173,
								7194
							],
							[
								7218,
								7228
							],
							[
								7258,
								7309
							],
							[
								7880,
								7915
							],
							[
								8012,
								8034
							],
							[
								8081,
								8086
							],
							[
								8186,
								8195
							],
							[
								8224,
								8228
							],
							[
								8256,
								8261
							],
							[
								8294,
								8298
							],
							[
								8330,
								8340
							],
							[
								8473,
								8483
							],
							[
								8653,
								8680
							],
							[
								8936,
								8951
							],
							[
								9025,
								9029
							],
							[
								9230,
								9239
							],
							[
								9434,
								9443
							],
							[
								9985,
								9990
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					493,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					494,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								375,
								399
							],
							[
								471,
								492
							],
							[
								678,
								699
							],
							[
								848,
								857
							],
							[
								930,
								963
							],
							[
								1039,
								1067
							],
							[
								1149,
								1174
							],
							[
								1214,
								1218
							],
							[
								1277,
								1305
							],
							[
								1345,
								1349
							],
							[
								1405,
								1428
							],
							[
								1560,
								1569
							],
							[
								1759,
								1780
							],
							[
								1807,
								1811
							],
							[
								1888,
								1910
							],
							[
								1943,
								1947
							],
							[
								2005,
								2028
							],
							[
								2267,
								2297
							],
							[
								2775,
								2798
							],
							[
								3087,
								3121
							],
							[
								3134,
								3158
							],
							[
								3473,
								3505
							],
							[
								3548,
								3553
							],
							[
								3580,
								3604
							],
							[
								3741,
								3766
							],
							[
								3899,
								3922
							],
							[
								4055,
								4077
							],
							[
								4121,
								4148
							],
							[
								4222,
								4249
							],
							[
								4574,
								4592
							],
							[
								4740,
								4748
							],
							[
								5208,
								5236
							],
							[
								5416,
								5441
							],
							[
								5562,
								5596
							],
							[
								5753,
								5785
							],
							[
								6275,
								6300
							],
							[
								6401,
								6424
							],
							[
								6628,
								6654
							],
							[
								6797,
								6850
							],
							[
								6857,
								6862
							],
							[
								6869,
								6884
							],
							[
								7173,
								7194
							],
							[
								7218,
								7228
							],
							[
								7258,
								7309
							],
							[
								7880,
								7915
							],
							[
								8012,
								8034
							],
							[
								8081,
								8086
							],
							[
								8186,
								8195
							],
							[
								8224,
								8228
							],
							[
								8256,
								8261
							],
							[
								8294,
								8298
							],
							[
								8330,
								8340
							],
							[
								8473,
								8483
							],
							[
								8653,
								8680
							],
							[
								8936,
								8951
							],
							[
								9025,
								9029
							],
							[
								9230,
								9239
							],
							[
								9434,
								9443
							],
							[
								9985,
								9990
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"AQAAAAAAAAAAAAAAggMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					495,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								82,
								91
							],
							[
								375,
								399
							],
							[
								471,
								492
							],
							[
								678,
								699
							],
							[
								848,
								857
							],
							[
								930,
								963
							],
							[
								1039,
								1067
							],
							[
								1149,
								1174
							],
							[
								1214,
								1218
							],
							[
								1277,
								1305
							],
							[
								1345,
								1349
							],
							[
								1405,
								1428
							],
							[
								1560,
								1569
							],
							[
								1759,
								1780
							],
							[
								1807,
								1811
							],
							[
								1888,
								1910
							],
							[
								1943,
								1947
							],
							[
								2005,
								2028
							],
							[
								2267,
								2297
							],
							[
								2775,
								2798
							],
							[
								3087,
								3121
							],
							[
								3134,
								3158
							],
							[
								3473,
								3505
							],
							[
								3548,
								3553
							],
							[
								3580,
								3604
							],
							[
								3741,
								3766
							],
							[
								3899,
								3922
							],
							[
								4055,
								4077
							],
							[
								4121,
								4148
							],
							[
								4222,
								4249
							],
							[
								4574,
								4592
							],
							[
								4740,
								4748
							],
							[
								5208,
								5236
							],
							[
								5416,
								5441
							],
							[
								5562,
								5596
							],
							[
								5753,
								5785
							],
							[
								6275,
								6300
							],
							[
								6401,
								6424
							],
							[
								6628,
								6654
							],
							[
								6797,
								6850
							],
							[
								6857,
								6862
							],
							[
								6869,
								6884
							],
							[
								7173,
								7194
							],
							[
								7218,
								7228
							],
							[
								7258,
								7309
							],
							[
								7880,
								7915
							],
							[
								8012,
								8034
							],
							[
								8081,
								8086
							],
							[
								8186,
								8195
							],
							[
								8224,
								8228
							],
							[
								8256,
								8261
							],
							[
								8294,
								8298
							],
							[
								8330,
								8340
							],
							[
								8473,
								8483
							],
							[
								8653,
								8680
							],
							[
								8919,
								8934
							],
							[
								9030,
								9034
							],
							[
								9235,
								9244
							],
							[
								9439,
								9448
							],
							[
								9990,
								9995
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = s =>",
							"function FieldIndex(arg)",
							"function SaveConfig()",
							"function LoadConfig()",
							"(v, i) =>",
							"function* PartitionArray(a, size)",
							"function GetFieldElements(n)",
							"function GetFieldValue(n)",
							"e =>",
							"function SetFieldValue(n, v)",
							"e =>",
							"function SelectField(i)",
							"(e, x) =>",
							"function GuessField()",
							"v =>",
							"function GetSelected()",
							"e =>",
							"function GetValue(name)",
							"function SetValue(name, value)",
							"function CalcThompson()",
							"function SetField(i, num, round = ",
							"(config.precision ?? 3))",
							"function RoundFunction(prec = 3)",
							" n =>",
							"function CalcFrequency()",
							"function CalcInductance()",
							"function CalcCapacity()",
							"function Exponent(num)",
							"function Thousand(exponent)",
							"function Exp2Unit(exponent)",
							"function Unit(str)",
							"([a]) =>",
							"function OnInput({ target })",
							"function ClearValues(idx)",
							"function ProcessValue(value, name)",
							"function ParseValue(value, name)",
							"function ReadFields(name)",
							"({ name, value }, i) =>",
							"function WriteFields(name)",
							"function FormatNumber(num, exp, unit, round = a => a.",
							"(12).",
							"(/\\.0*$/g, ''))",
							" function WaitFor(ms)",
							"resolve =>",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							"async function CopyToClipboard(str)",
							"function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							"function ChangePrecision(p)",
							"function Init()",
							"e =>",
							" event =>",
							" event =>",
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACCAwAAUSA9IHMgPT4KUUEgPSBzID0+CkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCih2LCBpKSA9PgpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpHZXRGaWVsZEVsZW1lbnRzKG4pCkdldEZpZWxkVmFsdWUobikKICBlID0+ClNldEZpZWxkVmFsdWUobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFZhbHVlKG5hbWUpClNldFZhbHVlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpTZXRGaWVsZChpLCBudW0sIHJvdW5kID0gCihjb25maWcucHJlY2lzaW9uID8/IDMpKQpSb3VuZEZ1bmN0aW9uKHByZWMgPSAzKQpuID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0eSgpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQpCkV4cDJVbml0KGV4cG9uZW50KQpVbml0KHN0cikKKFthXSkgPT4KT25JbnB1dCh7IHRhcmdldCB9KQpDbGVhclZhbHVlcyhpZHgpClByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpXcml0ZUZpZWxkcyhuYW1lKQpGb3JtYXROdW1iZXIobnVtLCBleHAsIHVuaXQsIHJvdW5kID0gYSA9PiBhLgooMTIpLgooL1wuMCokL2csICcnKSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpTZXR1cEZpZWxkcygpCigpID0+CihhLCBpKSA9PgogIGUgPT4KZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgpDaGFuZ2VQcmVjaXNpb24ocCkKSW5pdCgpCiAgZSA9PgpldmVudCA9PgpldmVudCA9PgooKSA9PgAAAAAAAAAAggMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIDAABRID0gcyA9PgpRQSA9IHMgPT4KRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKKHYsIGkpID0+ClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkdldEZpZWxkRWxlbWVudHMobikKR2V0RmllbGRWYWx1ZShuKQogIGUgPT4KU2V0RmllbGRWYWx1ZShuLCB2KQogIGUgPT4KU2VsZWN0RmllbGQoaSkKKGUsIHgpID0+Ckd1ZXNzRmllbGQoKQogIHYgPT4KR2V0U2VsZWN0ZWQoKQogIGUgPT4KR2V0VmFsdWUobmFtZSkKU2V0VmFsdWUobmFtZSwgdmFsdWUpCkNhbGNUaG9tcHNvbigpClNldEZpZWxkKGksIG51bSwgcm91bmQgPSAKKGNvbmZpZy5wcmVjaXNpb24gPz8gMykpClJvdW5kRnVuY3Rpb24ocHJlYyA9IDMpCm4gPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXR5KCkKRXhwb25lbnQobnVtKQpUaG91c2FuZChleHBvbmVudCkKRXhwMlVuaXQoZXhwb25lbnQpClVuaXQoc3RyKQooW2FdKSA9PgpPbklucHV0KHsgdGFyZ2V0IH0pCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CldyaXRlRmllbGRzKG5hbWUpCkZvcm1hdE51bWJlcihudW0sIGV4cCwgdW5pdCwgcm91bmQgPSBhID0+IGEuCigxMikuCigvXC4wKiQvZywgJycpKQpXYWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApCkNvcHlUb0NsaXBib2FyZChzdHIpClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKICBlID0+CmV2ZW50ID0+CmV2ZW50ID0+CigpID0+AAAAAAAAAACCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "src/app.js",
			"settings":
			{
				"buffer_size": 10513,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3484,
					1,
					"cut",
					null,
					"AQAAAMwgAAAAAAAAzCAAAAAAAAAMAAAAUSgnI2ZpZWxkcycp",
					"AQAAAAAAAAABAAAAzCAAAAAAAADYIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3489,
					1,
					"paste",
					null,
					"AgAAAOggAAAAAAAA9CAAAAAAAAAAAAAA9CAAAAAAAAD0IAAAAAAAAAYAAABmaWVsZHM",
					"AQAAAAAAAAABAAAA6CAAAAAAAADuIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3502,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMEgAAAAAAAAwiAAAAAAAAAAAAAAwiAAAAAAAADCIAAAAAAAAA0AAAAgIGZpZWxkcyA9IDsK",
					"AQAAAAAAAAABAAAAwSAAAAAAAADOIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3503,
					1,
					"left_delete",
					null,
					"AQAAAMEgAAAAAAAAwSAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAwiAAAAAAAADCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3535,
					1,
					"paste",
					null,
					"AgAAAC0FAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA5BQAAAAAAAAYAAABmaWVsZHM",
					"AQAAAAAAAAABAAAALQUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3557,
					3,
					"left_delete",
					null,
					"AwAAAPAEAAAAAAAA8AQAAAAAAAAcAAAAIGlmKCFmaWVsZHMpIFNldHVwRmllbGRzKCk7Cu8EAAAAAAAA7wQAAAAAAAABAAAAIO4EAAAAAAAA7gQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8AQAAAAAAAAMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3562,
					3,
					"right_delete",
					null,
					"AwAAAIwBAAAAAAAAjAEAAAAAAAAGAAAAZmllbGRzjAEAAAAAAACMAQAAAAAAAAEAAAAsjAEAAAAAAACMAQAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAAjAEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3584,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAKAUAAAAAAAAoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3617,
					1,
					"cut",
					null,
					"AQAAACsBAAAAAAAAKwEAAAAAAAAQAAAAWydIJywgJ0YnLCAnSHonXQ",
					"AQAAAAAAAAABAAAAKwEAAAAAAAA7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					3622,
					1,
					"paste",
					null,
					"AgAAAMMcAAAAAAAA0xwAAAAAAAAAAAAA0xwAAAAAAADTHAAAAAAAAAUAAAB1bml0cw",
					"AQAAAAAAAAABAAAAwxwAAAAAAADIHAAAAAAAAAAAAAAAAPC/"
				],
				[
					3630,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAeAQAAAAAAABAAAABjb25zdCB1bml0cyA9IDsK",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3650,
					1,
					"left_delete",
					null,
					"AQAAAB0BAAAAAAAAHQEAAAAAAAAoAAAAIGNvbnN0IG5hbWVzID0gT2JqZWN0LmtleXModmFsdWVJbmRleCk7Cg",
					"AQAAAAAAAAABAAAAHQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3668,
					1,
					"insert",
					{
						"characters": "QA()"
					},
					"BQAAALMNAAAAAAAAtA0AAAAAAAAAAAAAtA0AAAAAAAC0DQAAAAAAAA0AAABpbnB1dEVsZW1lbnRztA0AAAAAAAC1DQAAAAAAAAAAAAC1DQAAAAAAALYNAAAAAAAAAAAAALYNAAAAAAAAtw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw0AAAAAAADADQAAAAAAAAAAAAAAAPC/"
				],
				[
					3669,
					1,
					"left_delete",
					null,
					"AQAAALYNAAAAAAAAtg0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAtw0AAAAAAAC3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					3670,
					1,
					"insert",
					{
						"characters": "'input')"
					},
					"CAAAALYNAAAAAAAAtw0AAAAAAAAAAAAAtw0AAAAAAAC4DQAAAAAAAAAAAAC4DQAAAAAAALkNAAAAAAAAAAAAALkNAAAAAAAAug0AAAAAAAAAAAAAug0AAAAAAAC7DQAAAAAAAAAAAAC7DQAAAAAAALwNAAAAAAAAAAAAALwNAAAAAAAAvQ0AAAAAAAAAAAAAvQ0AAAAAAAC+DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtg0AAAAAAAC2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					3682,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAeAQAAAAAAACMAAABjb25zdCBpbnB1dEVsZW1lbnRzID0gUUEoJ2lucHV0Jyk7Cg",
					"AQAAAAAAAAABAAAAHQEAAAAAAABAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3687,
					2,
					"right_delete",
					null,
					"AgAAAPwpAAAAAAAA/CkAAAAAAAANAAAAaW5wdXRFbGVtZW50c/wpAAAAAAAA/CkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA/CkAAAAAAAAJKgAAAAAAAAAAAAAAAPC/"
				],
				[
					3699,
					1,
					"",
					null,
					"3wAAAPspAAAAAAAA/CkAAAAAAAACAAAAICD6JwAAAAAAAPsnAAAAAAAAAgAAACAg5ycAAAAAAADoJwAAAAAAAAIAAAAgINMnAAAAAAAA1CcAAAAAAAACAAAAICDOJwAAAAAAAM8nAAAAAAAAAgAAACAguicAAAAAAAC7JwAAAAAAAAQAAAAgICAgfycAAAAAAACAJwAAAAAAAAQAAAAgICAgZScAAAAAAABmJwAAAAAAAAQAAAAgICAgQScAAAAAAABCJwAAAAAAAAIAAAAgIDwnAAAAAAAAPScAAAAAAAACAAAAICAQJwAAAAAAABEnAAAAAAAABAAAACAgICCcJgAAAAAAAJ0mAAAAAAAABAAAACAgICB0JgAAAAAAAHUmAAAAAAAAAgAAACAgbyYAAAAAAABwJgAAAAAAAAIAAAAgIDImAAAAAAAAMyYAAAAAAAAEAAAAICAgIPklAAAAAAAA+iUAAAAAAAAEAAAAICAgINAlAAAAAAAA0SUAAAAAAAACAAAAICDJJQAAAAAAAMolAAAAAAAAAgAAACAgrCUAAAAAAACtJQAAAAAAAAQAAAAgICAgjSUAAAAAAACOJQAAAAAAAAQAAAAgICAgbyUAAAAAAABwJQAAAAAAAAQAAAAgICAgNyUAAAAAAAA4JQAAAAAAAAIAAAAgIDAlAAAAAAAAMSUAAAAAAAACAAAAICD2JAAAAAAAAPckAAAAAAAABAAAACAgICDfJAAAAAAAAOAkAAAAAAAABAAAACAgICDBJAAAAAAAAMIkAAAAAAAABAAAACAgICCjJAAAAAAAAKQkAAAAAAAABAAAACAgICBnJAAAAAAAAGgkAAAAAAAAAgAAACAgQiQAAAAAAABDJAAAAAAAAAIAAAAgIDAkAAAAAAAAMSQAAAAAAAACAAAAICApJAAAAAAAACokAAAAAAAAAgAAACAg+CMAAAAAAAD5IwAAAAAAAAQAAAAgICAgxiMAAAAAAADHIwAAAAAAAAQAAAAgICAgqSMAAAAAAACqIwAAAAAAAAIAAAAgIJIjAAAAAAAAkyMAAAAAAAACAAAAICB4IwAAAAAAAHkjAAAAAAAAAgAAACAgUyMAAAAAAABUIwAAAAAAAAIAAAAgIEEjAAAAAAAAQiMAAAAAAAAEAAAAICAgIC0jAAAAAAAALiMAAAAAAAAEAAAAICAgICUjAAAAAAAAJiMAAAAAAAACAAAAICDbIgAAAAAAANwiAAAAAAAAAgAAACAguCIAAAAAAAC5IgAAAAAAAAIAAAAgIJEiAAAAAAAAkiIAAAAAAAACAAAAICBvIgAAAAAAAHAiAAAAAAAAAgAAACAgSSIAAAAAAABKIgAAAAAAAAIAAAAgIEAiAAAAAAAAQSIAAAAAAAAEAAAAICAgIDkiAAAAAAAAOiIAAAAAAAAEAAAAICAgIB8iAAAAAAAAICIAAAAAAAAGAAAAICAgICAgxyEAAAAAAADIIQAAAAAAAAYAAAAgICAgICCqIQAAAAAAAKshAAAAAAAABgAAACAgICAgIJkhAAAAAAAAmiEAAAAAAAAEAAAAICAgIIkhAAAAAAAAiiEAAAAAAAAEAAAAICAgIGchAAAAAAAAaCEAAAAAAAACAAAAICBgIQAAAAAAAGEhAAAAAAAAAgAAACAg3CAAAAAAAADdIAAAAAAAAAQAAAAgICAgiiAAAAAAAACLIAAAAAAAAAQAAAAgICAgQSAAAAAAAABCIAAAAAAAAAIAAAAgIDwgAAAAAAAAPSAAAAAAAAACAAAAICAwIAAAAAAAADEgAAAAAAAABAAAACAgICAGIAAAAAAAAAcgAAAAAAAABAAAACAgICDpHwAAAAAAAOofAAAAAAAAAgAAACAgrB8AAAAAAACtHwAAAAAAAAIAAAAgIHIfAAAAAAAAcx8AAAAAAAACAAAAICA0HwAAAAAAADUfAAAAAAAAAgAAACAg5h4AAAAAAADnHgAAAAAAAAIAAAAgINAeAAAAAAAA0R4AAAAAAAACAAAAICDJHgAAAAAAAMoeAAAAAAAAAgAAACAguB4AAAAAAAC5HgAAAAAAAAQAAAAgICAgjx4AAAAAAACQHgAAAAAAAAQAAAAgICAgdB4AAAAAAAB1HgAAAAAAAAIAAAAgIDweAAAAAAAAPR4AAAAAAAACAAAAICAPHgAAAAAAABAeAAAAAAAAAgAAACAg+R0AAAAAAAD6HQAAAAAAAAIAAAAgILcdAAAAAAAAuB0AAAAAAAACAAAAICCyHQAAAAAAALMdAAAAAAAAAgAAACAgiB0AAAAAAACJHQAAAAAAAAQAAAAgICAgUB0AAAAAAABRHQAAAAAAAAQAAAAgICAgMB0AAAAAAAAxHQAAAAAAAAIAAAAgIBQdAAAAAAAAFR0AAAAAAAACAAAAICChHAAAAAAAAKIcAAAAAAAAAgAAACAgLhwAAAAAAAAvHAAAAAAAAAIAAAAgINcbAAAAAAAA2BsAAAAAAAACAAAAICC2GwAAAAAAALcbAAAAAAAAAgAAACAgnhsAAAAAAACfGwAAAAAAAAIAAAAgIGsbAAAAAAAAbBsAAAAAAAACAAAAICCmGgAAAAAAAKcaAAAAAAAAAgAAACAghRoAAAAAAACGGgAAAAAAAAIAAAAgIF0aAAAAAAAAXhoAAAAAAAAEAAAAICAgIJ8ZAAAAAAAAoBkAAAAAAAAGAAAAICAgICAgeBkAAAAAAAB5GQAAAAAAAAQAAAAgICAgZxkAAAAAAABoGQAAAAAAAAQAAAAgICAgWRkAAAAAAABaGQAAAAAAAAIAAAAgIEQZAAAAAAAARRkAAAAAAAACAAAAICAjGQAAAAAAACQZAAAAAAAAAgAAACAgABkAAAAAAAABGQAAAAAAAAIAAAAgIO4YAAAAAAAA7xgAAAAAAAAEAAAAICAgIL8YAAAAAAAAwBgAAAAAAAAEAAAAICAgIFQYAAAAAAAAVRgAAAAAAAAEAAAAICAgIO0XAAAAAAAA7hcAAAAAAAAEAAAAICAgILUXAAAAAAAAthcAAAAAAAAEAAAAICAgIIcXAAAAAAAAiBcAAAAAAAAEAAAAICAgIHMXAAAAAAAAdBcAAAAAAAACAAAAICBBFwAAAAAAAEIXAAAAAAAAAgAAACAgIBcAAAAAAAAhFwAAAAAAAAIAAAAgIPYWAAAAAAAA9xYAAAAAAAACAAAAICDCFgAAAAAAAMMWAAAAAAAABAAAACAgICCzFgAAAAAAALQWAAAAAAAAAgAAACAgjxYAAAAAAACQFgAAAAAAAAQAAAAgICAgaxYAAAAAAABsFgAAAAAAAAQAAAAgICAgYxYAAAAAAABkFgAAAAAAAAIAAAAgIMgVAAAAAAAAyRUAAAAAAAACAAAAICClFQAAAAAAAKYVAAAAAAAAAgAAACAgiRUAAAAAAACKFQAAAAAAAAQAAAAgICAgWBUAAAAAAABZFQAAAAAAAAQAAAAgICAgPhUAAAAAAAA/FQAAAAAAAAIAAAAgIB0VAAAAAAAAHhUAAAAAAAACAAAAICD7FAAAAAAAAPwUAAAAAAAAAgAAACAgwxQAAAAAAADEFAAAAAAAAAIAAAAgIL4UAAAAAAAAvxQAAAAAAAACAAAAICCfFAAAAAAAAKAUAAAAAAAABAAAACAgICCBFAAAAAAAAIIUAAAAAAAABAAAACAgICBjFAAAAAAAAGQUAAAAAAAABAAAACAgICBFFAAAAAAAAEYUAAAAAAAABAAAACAgICAoFAAAAAAAACkUAAAAAAAABAAAACAgICAJFAAAAAAAAAoUAAAAAAAABAAAACAgICDqEwAAAAAAAOsTAAAAAAAABAAAACAgICDLEwAAAAAAAMwTAAAAAAAABAAAACAgICCrEwAAAAAAAKwTAAAAAAAABAAAACAgICCLEwAAAAAAAIwTAAAAAAAABAAAACAgICBrEwAAAAAAAGwTAAAAAAAABAAAACAgICBAEwAAAAAAAEETAAAAAAAAAgAAACAgAxMAAAAAAAAEEwAAAAAAAAIAAAAgIPMSAAAAAAAA9BIAAAAAAAACAAAAICCDEgAAAAAAAIQSAAAAAAAAAgAAACAgVRIAAAAAAABWEgAAAAAAAAIAAAAgIDkSAAAAAAAAOhIAAAAAAAACAAAAICAgEgAAAAAAACESAAAAAAAABAAAACAgICAHEgAAAAAAAAgSAAAAAAAABAAAACAgICDvEQAAAAAAAPARAAAAAAAABAAAACAgICDXEQAAAAAAANgRAAAAAAAABAAAACAgICC/EQAAAAAAAMARAAAAAAAABAAAACAgICCoEQAAAAAAAKkRAAAAAAAABAAAACAgICCPEQAAAAAAAJARAAAAAAAABAAAACAgICB2EQAAAAAAAHcRAAAAAAAABAAAACAgICBdEQAAAAAAAF4RAAAAAAAABAAAACAgICBDEQAAAAAAAEQRAAAAAAAABAAAACAgICApEQAAAAAAACoRAAAAAAAABAAAACAgICAPEQAAAAAAABARAAAAAAAABAAAACAgICDZEAAAAAAAANoQAAAAAAAAAgAAACAgdBAAAAAAAAB1EAAAAAAAAAIAAAAgIC0QAAAAAAAALhAAAAAAAAACAAAAICD9DwAAAAAAAP4PAAAAAAAAAgAAACAg3g8AAAAAAADfDwAAAAAAAAIAAAAgIJIPAAAAAAAAkw8AAAAAAAACAAAAICBhDwAAAAAAAGIPAAAAAAAAAgAAACAgQg8AAAAAAABDDwAAAAAAAAIAAAAgIPYOAAAAAAAA9w4AAAAAAAACAAAAICDDDgAAAAAAAMQOAAAAAAAAAgAAACAgpA4AAAAAAAClDgAAAAAAAAIAAAAgIFQOAAAAAAAAVQ4AAAAAAAACAAAAICARDgAAAAAAABIOAAAAAAAAAgAAACAg8Q0AAAAAAADyDQAAAAAAAAIAAAAgII8NAAAAAAAAkA0AAAAAAAACAAAAICB8DQAAAAAAAH0NAAAAAAAAAgAAACAgOw0AAAAAAAA8DQAAAAAAAAIAAAAgIPUMAAAAAAAA9gwAAAAAAAACAAAAICDEDAAAAAAAAMUMAAAAAAAAAgAAACAglQwAAAAAAACWDAAAAAAAAAIAAAAgIDkMAAAAAAAAOgwAAAAAAAACAAAAICD/CwAAAAAAAAAMAAAAAAAABAAAACAgICCyCwAAAAAAALMLAAAAAAAABAAAACAgICBuCwAAAAAAAG8LAAAAAAAABAAAACAgICBACwAAAAAAAEELAAAAAAAAAgAAACAgIgsAAAAAAAAjCwAAAAAAAAIAAAAgIPQKAAAAAAAA9QoAAAAAAAACAAAAICDMCgAAAAAAAM0KAAAAAAAAAgAAACAglQoAAAAAAACWCgAAAAAAAAIAAAAgIGsKAAAAAAAAbAoAAAAAAAACAAAAICBmCgAAAAAAAGcKAAAAAAAAAgAAACAgGAoAAAAAAAAZCgAAAAAAAAQAAAAgICAgvgkAAAAAAAC/CQAAAAAAAAQAAAAgICAgnQkAAAAAAACeCQAAAAAAAAIAAAAgIJgJAAAAAAAAmQkAAAAAAAACAAAAICCHCQAAAAAAAIgJAAAAAAAABAAAACAgICBqCQAAAAAAAGsJAAAAAAAABAAAACAgICBOCQAAAAAAAE8JAAAAAAAAAgAAACAgLQkAAAAAAAAuCQAAAAAAAAIAAAAgIAUJAAAAAAAABgkAAAAAAAACAAAAICDECAAAAAAAAMUIAAAAAAAABAAAACAgICBRCAAAAAAAAFIIAAAAAAAABAAAACAgICBBCAAAAAAAAEIIAAAAAAAAAgAAACAgIAgAAAAAAAAhCAAAAAAAAAIAAAAgIOsHAAAAAAAA7AcAAAAAAAACAAAAICDDBwAAAAAAAMQHAAAAAAAAAgAAACAgaQcAAAAAAABqBwAAAAAAAAIAAAAgIP0GAAAAAAAA/gYAAAAAAAACAAAAICDnBgAAAAAAAOgGAAAAAAAAAgAAACAg4gYAAAAAAADjBgAAAAAAAAIAAAAgILQGAAAAAAAAtQYAAAAAAAAEAAAAICAgIFQGAAAAAAAAVQYAAAAAAAAEAAAAICAgIDUGAAAAAAAANgYAAAAAAAACAAAAICDzBQAAAAAAAPQFAAAAAAAAAgAAACAgxwUAAAAAAADIBQAAAAAAAAIAAAAgIGwFAAAAAAAAbQUAAAAAAAACAAAAICA4BQAAAAAAADkFAAAAAAAAAgAAACAg3QQAAAAAAADeBAAAAAAAAAIAAAAgIH4EAAAAAAAAfwQAAAAAAAACAAAAICAWBAAAAAAAABcEAAAAAAAAAgAAACAg4wMAAAAAAADkAwAAAAAAAAIAAAAgIIwDAAAAAAAAjQMAAAAAAAACAAAAICByAwAAAAAAAHMDAAAAAAAAAgAAACAgYQMAAAAAAABiAwAAAAAAAAIAAAAgICUDAAAAAAAAJgMAAAAAAAAEAAAAICAgIB0DAAAAAAAAHgMAAAAAAAACAAAAICAOAwAAAAAAAA8DAAAAAAAAAgAAACAgrgIAAAAAAACvAgAAAAAAAAIAAAAgIH8CAAAAAAAAgAIAAAAAAAACAAAAICASAgAAAAAAABMCAAAAAAAAAgAAACAg6QEAAAAAAADqAQAAAAAAAAIAAAAgILUBAAAAAAAAtgEAAAAAAAACAAAAICDnAAAAAAAAAOgAAAAAAAAAAgAAACAg3wAAAAAAAADgAAAAAAAAAAIAAAAgINcAAAAAAAAA2AAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA+ykAAAAAAAD9KQAAAAAAAAAAAAAAAPC/"
				],
				[
					3702,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIcoAAAAAAAAiCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhygAAAAAAACHKAAAAAAAAAAAAAAAAPC/"
				],
				[
					3703,
					2,
					"left_delete",
					null,
					"AgAAAIcoAAAAAAAAhygAAAAAAAABAAAAMYYoAAAAAAAAhigAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAiCgAAAAAAACIKAAAAAAAAAAAAAAAAPC/"
				],
				[
					3705,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAIYoAAAAAAAAhygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3732,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3759,
					1,
					"paste",
					null,
					"AQAAAJgBAAAAAAAApwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3762,
					1,
					"insert",
					{
						"characters": "O"
					},
					"AgAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACqAQAAAAAAAAEAAABv",
					"AQAAAAAAAAABAAAAqgEAAAAAAACpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3773,
					1,
					"left_delete",
					null,
					"AQAAALABAAAAAAAAsAEAAAAAAAARAAAALCB0aGlzQXJnLCBtZW1vRm4",
					"AQAAAAAAAAABAAAAsAEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3794,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACQCAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAAAlAgAAAAAAAAkAAAB0aGlzQXJnIHw",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					3809,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA7AgAAAAAAADwAAABlbHNlIGlmKGlzRnVuY3Rpb24obWVtb0ZuKSkgewogICAgICByZXQgPSBtZW1vRm4ocmV0KTsKICAgIH0",
					"AQAAAAAAAAABAAAAOgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					3836,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACaAQAAAAAAAAYAAABleHBvcnQ",
					"AQAAAAAAAAABAAAAmQEAAAAAAACfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3975,
					1,
					"left_delete",
					null,
					"AQAAAJoBAAAAAAAAmgEAAAAAAAC0AAAAIGZ1bmN0aW9uIE9uY2UoZm4pIHsKICBsZXQgcmV0LAogICAgcmFuID0gZmFsc2U7CgogIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7CiAgICBpZighcmFuKSB7CiAgICAgIHJhbiA9IHRydWU7CiAgICAgIHJldCA9IGZuLmFwcGx5KCB8IHRoaXMsIGFyZ3MpOwogICAgfSAgCiAgICByZXR1cm4gcmV0OwogIH07Cn0K",
					"AQAAAAAAAAABAAAAmgEAAAAAAABOAgAAAAAAAAAAAAAAACZA"
				],
				[
					3980,
					1,
					"left_delete",
					null,
					"AQAAAJkBAAAAAAAAmQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					3983,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4016,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADsBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4018,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAAAA"
				],
				[
					4019,
					1,
					"left_delete",
					null,
					"AQAAAOoHAAAAAAAA6gcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA6wcAAAAAAADrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4020,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADsBwAAAAAAAAAAAADsBwAAAAAAAO0HAAAAAAAAAAAAAO0HAAAAAAAA7gcAAAAAAAAAAAAA7gcAAAAAAADvBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4021,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAO8HAAAAAAAA8AcAAAAAAAAAAAAA8AcAAAAAAADxBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wcAAAAAAADvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4022,
					1,
					"left_delete",
					null,
					"AQAAAPAHAAAAAAAA8AcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA8QcAAAAAAADxBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4023,
					1,
					"insert",
					{
						"characters": "sel="
					},
					"BAAAAPAHAAAAAAAA8QcAAAAAAAAAAAAA8QcAAAAAAADyBwAAAAAAAAAAAADyBwAAAAAAAPMHAAAAAAAAAAAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AcAAAAAAADwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4025,
					1,
					"",
					null,
					"AQAAAPQHAAAAAAAAQggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					4026,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEIIAAAAAAAAQwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQggAAAAAAABCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4028,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEcIAAAAAAAASAgAAAAAAAAAAAAASAgAAAAAAABKCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwgAAAAAAABHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4030,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAEcIAAAAAAAASAgAAAAAAAAAAAAASAgAAAAAAABJCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwgAAAAAAABHCAAAAAAAAAAAAAAAADZA"
				],
				[
					4031,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkIAAAAAAAASwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQgAAAAAAABJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4032,
					1,
					"insert",
					{
						"characters": "sel"
					},
					"AwAAAEoIAAAAAAAASwgAAAAAAAAAAAAASwgAAAAAAABMCAAAAAAAAAAAAABMCAAAAAAAAE0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASggAAAAAAABKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4033,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAE0IAAAAAAAATggAAAAAAAAAAAAATggAAAAAAABPCAAAAAAAAAAAAABPCAAAAAAAAFAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQgAAAAAAABNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4034,
					1,
					"insert",
					{
						"characters": " -1"
					},
					"AwAAAFAIAAAAAAAAUQgAAAAAAAAAAAAAUQgAAAAAAABSCAAAAAAAAAAAAABSCAAAAAAAAFMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAgAAAAAAABQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4036,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAFQIAAAAAAAAVQgAAAAAAAAAAAAAVQgAAAAAAABWCAAAAAAAAAAAAABWCAAAAAAAAFcIAAAAAAAAAAAAAFcIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABZCAAAAAAAAAAAAABZCAAAAAAAAFoIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAgAAAAAAABUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4037,
					1,
					"insert",
					{
						"characters": " sel;"
					},
					"BQAAAFoIAAAAAAAAWwgAAAAAAAAAAAAAWwgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAF0IAAAAAAAAAAAAAF0IAAAAAAAAXggAAAAAAAAAAAAAXggAAAAAAABfCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWggAAAAAAABaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4038,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF8IAAAAAAAAYAgAAAAAAAAAAAAAYAgAAAAAAABiCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwgAAAAAAABfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4044,
					1,
					"left_delete",
					null,
					"AgAAAEMIAAAAAAAAQwgAAAAAAAABAAAACl8IAAAAAAAAXwgAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAADZA"
				],
				[
					4046,
					1,
					"left_delete",
					null,
					"AQAAAF4IAAAAAAAAXggAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXwgAAAAAAABfCAAAAAAAAAAAAAAAmI5A"
				],
				[
					4052,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABjCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4079,
					1,
					"insert",
					{
						"characters": "(("
					},
					"AgAAAOgGAAAAAAAA6QYAAAAAAAAAAAAA6QYAAAAAAADqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AYAAAAAAADoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4080,
					2,
					"left_delete",
					null,
					"AgAAAOkGAAAAAAAA6QYAAAAAAAABAAAAKOgGAAAAAAAA6AYAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA6gYAAAAAAADqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4081,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOgGAAAAAAAA6QYAAAAAAAAAAAAA6QYAAAAAAADqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AYAAAAAAADoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4086,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA6gYAAAAAAADqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4091,
					2,
					"right_delete",
					null,
					"AgAAACIBAAAAAAAAIgEAAAAAAAANAAAAc2VsZWN0ZWRGaWVsZCIBAAAAAAAAIgEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4098,
					3,
					"left_delete",
					null,
					"AwAAANgGAAAAAAAA2AYAAAAAAAAXAAAAICAvL3NlbGVjdGVkRmllbGQgPSBpOwrXBgAAAAAAANcGAAAAAAAAAQAAAArWBgAAAAAAANYGAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA2AYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4099,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANYGAAAAAAAA1wYAAAAAAAAAAAAA1wYAAAAAAADZBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gYAAAAAAADWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4106,
					1,
					"left_delete",
					null,
					"AgAAAE4IAAAAAAAATggAAAAAAAAaAAAAICAvL3JldHVybiBzZWxlY3RlZEZpZWxkOwrXBgAAAAAAANcGAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAATggAAAAAAABoCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4109,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADIIAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAA1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMggAAAAAAAAyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4116,
					1,
					"insert",
					{
						"characters": "fe"
					},
					"AwAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADHBwAAAAAAAA4AAAAgIGNvbnN0IHNlbCA9IMcHAAAAAAAAyAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4117,
					2,
					"left_delete",
					null,
					"AgAAAMcHAAAAAAAAxwcAAAAAAAABAAAAZcYHAAAAAAAAxgcAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4118,
					1,
					"insert",
					{
						"characters": "retr"
					},
					"BAAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAADIBwAAAAAAAMkHAAAAAAAAAAAAAMkHAAAAAAAAygcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4119,
					1,
					"left_delete",
					null,
					"AQAAAMkHAAAAAAAAyQcAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAygcAAAAAAADKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4120,
					1,
					"insert",
					{
						"characters": "urn"
					},
					"AwAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAADLBwAAAAAAAMwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMwHAAAAAAAAzQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					4125,
					1,
					"insert",
					{
						"characters": "indexOf"
					},
					"BwAAAA4IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABEIAAAAAAAAAAAAABEIAAAAAAAAEggAAAAAAAAAAAAAEggAAAAAAAATCAAAAAAAAAAAAAATCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAFQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADggAAAAAAAAOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4127,
					1,
					"cut",
					null,
					"AQAAABUIAAAAAAAAFQgAAAAAAAAJAAAAZmluZEluZGV4",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4131,
					1,
					"insert",
					{
						"characters": "true"
					},
					"BQAAABYIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAXCAAAAAAAAA4AAABiID0+IGIgPT0gdHJ1ZRcIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAZCAAAAAAAAAAAAAAZCAAAAAAAABoIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFggAAAAAAAAkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4135,
					1,
					"left_delete",
					null,
					"AQAAAB4IAAAAAAAAHggAAAAAAAAeAAAAIAogIGlmKHNlbCAhPSAtMSkgcmV0dXJuIHNlbDsK",
					"AQAAAAAAAAABAAAAHggAAAAAAAA8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					4142,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAHggAAAAAAAAeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					4199,
					1,
					"insert",
					{
						"characters": "Vaklz"
					},
					"BgAAAFgCAAAAAAAAWQIAAAAAAAAAAAAAWQIAAAAAAABZAgAAAAAAAAgAAABFbGVtZW50c1kCAAAAAAAAWgIAAAAAAAAAAAAAWgIAAAAAAABbAgAAAAAAAAAAAABbAgAAAAAAAFwCAAAAAAAAAAAAAFwCAAAAAAAAXQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAIAAAAAAABgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4200,
					3,
					"left_delete",
					null,
					"AwAAAFwCAAAAAAAAXAIAAAAAAAABAAAAelsCAAAAAAAAWwIAAAAAAAABAAAAbFoCAAAAAAAAWgIAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAXQIAAAAAAABdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4201,
					1,
					"insert",
					{
						"characters": "lue"
					},
					"AwAAAFoCAAAAAAAAWwIAAAAAAAAAAAAAWwIAAAAAAABcAgAAAAAAAAAAAABcAgAAAAAAAF0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgIAAAAAAABaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4205,
					1,
					"cut",
					null,
					"AQAAAGACAAAAAAAAYAIAAAAAAAAJAAAAWzJdLnZhbHVl",
					"AQAAAAAAAAABAAAAYAIAAAAAAABpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4293,
					1,
					"cut",
					null,
					"AQAAAN4EAAAAAAAA3gQAAAAAAAANAAAARmllbGRJbmRleChuKQ",
					"AQAAAAAAAAABAAAA3gQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					4298,
					1,
					"paste",
					null,
					"AQAAAJ4EAAAAAAAAqwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					4301,
					1,
					"cut",
					null,
					"AQAAAKsEAAAAAAAAqwQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAqwQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					4306,
					1,
					"paste",
					null,
					"AQAAAOoEAAAAAAAA6wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					4309,
					1,
					"paste",
					null,
					"AgAAAG0FAAAAAAAAbgUAAAAAAAAAAAAAbgUAAAAAAABuBQAAAAAAAA0AAABGaWVsZEluZGV4KG4p",
					"AQAAAAAAAAABAAAAbQUAAAAAAAB6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					4514,
					1,
					"",
					null,
					"DgAAANsmAAAAAAAA4iYAAAAAAAARAAAAZ2xvYmFsVGhpcy5jb25maWeuJgAAAAAAALUmAAAAAAAAEQAAAGdsb2JhbFRoaXMuY29uZmlngSYAAAAAAACIJgAAAAAAABEAAABnbG9iYWxUaGlzLmNvbmZpZ14mAAAAAAAAZSYAAAAAAAARAAAAZ2xvYmFsVGhpcy5jb25maWdCJgAAAAAAAEkmAAAAAAAAEQAAAGdsb2JhbFRoaXMuY29uZmlnDSYAAAAAAAAUJgAAAAAAABEAAABnbG9iYWxUaGlzLmNvbmZpZ9AlAAAAAAAA1yUAAAAAAAARAAAAZ2xvYmFsVGhpcy5jb25maWefJQAAAAAAAKYlAAAAAAAAEQAAAGdsb2JhbFRoaXMuY29uZmln/yMAAAAAAAAGJAAAAAAAABEAAABnbG9iYWxUaGlzLmNvbmZpZ3UiAAAAAAAAfCIAAAAAAAARAAAAZ2xvYmFsVGhpcy5jb25maWdzDAAAAAAAAHoMAAAAAAAAEQAAAGdsb2JhbFRoaXMuY29uZmlnwgIAAAAAAADJAgAAAAAAABEAAABnbG9iYWxUaGlzLmNvbmZpZ2UCAAAAAAAAbAIAAAAAAAARAAAAZ2xvYmFsVGhpcy5jb25maWcyAgAAAAAAADkCAAAAAAAAEQAAAGdsb2JhbFRoaXMuY29uZmln",
					"AQAAAAAAAAABAAAAcAEAAAAAAADNKQAAAAAAAAAAAAAAAPC/"
				],
				[
					4520,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					4527,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPImAAAAAAAA8yYAAAAAAAAAAAAA8yYAAAAAAADzJgAAAAAAACYAAAAKCiAgLypDYWxjVGhvbXBzb24oKTsKIFJlYWRGaWVsZHMoKTsqLw",
					"AQAAAAAAAAABAAAA8iYAAAAAAAAYJwAAAAAAAAAAAAAAAPC/"
				],
				[
					4535,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEnAAAAAAAAUicAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUScAAAAAAABRJwAAAAAAAAAAAAAAAPC/"
				],
				[
					4547,
					1,
					"left_delete",
					null,
					"AQAAABwBAAAAAAAAHAEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4550,
					1,
					"left_delete",
					null,
					"AQAAAPAAAAAAAAAA8AAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4572,
					1,
					"cut",
					null,
					"AQAAABwBAAAAAAAAHAEAAAAAAAARAAAAbGV0IGluaXRpYWxpemVkOwo",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4575,
					1,
					"paste",
					null,
					"AQAAANYiAAAAAAAA5yIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1iIAAAAAAADWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					4578,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUiAAAAAAAA1iIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SIAAAAAAADVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					4581,
					1,
					"insert",
					{
						"characters": "globalThis"
					},
					"CgAAAAAjAAAAAAAAASMAAAAAAAAAAAAAASMAAAAAAAACIwAAAAAAAAAAAAACIwAAAAAAAAMjAAAAAAAAAAAAAAMjAAAAAAAABCMAAAAAAAAAAAAABCMAAAAAAAAFIwAAAAAAAAAAAAAFIwAAAAAAAAYjAAAAAAAAAAAAAAYjAAAAAAAAByMAAAAAAAAAAAAAByMAAAAAAAAIIwAAAAAAAAAAAAAIIwAAAAAAAAkjAAAAAAAAAAAAAAkjAAAAAAAACiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4582,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAojAAAAAAAACyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiMAAAAAAAAKIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4583,
					1,
					"left_delete",
					null,
					"AQAAAAojAAAAAAAACiMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAACyMAAAAAAAALIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4584,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAAojAAAAAAAACyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiMAAAAAAAAKIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4587,
					1,
					"cut",
					null,
					"AQAAAAAjAAAAAAAAACMAAAAAAAALAAAAZ2xvYmFsVGhpcy4",
					"AQAAAAAAAAABAAAACyMAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4588,
					1,
					"paste",
					null,
					"AQAAAAAjAAAAAAAACyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					4593,
					1,
					"paste",
					null,
					"AQAAACIjAAAAAAAALSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIiMAAAAAAAAiIwAAAAAAAAAAAAAAADZA"
				],
				[
					4597,
					1,
					"left_delete",
					null,
					"AQAAANciAAAAAAAA1yIAAAAAAAASAAAAbGV0IGluaXRpYWxpemVkOwoK",
					"AQAAAAAAAAABAAAA1yIAAAAAAADpIgAAAAAAAAAAAAAAAAAA"
				],
				[
					4602,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1yIAAAAAAADXIgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "app/app.html",
			"settings":
			{
				"buffer_size": 1220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAADzAQAAAAAAAAUAAAAyMDBuSA",
					"AQAAAAAAAAABAAAA8gEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAPIBAAAAAAAA8gEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA8wEAAAAAAADzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAALQCAAAAAAAAtAIAAAAAAAAEAAAAMTBwRg",
					"AQAAAAAAAAABAAAAtAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAGgDAAAAAAAAcQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					2,
					"join_lines",
					null,
					"BgAAAF4BAAAAAAAAXgEAAAAAAAABAAAACl4BAAAAAAAAXgEAAAAAAAAKAAAAICAgICAgICAgIF4BAAAAAAAAXwEAAAAAAAAAAAAAZwEAAAAAAABnAQAAAAAAAAEAAAAKZwEAAAAAAABnAQAAAAAAAAgAAAAgICAgICAgIGcBAAAAAAAAaAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"",
					null,
					"AQAAAF0BAAAAAAAAXwEAAAAAAAADAAAAPiA8",
					"AQAAAAAAAAABAAAAXQEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"",
					null,
					"AQAAAGUBAAAAAAAAZwEAAAAAAAADAAAAPiA8",
					"AQAAAAAAAAABAAAAZQEAAAAAAABoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					2,
					"join_lines",
					null,
					"BgAAAAoCAAAAAAAACgIAAAAAAAABAAAACgoCAAAAAAAACgIAAAAAAAAKAAAAICAgICAgICAgIAoCAAAAAAAACwIAAAAAAAAAAAAAEwIAAAAAAAATAgAAAAAAAAEAAAAKEwIAAAAAAAATAgAAAAAAAAgAAAAgICAgICAgIBMCAAAAAAAAFAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AEAAAAAAADoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					2,
					"join_lines",
					null,
					"BgAAALgCAAAAAAAAuAIAAAAAAAABAAAACrgCAAAAAAAAuAIAAAAAAAAKAAAAICAgICAgICAgILgCAAAAAAAAuQIAAAAAAAAAAAAAwQIAAAAAAADBAgAAAAAAAAEAAAAKwQIAAAAAAADBAgAAAAAAAAgAAAAgICAgICAgIMECAAAAAAAAwgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"",
					null,
					"BAAAAMACAAAAAAAAwgIAAAAAAAADAAAAPiA8twIAAAAAAAC5AgAAAAAAAAMAAAA+IDwSAgAAAAAAABQCAAAAAAAAAwAAAD4gPAkCAAAAAAAACwIAAAAAAAADAAAAPiA8",
					"AQAAAAAAAAABAAAAtwIAAAAAAAC6AgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Break every 10 lines"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/thomson-calculator",
		"/home/roman/Projects/thomson-calculator/app"
	],
	"file_history":
	[
		"/home/roman/Projects/thomson-calculator/README.md",
		"/home/roman/Projects/thomson-calculator/src/app.js",
		"/home/roman/Projects/thomson-calculator/app/app.js",
		"/home/roman/Projects/electron-boilerplate/app/app.html",
		"/home/roman/Projects/electron-boilerplate/src/stylesheets/main.css",
		"/home/roman/Projects/electron-boilerplate/src/main.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/electron-boilerplate/src/app.js",
		"/home/roman/Projects/electron-boilerplate/thomson-capacitance-equation-2.svg",
		"/home/roman/Projects/electron-boilerplate/thomson-freq-equation-2.svg",
		"/home/roman/Projects/electron-boilerplate/thomson-inductance-equation-2.svg",
		"/home/roman/Projects/lc-meter/lib/timer.h",
		"/home/roman/Projects/lc-meter/lib/timer.c",
		"/home/roman/Projects/lc-meter/Attic/julznc/main.c",
		"/home/roman/Projects/lc-meter/src/measure.c",
		"/home/roman/Projects/lc-meter/LC-meter.c",
		"/home/roman/Projects/pictest/src/pictest.h",
		"/home/roman/Projects/pictest/lib/typedef.h",
		"/home/roman/Projects/pictest/lib/timer.h",
		"/home/roman/Projects/pictest/lib/softpwm.c",
		"/home/roman/Projects/pictest/lib/ser.h",
		"/home/roman/Projects/pictest/lib/uart.c",
		"/home/roman/Projects/pictest/lib/uart.h",
		"/home/roman/Projects/pictest/lib/format.c",
		"/home/roman/Projects/pictest/lib/lcd5110.h",
		"/home/roman/Projects/pictest/lib/lcd5110.c",
		"/home/roman/Projects/pictest/build/sdcc.mk",
		"/home/roman/Projects/pictest/build/vars.mk",
		"/home/roman/Projects/pictest/src/serialtest.c",
		"/home/roman/Projects/pictest/pictest.sublime-project",
		"/home/roman/Projects/pictest/README.ipecmd",
		"/home/roman/Projects/pictest/src/config-18f25k50.h",
		"/home/roman/Projects/pictest/src/pictest.c",
		"/home/roman/Projects/pictest/build/xc8.mk",
		"/home/roman/Projects/pictest/lib/device.h",
		"/opt/sdcc-4.0.0/share/sdcc/non-free/include/pic16/pic18f25k50.h",
		"/home/roman/Projects/pictest/pictest.c",
		"/home/roman/Projects/pictest/pictest2.c",
		"/home/roman/Projects/pictest/serialtest.c",
		"/home/roman/Projects/pictest/Makefile",
		"/home/roman/Projects/pictest/src/7segtest.c",
		"/home/roman/Projects/pictest/src/config-bits.h",
		"/home/roman/Projects/pictest/tools/calc-midi-notes.c",
		"/home/roman/Projects/pictest/lib/softpwm.h",
		"/home/roman/Projects/pictest/lib/timer.c",
		"/home/roman/Projects/pictest/blinktest.c",
		"/home/roman/Projects/pictest/lib/softser.c",
		"/home/roman/Projects/pictest/lib/oscillator.h",
		"/home/roman/Projects/pictest/src/config-18f25k22.h",
		"/home/roman/Projects/pictest/build/common.mk",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_pointer.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/stack.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.c",
		"/home/roman/Sources/opencv/modules/core/include/opencv2/core/mat.inl.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 119.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"globalThis\\.config",
			"GuessField",
			"GetFieldEle",
			"GetField",
			"GetFieldElements",
			"validValues",
			"selectedField",
			"init",
			"initialized",
			"selectedField",
			"  +",
			"inputElements",
			"names",
			"units",
			"validValues",
			"\\bfields\\b",
			"idx = ",
			"valueIndex",
			"GetValue\\b",
			"> <",
			" \\= ",
			"ReadFields",
			"\\bUpdate\\b",
			" \n",
			"^(\\s*)console\\.",
			"  console\\.",
			"^(\\s*)console\\.",
			"LoadConfig",
			"SetupFields",
			"ParseValue",
			"OnInput",
			"GetFieldValue",
			"SetupFields",
			"LoadConfig",
			"NaN\\b",
			"\\bNaN\\b",
			"ParseValue",
			"values\\[.* = ",
			"values\\[",
			"^(\\s*)console\\.",
			"([^\\.])\\bconfig\\b",
			"\\bconfig\\b",
			"SetValue",
			"LoadConf",
			"validValues",
			"LoadConfig",
			"  \n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" config",
			" ",
			"><",
			"&nbsp;=&nbsp;",
			"ReadFields",
			"\\1//console.",
			"\\1globalThis.config"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 898,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/thomson-calculator/src/app.js",
							"function_name_status_row": 56,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									40,
									48
								],
								[
									82,
									91
								],
								[
									375,
									399
								],
								[
									471,
									492
								],
								[
									678,
									699
								],
								[
									848,
									857
								],
								[
									930,
									963
								],
								[
									1039,
									1067
								],
								[
									1149,
									1174
								],
								[
									1214,
									1218
								],
								[
									1277,
									1305
								],
								[
									1345,
									1349
								],
								[
									1405,
									1428
								],
								[
									1560,
									1569
								],
								[
									1759,
									1780
								],
								[
									1807,
									1811
								],
								[
									1888,
									1910
								],
								[
									1943,
									1947
								],
								[
									2005,
									2028
								],
								[
									2267,
									2297
								],
								[
									2775,
									2798
								],
								[
									3087,
									3121
								],
								[
									3134,
									3158
								],
								[
									3473,
									3505
								],
								[
									3548,
									3553
								],
								[
									3580,
									3604
								],
								[
									3741,
									3766
								],
								[
									3899,
									3922
								],
								[
									4055,
									4077
								],
								[
									4121,
									4148
								],
								[
									4222,
									4249
								],
								[
									4574,
									4592
								],
								[
									4740,
									4748
								],
								[
									5208,
									5236
								],
								[
									5416,
									5441
								],
								[
									5562,
									5596
								],
								[
									5753,
									5785
								],
								[
									6275,
									6300
								],
								[
									6401,
									6424
								],
								[
									6628,
									6654
								],
								[
									6797,
									6850
								],
								[
									6857,
									6862
								],
								[
									6869,
									6884
								],
								[
									7173,
									7194
								],
								[
									7218,
									7228
								],
								[
									7258,
									7309
								],
								[
									7880,
									7915
								],
								[
									8012,
									8034
								],
								[
									8081,
									8086
								],
								[
									8186,
									8195
								],
								[
									8224,
									8228
								],
								[
									8256,
									8261
								],
								[
									8294,
									8298
								],
								[
									8330,
									8340
								],
								[
									8473,
									8483
								],
								[
									8653,
									8680
								],
								[
									8919,
									8934
								],
								[
									9030,
									9034
								],
								[
									9235,
									9244
								],
								[
									9439,
									9448
								],
								[
									9990,
									9995
								]
							],
							"symlist":
							[
								"Q = s =>",
								"QA = s =>",
								"FieldIndex(arg)",
								"SaveConfig()",
								"LoadConfig()",
								"(v, i) =>",
								"PartitionArray(a, size)",
								"GetFieldElements(n)",
								"GetFieldValue(n)",
								"  e =>",
								"SetFieldValue(n, v)",
								"  e =>",
								"SelectField(i)",
								"(e, x) =>",
								"GuessField()",
								"  v =>",
								"GetSelected()",
								"  e =>",
								"GetValue(name)",
								"SetValue(name, value)",
								"CalcThompson()",
								"SetField(i, num, round = ",
								"(config.precision ?? 3))",
								"RoundFunction(prec = 3)",
								"n =>",
								"CalcFrequency()",
								"CalcInductance()",
								"CalcCapacity()",
								"Exponent(num)",
								"Thousand(exponent)",
								"Exp2Unit(exponent)",
								"Unit(str)",
								"([a]) =>",
								"OnInput({ target })",
								"ClearValues(idx)",
								"ProcessValue(value, name)",
								"ParseValue(value, name)",
								"ReadFields(name)",
								"({ name, value }, i) =>",
								"WriteFields(name)",
								"FormatNumber(num, exp, unit, round = a => a.",
								"(12).",
								"(/\\.0*$/g, ''))",
								"WaitFor(ms)",
								"  resolve =>",
								"SetStatus(str, t1 = 3000, t2 = 1000)",
								"CopyToClipboard(str)",
								"SetupFields()",
								"() =>",
								"(a, i) =>",
								"  e =>",
								"e =>",
								"  e =>",
								"  e =>",
								"  e =>",
								"ChangePrecision(p)",
								"Init()",
								"  e =>",
								"event =>",
								"event =>",
								"() =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tabs_extra_last_activated": 1704014125.11,
							"tabs_extra_last_activated_sheet_index": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "src/app.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10513,
						"regions":
						{
						},
						"selection":
						[
							[
								8919,
								8919
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 369,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1704015349.42,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8358.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/app.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1220,
						"regions":
						{
						},
						"selection":
						[
							[
								708,
								708
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 17,
							"show_line_column": "disabled",
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1704012822.45,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.798237167786,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "blinktest_18f25k50_xc8",
	"project": "thomson-calculator.sublime-project",
	"replace":
	{
		"height": 78.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"usb_cdc",
				"usb/USB_Stack/USB/usb_cdc.h"
			],
			[
				"blinkte",
				"src/blinktest.c"
			],
			[
				"blinktest",
				"src/blinktest.c"
			],
			[
				"pictest",
				"src/pictest.c"
			],
			[
				"blink",
				"src/blinktest.c"
			],
			[
				"format",
				"lib/format.h"
			],
			[
				"adc.h",
				"lib/adc.h"
			],
			[
				"device",
				"lib/device.h"
			],
			[
				"ipecm",
				"README.ipecmd"
			],
			[
				"makefile",
				"Makefile"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 720.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 315.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}

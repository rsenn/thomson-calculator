{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"define",
				"defineProperties(...)"
			],
			[
				"selec",
				"selectedField"
			],
			[
				"pre",
				"precision_num"
			],
			[
				"Calc",
				"CalcThompson"
			],
			[
				"va",
				"valueIndex"
			],
			[
				"CalcT",
				"CalcThompson"
			],
			[
				"inpt",
				"inputElements"
			],
			[
				"__De",
				"__delay_us"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"js_sys",
				"js_syscallerror_data"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"JS_New",
				"JS_NewInt32"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_loca",
				"js_location_data"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  fields\n  precision_grp\n  precision_lbl\n  precision\n  precision_num\n  status",
			"settings":
			{
				"buffer_size": 77,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					171,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7214,
								7240
							],
							[
								7514,
								7541
							],
							[
								7815,
								7841
							],
							[
								7968,
								8003
							],
							[
								8166,
								8193
							],
							[
								8399,
								8427
							],
							[
								8475,
								8508
							],
							[
								8910,
								8936
							],
							[
								9037,
								9060
							],
							[
								9303,
								9359
							],
							[
								9368,
								9369
							],
							[
								9750,
								9801
							],
							[
								10268,
								10291
							],
							[
								10338,
								10343
							],
							[
								10452,
								10461
							],
							[
								10490,
								10494
							],
							[
								10522,
								10527
							],
							[
								10560,
								10564
							],
							[
								10596,
								10606
							],
							[
								10734,
								10744
							],
							[
								10920,
								10939
							],
							[
								10978,
								11000
							],
							[
								11071,
								11075
							],
							[
								11096,
								11100
							],
							[
								11125,
								11151
							],
							[
								11163,
								11164
							],
							[
								11211,
								11220
							],
							[
								11259,
								11287
							],
							[
								11459,
								11475
							],
							[
								11593,
								11602
							],
							[
								11822,
								11831
							],
							[
								12026,
								12035
							],
							[
								12178,
								12182
							],
							[
								12214,
								12238
							],
							[
								12537,
								12546
							],
							[
								12997,
								13002
							],
							[
								13032,
								13066
							],
							[
								13112,
								13133
							],
							[
								13157,
								13167
							],
							[
								13203,
								13233
							],
							[
								13310,
								13344
							],
							[
								13426,
								13449
							],
							[
								13499,
								13541
							],
							[
								13619,
								13661
							],
							[
								14209,
								14228
							],
							[
								14368,
								14376
							],
							[
								15068,
								15110
							],
							[
								15121,
								15126
							],
							[
								15186,
								15209
							],
							[
								15254,
								15277
							],
							[
								15323,
								15358
							],
							[
								15455,
								15493
							],
							[
								15552,
								15556
							],
							[
								15572,
								15576
							],
							[
								15605,
								15618
							],
							[
								15721,
								15725
							],
							[
								15751,
								15756
							],
							[
								15816,
								15821
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					174,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					175,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					176,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7214,
								7240
							],
							[
								7514,
								7541
							],
							[
								7815,
								7841
							],
							[
								7968,
								8003
							],
							[
								8166,
								8193
							],
							[
								8399,
								8427
							],
							[
								8475,
								8508
							],
							[
								8910,
								8936
							],
							[
								9037,
								9060
							],
							[
								9303,
								9359
							],
							[
								9368,
								9369
							],
							[
								9750,
								9801
							],
							[
								10268,
								10291
							],
							[
								10338,
								10343
							],
							[
								10452,
								10461
							],
							[
								10490,
								10494
							],
							[
								10522,
								10527
							],
							[
								10560,
								10564
							],
							[
								10596,
								10606
							],
							[
								10734,
								10744
							],
							[
								10920,
								10939
							],
							[
								10978,
								11000
							],
							[
								11071,
								11075
							],
							[
								11096,
								11100
							],
							[
								11125,
								11151
							],
							[
								11163,
								11164
							],
							[
								11211,
								11220
							],
							[
								11259,
								11287
							],
							[
								11459,
								11475
							],
							[
								11593,
								11602
							],
							[
								11822,
								11831
							],
							[
								12026,
								12035
							],
							[
								12178,
								12182
							],
							[
								12214,
								12238
							],
							[
								12537,
								12546
							],
							[
								12997,
								13002
							],
							[
								13032,
								13066
							],
							[
								13112,
								13133
							],
							[
								13157,
								13167
							],
							[
								13203,
								13233
							],
							[
								13310,
								13344
							],
							[
								13426,
								13449
							],
							[
								13499,
								13541
							],
							[
								13619,
								13661
							],
							[
								14209,
								14228
							],
							[
								14368,
								14376
							],
							[
								15068,
								15110
							],
							[
								15121,
								15126
							],
							[
								15186,
								15209
							],
							[
								15254,
								15277
							],
							[
								15323,
								15358
							],
							[
								15455,
								15493
							],
							[
								15552,
								15556
							],
							[
								15572,
								15576
							],
							[
								15605,
								15618
							],
							[
								15721,
								15725
							],
							[
								15751,
								15756
							],
							[
								15816,
								15821
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					178,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					179,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7214,
								7240
							],
							[
								7514,
								7541
							],
							[
								7815,
								7841
							],
							[
								7968,
								8003
							],
							[
								8166,
								8193
							],
							[
								8399,
								8427
							],
							[
								8475,
								8508
							],
							[
								8910,
								8936
							],
							[
								9037,
								9060
							],
							[
								9303,
								9359
							],
							[
								9368,
								9369
							],
							[
								9750,
								9801
							],
							[
								10268,
								10291
							],
							[
								10338,
								10343
							],
							[
								10452,
								10461
							],
							[
								10490,
								10494
							],
							[
								10522,
								10527
							],
							[
								10560,
								10564
							],
							[
								10596,
								10606
							],
							[
								10734,
								10744
							],
							[
								10920,
								10939
							],
							[
								10978,
								11000
							],
							[
								11071,
								11075
							],
							[
								11096,
								11100
							],
							[
								11125,
								11151
							],
							[
								11163,
								11164
							],
							[
								11211,
								11220
							],
							[
								11259,
								11287
							],
							[
								11459,
								11475
							],
							[
								11593,
								11602
							],
							[
								11822,
								11831
							],
							[
								12026,
								12035
							],
							[
								12178,
								12182
							],
							[
								12214,
								12238
							],
							[
								12537,
								12546
							],
							[
								12997,
								13002
							],
							[
								13032,
								13066
							],
							[
								13112,
								13133
							],
							[
								13157,
								13167
							],
							[
								13203,
								13233
							],
							[
								13310,
								13344
							],
							[
								13426,
								13449
							],
							[
								13499,
								13541
							],
							[
								13619,
								13661
							],
							[
								14209,
								14228
							],
							[
								14368,
								14376
							],
							[
								15068,
								15110
							],
							[
								15121,
								15126
							],
							[
								15186,
								15209
							],
							[
								15254,
								15277
							],
							[
								15323,
								15358
							],
							[
								15455,
								15493
							],
							[
								15552,
								15556
							],
							[
								15572,
								15576
							],
							[
								15605,
								15618
							],
							[
								15721,
								15725
							],
							[
								15751,
								15756
							],
							[
								15816,
								15821
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					180,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					181,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					182,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								241,
								247
							],
							[
								860,
								873
							],
							[
								911,
								924
							],
							[
								976,
								985
							],
							[
								1056,
								1069
							],
							[
								1141,
								1147
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AQAAAAAAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					183,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								311,
								317
							],
							[
								930,
								943
							],
							[
								981,
								994
							],
							[
								1046,
								1055
							],
							[
								1126,
								1139
							],
							[
								1211,
								1217
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					184,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								348,
								354
							],
							[
								967,
								980
							],
							[
								1018,
								1031
							],
							[
								1083,
								1092
							],
							[
								1163,
								1176
							],
							[
								1248,
								1254
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					185,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								420,
								426
							],
							[
								1039,
								1052
							],
							[
								1090,
								1103
							],
							[
								1155,
								1164
							],
							[
								1235,
								1248
							],
							[
								1320,
								1326
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					186,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								468,
								474
							],
							[
								1087,
								1100
							],
							[
								1138,
								1151
							],
							[
								1203,
								1212
							],
							[
								1283,
								1296
							],
							[
								1368,
								1374
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					187,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								311,
								317
							],
							[
								930,
								943
							],
							[
								981,
								994
							],
							[
								1046,
								1055
							],
							[
								1126,
								1139
							],
							[
								1211,
								1217
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					188,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								359,
								365
							],
							[
								978,
								991
							],
							[
								1029,
								1042
							],
							[
								1094,
								1103
							],
							[
								1174,
								1187
							],
							[
								1259,
								1265
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					189,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								359,
								365
							],
							[
								978,
								991
							],
							[
								1029,
								1042
							],
							[
								1094,
								1103
							],
							[
								1174,
								1187
							],
							[
								1259,
								1265
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					190,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								431,
								437
							],
							[
								1050,
								1063
							],
							[
								1101,
								1114
							],
							[
								1166,
								1175
							],
							[
								1246,
								1259
							],
							[
								1331,
								1337
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					191,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								433,
								439
							],
							[
								1052,
								1065
							],
							[
								1103,
								1116
							],
							[
								1168,
								1177
							],
							[
								1248,
								1261
							],
							[
								1333,
								1339
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					192,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								468,
								474
							],
							[
								1087,
								1100
							],
							[
								1138,
								1151
							],
							[
								1203,
								1212
							],
							[
								1283,
								1296
							],
							[
								1368,
								1374
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					193,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								546,
								552
							],
							[
								1165,
								1178
							],
							[
								1216,
								1229
							],
							[
								1281,
								1290
							],
							[
								1361,
								1374
							],
							[
								1446,
								1452
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					194,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/app/app.html",
						"symkeys":
						[
							[
								433,
								439
							],
							[
								1052,
								1065
							],
							[
								1103,
								1116
							],
							[
								1168,
								1177
							],
							[
								1248,
								1261
							],
							[
								1333,
								1339
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					195,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								39,
								47
							],
							[
								110,
								124
							],
							[
								185,
								194
							],
							[
								242,
								251
							],
							[
								279,
								288
							],
							[
								420,
								440
							],
							[
								476,
								495
							],
							[
								751,
								757
							],
							[
								954,
								960
							],
							[
								1067,
								1080
							],
							[
								1239,
								1252
							],
							[
								1276,
								1304
							],
							[
								1329,
								1333
							],
							[
								1361,
								1370
							],
							[
								1651,
								1693
							],
							[
								2195,
								2233
							],
							[
								2473,
								2502
							],
							[
								2803,
								2831
							],
							[
								2878,
								2885
							],
							[
								2920,
								2946
							],
							[
								3001,
								3008
							],
							[
								3049,
								3075
							],
							[
								3167,
								3192
							],
							[
								3315,
								3337
							],
							[
								3524,
								3546
							],
							[
								3648,
								3674
							],
							[
								3768,
								3789
							],
							[
								3832,
								3836
							],
							[
								3899,
								3923
							],
							[
								3966,
								3970
							],
							[
								4029,
								4053
							],
							[
								4182,
								4191
							],
							[
								4373,
								4395
							],
							[
								4420,
								4424
							],
							[
								4503,
								4526
							],
							[
								4553,
								4557
							],
							[
								4616,
								4640
							],
							[
								5147,
								5178
							],
							[
								5695,
								5719
							],
							[
								6096,
								6128
							],
							[
								6161,
								6170
							],
							[
								6269,
								6278
							],
							[
								6398,
								6423
							],
							[
								6677,
								6703
							],
							[
								6954,
								6981
							],
							[
								7231,
								7257
							],
							[
								7381,
								7416
							],
							[
								7560,
								7587
							],
							[
								7771,
								7799
							],
							[
								7844,
								7877
							],
							[
								8245,
								8271
							],
							[
								8356,
								8379
							],
							[
								8602,
								8658
							],
							[
								8667,
								8668
							],
							[
								9024,
								9069
							],
							[
								9498,
								9521
							],
							[
								9562,
								9567
							],
							[
								9667,
								9676
							],
							[
								9701,
								9705
							],
							[
								9733,
								9738
							],
							[
								9767,
								9771
							],
							[
								9803,
								9813
							],
							[
								9928,
								9938
							],
							[
								10083,
								10102
							],
							[
								10138,
								10160
							],
							[
								10213,
								10217
							],
							[
								10232,
								10236
							],
							[
								10258,
								10284
							],
							[
								10296,
								10297
							],
							[
								10334,
								10343
							],
							[
								10381,
								10409
							],
							[
								10560,
								10576
							],
							[
								10679,
								10688
							],
							[
								10883,
								10892
							],
							[
								11065,
								11074
							],
							[
								11199,
								11203
							],
							[
								11231,
								11255
							],
							[
								11516,
								11525
							],
							[
								11958,
								11992
							],
							[
								12035,
								12056
							],
							[
								12078,
								12088
							],
							[
								12124,
								12153
							],
							[
								12227,
								12261
							],
							[
								12340,
								12363
							],
							[
								12410,
								12452
							],
							[
								12527,
								12569
							],
							[
								13036,
								13055
							],
							[
								13190,
								13198
							],
							[
								13807,
								13849
							],
							[
								13858,
								13863
							],
							[
								13922,
								13945
							],
							[
								13987,
								14010
							],
							[
								14053,
								14088
							],
							[
								14178,
								14217
							],
							[
								14274,
								14278
							],
							[
								14293,
								14297
							],
							[
								14326,
								14339
							],
							[
								14437,
								14441
							],
							[
								14461,
								14466
							],
							[
								14508,
								14513
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							" function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							" function CoilTurns(L, form, inner, outer)",
							" function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							" function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							"function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							" function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAAAAICBmaWVsZHMKICBwcmVjaXNpb25fZ3JwCiAgcHJlY2lzaW9uX2xibAogIHByZWNpc2lvbgogIHByZWNpc2lvbl9udW0KICBzdGF0dXMAAAAAAAAAAKUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					196,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7214,
								7240
							],
							[
								7514,
								7541
							],
							[
								7815,
								7841
							],
							[
								7968,
								8003
							],
							[
								8166,
								8193
							],
							[
								8399,
								8427
							],
							[
								8475,
								8508
							],
							[
								8910,
								8936
							],
							[
								9037,
								9060
							],
							[
								9303,
								9359
							],
							[
								9368,
								9369
							],
							[
								9750,
								9801
							],
							[
								10268,
								10291
							],
							[
								10338,
								10343
							],
							[
								10452,
								10461
							],
							[
								10490,
								10494
							],
							[
								10522,
								10527
							],
							[
								10560,
								10564
							],
							[
								10596,
								10606
							],
							[
								10734,
								10744
							],
							[
								10920,
								10939
							],
							[
								10978,
								11000
							],
							[
								11071,
								11075
							],
							[
								11096,
								11100
							],
							[
								11125,
								11151
							],
							[
								11163,
								11164
							],
							[
								11211,
								11220
							],
							[
								11259,
								11287
							],
							[
								11459,
								11475
							],
							[
								11593,
								11602
							],
							[
								11822,
								11831
							],
							[
								12026,
								12035
							],
							[
								12178,
								12182
							],
							[
								12214,
								12238
							],
							[
								12537,
								12546
							],
							[
								12997,
								13002
							],
							[
								13032,
								13066
							],
							[
								13112,
								13133
							],
							[
								13157,
								13167
							],
							[
								13203,
								13233
							],
							[
								13310,
								13344
							],
							[
								13426,
								13449
							],
							[
								13499,
								13541
							],
							[
								13619,
								13661
							],
							[
								14209,
								14228
							],
							[
								14368,
								14376
							],
							[
								15068,
								15110
							],
							[
								15121,
								15126
							],
							[
								15186,
								15209
							],
							[
								15254,
								15277
							],
							[
								15323,
								15358
							],
							[
								15455,
								15493
							],
							[
								15552,
								15556
							],
							[
								15572,
								15576
							],
							[
								15605,
								15618
							],
							[
								15721,
								15725
							],
							[
								15751,
								15756
							],
							[
								15816,
								15821
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					197,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/main.js",
						"symkeys":
						[
							[
								1003,
								1029
							],
							[
								1429,
								1446
							],
							[
								1497,
								1503
							],
							[
								2110,
								2116
							]
						],
						"symlist":
						[
							"setApplicationMenu = () =>",
							" (event, href) =>",
							" () =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAADkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					198,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/main.js",
						"symkeys":
						[
							[
								1011,
								1037
							],
							[
								1307,
								1322
							],
							[
								1354,
								1370
							],
							[
								1460,
								1477
							],
							[
								1535,
								1541
							],
							[
								2250,
								2256
							]
						],
						"symlist":
						[
							"setApplicationMenu = () =>",
							"initIpc = () =>",
							" (event, arg) =>",
							" (event, href) =>",
							" () =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA5AAAAICBzZXRBcHBsaWNhdGlvbk1lbnUgPSAoKSA9PgooZXZlbnQsIGhyZWYpID0+CigpID0+CigpID0+AAAAAAAAAABbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					199,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7214,
								7240
							],
							[
								7514,
								7541
							],
							[
								7815,
								7841
							],
							[
								7968,
								8003
							],
							[
								8166,
								8193
							],
							[
								8399,
								8427
							],
							[
								8475,
								8508
							],
							[
								8910,
								8936
							],
							[
								9037,
								9060
							],
							[
								9303,
								9359
							],
							[
								9368,
								9369
							],
							[
								9750,
								9801
							],
							[
								10268,
								10291
							],
							[
								10338,
								10343
							],
							[
								10452,
								10461
							],
							[
								10490,
								10494
							],
							[
								10522,
								10527
							],
							[
								10560,
								10564
							],
							[
								10596,
								10606
							],
							[
								10734,
								10744
							],
							[
								10920,
								10939
							],
							[
								10978,
								11000
							],
							[
								11071,
								11075
							],
							[
								11096,
								11100
							],
							[
								11125,
								11151
							],
							[
								11163,
								11164
							],
							[
								11211,
								11220
							],
							[
								11259,
								11287
							],
							[
								11459,
								11475
							],
							[
								11593,
								11602
							],
							[
								11822,
								11831
							],
							[
								12026,
								12035
							],
							[
								12178,
								12182
							],
							[
								12214,
								12238
							],
							[
								12537,
								12546
							],
							[
								12997,
								13002
							],
							[
								13032,
								13066
							],
							[
								13112,
								13133
							],
							[
								13157,
								13167
							],
							[
								13203,
								13233
							],
							[
								13310,
								13344
							],
							[
								13426,
								13449
							],
							[
								13499,
								13541
							],
							[
								13619,
								13661
							],
							[
								14209,
								14228
							],
							[
								14368,
								14376
							],
							[
								15068,
								15110
							],
							[
								15121,
								15126
							],
							[
								15186,
								15209
							],
							[
								15254,
								15277
							],
							[
								15323,
								15358
							],
							[
								15455,
								15493
							],
							[
								15552,
								15556
							],
							[
								15572,
								15576
							],
							[
								15605,
								15618
							],
							[
								15721,
								15725
							],
							[
								15751,
								15756
							],
							[
								15816,
								15821
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAAAAICBzZXRBcHBsaWNhdGlvbk1lbnUgPSAoKSA9PgogIGluaXRJcGMgPSAoKSA9PgooZXZlbnQsIGFyZykgPT4KKGV2ZW50LCBocmVmKSA9PgooKSA9PgooKSA9PgAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					202,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgIAAAAAAABaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					204,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					205,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					206,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					207,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					208,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					209,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					210,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					211,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					212,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					213,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					214,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AQAAAAAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					215,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					216,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AwAAAAAAAAAAAAAAqwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsFAABRID0gcyA9PgpRQSA9ICguLi5hKSA9PgpHUyA9IHMgPT4KR0EgPSBzID0+CkdSID0gcyA9PgogIGNhbGN1bGF0ZTogKEwsIEMpID0+CiAgaW52ZXJzZTogKGYsIExDKSA9PgooKSA9PgooKSA9PgogIHJvc2FLbSA9IGUgPT4KICByb3NhS3MgPSBlID0+ClNlcmllc0NhcHModmFsdWVzKQogIHYgPT4KKHIsIHYpID0+CkNvaWxUdXJucyhMLCBmb3JtLCBpbm5lciwgb3V0ZXIpCkNvaWxJbmR1Y3RhbmNlKG4sIGZvcm0sIGxlbikKT25JbnB1dCh7IHRhcmdldCB9KQpHZXRQcm9wcyhjc3NTdHlsZSkKICBuYW1lID0+CkdldEF0dHJpYnV0ZXMoZSkKICBuYW1lID0+CklzUmFuZ2UoZmllbGRJZCkKRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKRmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZChuKQogIGUgPT4KU2V0RmllbGQobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFJhbmdlKG5hbWUpClNldFJhbmdlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpGb3JtYXRSYW5nZShhcmcsIHVuaXQpCihhLCBiKSA9PgoobiwgaSkgPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXRhbmNlKCkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlUmFuZ2UodmFsdWUpClBhcnNlTnVtYmVyKHZhbHVlKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CkZvcm1hdE51bWJlcihhcmcsIHVuaXQsIGZuID0gJ3JvdW5kJywgcm91bmQgPSAKKQpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KR2V0U2l6ZSgpCkdldE1heFNpemUoKQogIGUgPT4KICB2ID0+CkNoYW5nZVNpemUoc3ogPSAKKQooZSwgaSkgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQooZSwgaSkgPT4KZXZlbnQgPT4KZXZlbnQgPT4KICBlID0+Cih7IHRhcmdldCwgZGVsdGFZIH0pID0+Cih2LCBpKSA9PgooKSA9PgpOdW1lcmljVmFsdWUoW251bSwgZXhwXSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClJlbW92ZUFsbENoaWxkcmVuKGUpClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykKRXhwMlVuaXQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykKVW5pdChzdHIpCihbYV0pID0+ClJvdW5kVG8ocHJlYyA9IGNvbmZpZy5wcmVjaXNpb24pCm4gPT4KSXNOdW1iZXIoYXJnKQpJc1N0cmluZyhhcmcpCkNvcHlUb0NsaXBib2FyZChzdHIpClJlY3QoeyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH0pClJlY3QKUmVjdAooKQpSZWN0CiAgZ2V0KCkKICBnZXQoKQAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					217,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					218,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/main.js",
						"symkeys":
						[
							[
								1011,
								1037
							],
							[
								1307,
								1322
							],
							[
								1354,
								1370
							],
							[
								1460,
								1477
							],
							[
								1535,
								1541
							],
							[
								2250,
								2256
							]
						],
						"symlist":
						[
							"setApplicationMenu = () =>",
							"initIpc = () =>",
							" (event, arg) =>",
							" (event, href) =>",
							" () =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAFsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					219,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABbAAAAICBzZXRBcHBsaWNhdGlvbk1lbnUgPSAoKSA9PgogIGluaXRJcGMgPSAoKSA9PgooZXZlbnQsIGFyZykgPT4KKGV2ZW50LCBocmVmKSA9PgooKSA9PgooKSA9PgAAAAAAAAAAqwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsFAABRID0gcyA9PgpRQSA9ICguLi5hKSA9PgpHUyA9IHMgPT4KR0EgPSBzID0+CkdSID0gcyA9PgogIGNhbGN1bGF0ZTogKEwsIEMpID0+CiAgaW52ZXJzZTogKGYsIExDKSA9PgooKSA9PgooKSA9PgogIHJvc2FLbSA9IGUgPT4KICByb3NhS3MgPSBlID0+ClNlcmllc0NhcHModmFsdWVzKQogIHYgPT4KKHIsIHYpID0+CkNvaWxUdXJucyhMLCBmb3JtLCBpbm5lciwgb3V0ZXIpCkNvaWxJbmR1Y3RhbmNlKG4sIGZvcm0sIGxlbikKT25JbnB1dCh7IHRhcmdldCB9KQpHZXRQcm9wcyhjc3NTdHlsZSkKICBuYW1lID0+CkdldEF0dHJpYnV0ZXMoZSkKICBuYW1lID0+CklzUmFuZ2UoZmllbGRJZCkKRmllbGRJbmRleChhcmcpClNhdmVDb25maWcoKQpMb2FkQ29uZmlnKCkKRmllbGRFbGVtZW50cyhuKQpHZXRGaWVsZChuKQogIGUgPT4KU2V0RmllbGQobiwgdikKICBlID0+ClNlbGVjdEZpZWxkKGkpCihlLCB4KSA9PgpHdWVzc0ZpZWxkKCkKICB2ID0+CkdldFNlbGVjdGVkKCkKICBlID0+CkdldFJhbmdlKG5hbWUpClNldFJhbmdlKG5hbWUsIHZhbHVlKQpDYWxjVGhvbXBzb24oKQpGb3JtYXRSYW5nZShhcmcsIHVuaXQpCihhLCBiKSA9PgoobiwgaSkgPT4KQ2FsY0ZyZXF1ZW5jeSgpCkNhbGNJbmR1Y3RhbmNlKCkKQ2FsY0NhcGFjaXRhbmNlKCkKQ2xlYXJWYWx1ZXMoaWR4KQpQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpClBhcnNlUmFuZ2UodmFsdWUpClBhcnNlTnVtYmVyKHZhbHVlKQpQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKQpSZWFkRmllbGRzKG5hbWUpCih7IG5hbWUsIHZhbHVlIH0sIGkpID0+CkZvcm1hdE51bWJlcihhcmcsIHVuaXQsIGZuID0gJ3JvdW5kJywgcm91bmQgPSAKKQpTZXRTdGF0dXMoc3RyLCB0MSA9IDMwMDAsIHQyID0gMTAwMCkKU2V0dXBGaWVsZHMoKQooKSA9PgooYSwgaSkgPT4KICBlID0+CmUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KR2V0U2l6ZSgpCkdldE1heFNpemUoKQogIGUgPT4KICB2ID0+CkNoYW5nZVNpemUoc3ogPSAKKQooZSwgaSkgPT4KQ2hhbmdlUHJlY2lzaW9uKHApCkluaXQoKQooZSwgaSkgPT4KZXZlbnQgPT4KZXZlbnQgPT4KICBlID0+Cih7IHRhcmdldCwgZGVsdGFZIH0pID0+Cih2LCBpKSA9PgooKSA9PgpOdW1lcmljVmFsdWUoW251bSwgZXhwXSkKV2FpdEZvcihtcykKICByZXNvbHZlID0+ClJlbW92ZUFsbENoaWxkcmVuKGUpClBhcnRpdGlvbkFycmF5KGEsIHNpemUpCkV4cG9uZW50KG51bSkKVGhvdXNhbmQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykKRXhwMlVuaXQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykKVW5pdChzdHIpCihbYV0pID0+ClJvdW5kVG8ocHJlYyA9IGNvbmZpZy5wcmVjaXNpb24pCm4gPT4KSXNOdW1iZXIoYXJnKQpJc1N0cmluZyhhcmcpCkNvcHlUb0NsaXBib2FyZChzdHIpClJlY3QoeyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH0pClJlY3QKUmVjdAooKQpSZWN0CiAgZ2V0KCkKICBnZXQoKQAAAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					220,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					221,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6912,
								6937
							],
							[
								7260,
								7286
							],
							[
								7560,
								7587
							],
							[
								7861,
								7887
							],
							[
								8014,
								8049
							],
							[
								8212,
								8239
							],
							[
								8445,
								8473
							],
							[
								8521,
								8554
							],
							[
								8956,
								8982
							],
							[
								9083,
								9106
							],
							[
								9349,
								9405
							],
							[
								9414,
								9415
							],
							[
								9796,
								9847
							],
							[
								10314,
								10337
							],
							[
								10384,
								10389
							],
							[
								10498,
								10507
							],
							[
								10536,
								10540
							],
							[
								10568,
								10573
							],
							[
								10606,
								10610
							],
							[
								10642,
								10652
							],
							[
								10780,
								10790
							],
							[
								10966,
								10985
							],
							[
								11024,
								11046
							],
							[
								11117,
								11121
							],
							[
								11142,
								11146
							],
							[
								11171,
								11197
							],
							[
								11209,
								11210
							],
							[
								11257,
								11266
							],
							[
								11305,
								11333
							],
							[
								11505,
								11521
							],
							[
								11639,
								11648
							],
							[
								11868,
								11877
							],
							[
								12072,
								12081
							],
							[
								12224,
								12228
							],
							[
								12260,
								12284
							],
							[
								12583,
								12592
							],
							[
								13043,
								13048
							],
							[
								13078,
								13112
							],
							[
								13158,
								13179
							],
							[
								13203,
								13213
							],
							[
								13249,
								13279
							],
							[
								13356,
								13390
							],
							[
								13472,
								13495
							],
							[
								13545,
								13587
							],
							[
								13665,
								13707
							],
							[
								14255,
								14274
							],
							[
								14414,
								14422
							],
							[
								15114,
								15156
							],
							[
								15167,
								15172
							],
							[
								15232,
								15255
							],
							[
								15300,
								15323
							],
							[
								15369,
								15404
							],
							[
								15501,
								15539
							],
							[
								15598,
								15602
							],
							[
								15618,
								15622
							],
							[
								15651,
								15664
							],
							[
								15767,
								15771
							],
							[
								15797,
								15802
							],
							[
								15862,
								15867
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					222,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6936,
								6961
							],
							[
								7284,
								7310
							],
							[
								7584,
								7611
							],
							[
								7885,
								7911
							],
							[
								8038,
								8073
							],
							[
								8236,
								8263
							],
							[
								8469,
								8497
							],
							[
								8545,
								8578
							],
							[
								8980,
								9006
							],
							[
								9107,
								9130
							],
							[
								9373,
								9429
							],
							[
								9438,
								9439
							],
							[
								9820,
								9871
							],
							[
								10338,
								10361
							],
							[
								10408,
								10413
							],
							[
								10522,
								10531
							],
							[
								10560,
								10564
							],
							[
								10592,
								10597
							],
							[
								10630,
								10634
							],
							[
								10666,
								10676
							],
							[
								10804,
								10814
							],
							[
								10990,
								11009
							],
							[
								11048,
								11070
							],
							[
								11141,
								11145
							],
							[
								11166,
								11170
							],
							[
								11195,
								11221
							],
							[
								11233,
								11234
							],
							[
								11281,
								11290
							],
							[
								11329,
								11357
							],
							[
								11529,
								11545
							],
							[
								11663,
								11672
							],
							[
								11892,
								11901
							],
							[
								12096,
								12105
							],
							[
								12248,
								12252
							],
							[
								12284,
								12308
							],
							[
								12607,
								12616
							],
							[
								13067,
								13072
							],
							[
								13102,
								13136
							],
							[
								13182,
								13203
							],
							[
								13227,
								13237
							],
							[
								13273,
								13303
							],
							[
								13380,
								13414
							],
							[
								13496,
								13519
							],
							[
								13569,
								13611
							],
							[
								13689,
								13731
							],
							[
								14279,
								14298
							],
							[
								14438,
								14446
							],
							[
								15138,
								15180
							],
							[
								15191,
								15196
							],
							[
								15256,
								15279
							],
							[
								15324,
								15347
							],
							[
								15393,
								15428
							],
							[
								15525,
								15563
							],
							[
								15622,
								15626
							],
							[
								15642,
								15646
							],
							[
								15675,
								15688
							],
							[
								15791,
								15795
							],
							[
								15821,
								15826
							],
							[
								15886,
								15891
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					223,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.js",
						"symkeys":
						[
							[
								40,
								48
							],
							[
								111,
								125
							],
							[
								186,
								195
							],
							[
								243,
								252
							],
							[
								280,
								289
							],
							[
								426,
								446
							],
							[
								484,
								503
							],
							[
								760,
								766
							],
							[
								964,
								970
							],
							[
								1097,
								1110
							],
							[
								1269,
								1282
							],
							[
								1308,
								1335
							],
							[
								1362,
								1366
							],
							[
								1394,
								1403
							],
							[
								1721,
								1762
							],
							[
								2325,
								2362
							],
							[
								2616,
								2645
							],
							[
								2991,
								3019
							],
							[
								3068,
								3075
							],
							[
								3111,
								3137
							],
							[
								3194,
								3201
							],
							[
								3243,
								3269
							],
							[
								3366,
								3391
							],
							[
								3565,
								3587
							],
							[
								3783,
								3805
							],
							[
								3923,
								3948
							],
							[
								4045,
								4066
							],
							[
								4111,
								4115
							],
							[
								4181,
								4205
							],
							[
								4250,
								4254
							],
							[
								4316,
								4340
							],
							[
								4478,
								4487
							],
							[
								4680,
								4702
							],
							[
								4729,
								4733
							],
							[
								4816,
								4839
							],
							[
								4872,
								4876
							],
							[
								4940,
								4964
							],
							[
								5557,
								5588
							],
							[
								6157,
								6181
							],
							[
								6596,
								6628
							],
							[
								6663,
								6672
							],
							[
								6778,
								6787
							],
							[
								6935,
								6960
							],
							[
								7237,
								7263
							],
							[
								7537,
								7564
							],
							[
								7838,
								7864
							],
							[
								7991,
								8026
							],
							[
								8189,
								8216
							],
							[
								8422,
								8450
							],
							[
								8498,
								8531
							],
							[
								8933,
								8959
							],
							[
								9060,
								9083
							],
							[
								9326,
								9382
							],
							[
								9391,
								9392
							],
							[
								9773,
								9824
							],
							[
								10291,
								10314
							],
							[
								10361,
								10366
							],
							[
								10475,
								10484
							],
							[
								10513,
								10517
							],
							[
								10545,
								10550
							],
							[
								10583,
								10587
							],
							[
								10619,
								10629
							],
							[
								10757,
								10767
							],
							[
								10943,
								10962
							],
							[
								11001,
								11023
							],
							[
								11094,
								11098
							],
							[
								11119,
								11123
							],
							[
								11148,
								11174
							],
							[
								11186,
								11187
							],
							[
								11234,
								11243
							],
							[
								11282,
								11310
							],
							[
								11482,
								11498
							],
							[
								11616,
								11625
							],
							[
								11845,
								11854
							],
							[
								12049,
								12058
							],
							[
								12201,
								12205
							],
							[
								12237,
								12261
							],
							[
								12560,
								12569
							],
							[
								13020,
								13025
							],
							[
								13055,
								13089
							],
							[
								13135,
								13156
							],
							[
								13180,
								13190
							],
							[
								13226,
								13256
							],
							[
								13333,
								13367
							],
							[
								13449,
								13472
							],
							[
								13522,
								13564
							],
							[
								13642,
								13684
							],
							[
								14232,
								14251
							],
							[
								14391,
								14399
							],
							[
								15091,
								15133
							],
							[
								15144,
								15149
							],
							[
								15209,
								15232
							],
							[
								15277,
								15300
							],
							[
								15346,
								15381
							],
							[
								15478,
								15516
							],
							[
								15575,
								15579
							],
							[
								15595,
								15599
							],
							[
								15628,
								15641
							],
							[
								15744,
								15748
							],
							[
								15774,
								15779
							],
							[
								15839,
								15844
							]
						],
						"symlist":
						[
							"Q = s =>",
							"QA = (...a) =>",
							"GS = s =>",
							"GA = s =>",
							"GR = s =>",
							"calculate: (L, C) =>",
							"inverse: (f, LC) =>",
							" () =>",
							" () =>",
							"rosaKm = e =>",
							"rosaKs = e =>",
							"function SeriesCaps(values)",
							"v =>",
							"(r, v) =>",
							"function CoilTurns(L, form, inner, outer)",
							"function CoilInductance(n, form, len)",
							" function OnInput({ target })",
							" function GetProps(cssStyle)",
							"name =>",
							" function GetAttributes(e)",
							"name =>",
							" function IsRange(fieldId)",
							" function FieldIndex(arg)",
							" function SaveConfig()",
							" function LoadConfig()",
							"function FieldElements(n)",
							" function GetField(n)",
							"e =>",
							" function SetField(n, v)",
							"e =>",
							" function SelectField(i)",
							"(e, x) =>",
							" function GuessField()",
							"v =>",
							" function GetSelected()",
							"e =>",
							" function GetRange(name)",
							" function SetRange(name, value)",
							" function CalcThompson()",
							" function FormatRange(arg, unit)",
							"(a, b) =>",
							"(n, i) =>",
							" function CalcFrequency()",
							" function CalcInductance()",
							" function CalcCapacitance()",
							" function ClearValues(idx)",
							" function ProcessValue(value, name)",
							" function ParseRange(value)",
							" function ParseNumber(value)",
							" function ParseValue(value, name)",
							" function ReadFields(name)",
							"({ name, value }, i) =>",
							" function FormatNumber(arg, unit, fn = 'round', round = ",
							")",
							"async function SetStatus(str, t1 = 3000, t2 = 1000)",
							" function SetupFields()",
							"() =>",
							"(a, i) =>",
							"e =>",
							" e =>",
							"e =>",
							"async e =>",
							"async e =>",
							" function GetSize()",
							" function GetMaxSize()",
							"e =>",
							"v =>",
							" function ChangeSize(sz = ",
							")",
							"(e, i) =>",
							" function ChangePrecision(p)",
							" function Init()",
							"(e, i) =>",
							" event =>",
							" event =>",
							"e =>",
							" ({ target, deltaY }) =>",
							"(v, i) =>",
							"() =>",
							" function NumericValue([num, exp])",
							" function WaitFor(ms)",
							"resolve =>",
							" function RemoveAllChildren(e)",
							" function* PartitionArray(a, size)",
							" function Exponent(num)",
							" function Thousand(exponent, fn = 'floor')",
							" function Exp2Unit(exponent, fn = 'floor')",
							" function Unit(str)",
							"([a]) =>",
							" function RoundTo(prec = config.precision)",
							" n =>",
							" function IsNumber(arg)",
							" function IsString(arg)",
							"async function CopyToClipboard(str)",
							"function Rect({ x, y, width, height })",
							"Rect",
							"Rect",
							" function* ()",
							"Rect",
							"get()",
							"get()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					224,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/thomson-calculator/src/app.html",
						"symkeys":
						[
							[
								542,
								548
							],
							[
								1161,
								1174
							],
							[
								1212,
								1225
							],
							[
								1277,
								1286
							],
							[
								1357,
								1370
							],
							[
								1442,
								1448
							]
						],
						"symlist":
						[
							"fields",
							"precision_grp",
							"precision_lbl",
							"precision",
							"precision_num",
							"status"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrBQAAUSA9IHMgPT4KUUEgPSAoLi4uYSkgPT4KR1MgPSBzID0+CkdBID0gcyA9PgpHUiA9IHMgPT4KICBjYWxjdWxhdGU6IChMLCBDKSA9PgogIGludmVyc2U6IChmLCBMQykgPT4KKCkgPT4KKCkgPT4KICByb3NhS20gPSBlID0+CiAgcm9zYUtzID0gZSA9PgpTZXJpZXNDYXBzKHZhbHVlcykKICB2ID0+CihyLCB2KSA9PgpDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKQpDb2lsSW5kdWN0YW5jZShuLCBmb3JtLCBsZW4pCk9uSW5wdXQoeyB0YXJnZXQgfSkKR2V0UHJvcHMoY3NzU3R5bGUpCiAgbmFtZSA9PgpHZXRBdHRyaWJ1dGVzKGUpCiAgbmFtZSA9PgpJc1JhbmdlKGZpZWxkSWQpCkZpZWxkSW5kZXgoYXJnKQpTYXZlQ29uZmlnKCkKTG9hZENvbmZpZygpCkZpZWxkRWxlbWVudHMobikKR2V0RmllbGQobikKICBlID0+ClNldEZpZWxkKG4sIHYpCiAgZSA9PgpTZWxlY3RGaWVsZChpKQooZSwgeCkgPT4KR3Vlc3NGaWVsZCgpCiAgdiA9PgpHZXRTZWxlY3RlZCgpCiAgZSA9PgpHZXRSYW5nZShuYW1lKQpTZXRSYW5nZShuYW1lLCB2YWx1ZSkKQ2FsY1Rob21wc29uKCkKRm9ybWF0UmFuZ2UoYXJnLCB1bml0KQooYSwgYikgPT4KKG4sIGkpID0+CkNhbGNGcmVxdWVuY3koKQpDYWxjSW5kdWN0YW5jZSgpCkNhbGNDYXBhY2l0YW5jZSgpCkNsZWFyVmFsdWVzKGlkeCkKUHJvY2Vzc1ZhbHVlKHZhbHVlLCBuYW1lKQpQYXJzZVJhbmdlKHZhbHVlKQpQYXJzZU51bWJlcih2YWx1ZSkKUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkKUmVhZEZpZWxkcyhuYW1lKQooeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PgpGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gCikKU2V0U3RhdHVzKHN0ciwgdDEgPSAzMDAwLCB0MiA9IDEwMDApClNldHVwRmllbGRzKCkKKCkgPT4KKGEsIGkpID0+CiAgZSA9PgplID0+CiAgZSA9PgogIGUgPT4KICBlID0+CkdldFNpemUoKQpHZXRNYXhTaXplKCkKICBlID0+CiAgdiA9PgpDaGFuZ2VTaXplKHN6ID0gCikKKGUsIGkpID0+CkNoYW5nZVByZWNpc2lvbihwKQpJbml0KCkKKGUsIGkpID0+CmV2ZW50ID0+CmV2ZW50ID0+CiAgZSA9PgooeyB0YXJnZXQsIGRlbHRhWSB9KSA9PgoodiwgaSkgPT4KKCkgPT4KTnVtZXJpY1ZhbHVlKFtudW0sIGV4cF0pCldhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgpSZW1vdmVBbGxDaGlsZHJlbihlKQpQYXJ0aXRpb25BcnJheShhLCBzaXplKQpFeHBvbmVudChudW0pClRob3VzYW5kKGV4cG9uZW50LCBmbiA9ICdmbG9vcicpCkV4cDJVbml0KGV4cG9uZW50LCBmbiA9ICdmbG9vcicpClVuaXQoc3RyKQooW2FdKSA9PgpSb3VuZFRvKHByZWMgPSBjb25maWcucHJlY2lzaW9uKQpuID0+CklzTnVtYmVyKGFyZykKSXNTdHJpbmcoYXJnKQpDb3B5VG9DbGlwYm9hcmQoc3RyKQpSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KQpSZWN0ClJlY3QKKCkKUmVjdAogIGdldCgpCiAgZ2V0KCkAAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "function checnum(e) {\n  var t = e.value;\n  t.lastIndexOf(' ') >= 0 && ((t = t.replace(' ', '')), (e.value = t)), t.lastIndexOf(',') >= 0 && ((t = t.replace(',', '.')), (e.value = t));\n  var n,\n    l = '0123456789.-,',\n    d = !0,\n    a = t;\n  if(0 == a.length) return !1;\n  for(i = 0; i < a.length && 1 == d; i++) (n = a.charAt(i)), -1 == l.indexOf(n) && ((t = t.substring(0, t.length - 1)), (e.value = t));\n  e.value.match(/\\./g).length > 1 && (e.value = e.value.substr(0, e.value.lastIndexOf('.'))), 0 == t.lastIndexOf('.') && ((t = '0' + t), (e.value = t));\n}\nfunction SetMeasure2(e) {\n  if(0 == e)\n    var t = 1 * document.getElementById('DM2').value,\n      n = 1 * document.getElementById('D2').value * t,\n      l = 1 * document.getElementById('lM2').value,\n      d = 1 * document.getElementById('l2').value * l;\n  var a = 1 * document.getElementById('Measure2').value;\n  1 == a\n    ? ((document.getElementById('D_td2').innerHTML =\n        '=&nbsp;<input id=\"D2\" value=\"12\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"DM2\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitD2()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'),\n      (document.getElementById('l_td2').innerHTML =\n        '=&nbsp;<input id=\"l2\" value=\"10\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"lM2\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitl2()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'))\n    : 0 == a &&\n      ((document.getElementById('D_td2').innerHTML =\n        '=&nbsp;<input id=\"D2\" value=\"12\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"DM2\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitD2()\"><option value=\"0.0254\">mil</option><option selected=\"selected\" value=\"25.4\">inch</option></select>'),\n      (document.getElementById('l_td2').innerHTML =\n        '=&nbsp;<input id=\"l2\" value=\"10\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"lM2\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitl2()\"><option value=\"0.0254\">mil</option><option selected=\"selected\" value=\"25.4\">inch</option></select>')),\n    0 == e &&\n      ((t = 1 * document.getElementById('DM2').value), (document.getElementById('D2').value = n / t), (l = 1 * document.getElementById('lM2').value), (document.getElementById('l2').value = d / l));\n}\nfunction SetMeasure(e) {\n  if(0 == e)\n    var t = 1 * document.getElementById('DM').value,\n      n = 1 * document.getElementById('D').value * t,\n      l = 1 * document.getElementById('dM').value,\n      d = 1 * document.getElementById('d').value * l,\n      a = 1 * document.getElementById('pM').value,\n      u = 1 * document.getElementById('p').value * a,\n      o = 1 * document.getElementById('lM').value,\n      m = 1 * document.getElementById('l').value * o;\n  var c = 1 * document.getElementById('Measure').value;\n  1 == c\n    ? ((document.getElementById('D_td').innerHTML =\n        '=&nbsp;<input id=\"D\" value=\"10\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"DM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitD()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'),\n      (document.getElementById('d_td').innerHTML =\n        '=&nbsp;<input id=\"d\" onkeyup=\"checnum(this)\" onchange=\"setP()\" onkeydown=\"clearFix()\" type=\"text\" size=\"5px\" /><select id=\"dM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitd()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'),\n      (document.getElementById('k_td').innerHTML =\n        '=&nbsp;<input id=\"p\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"pM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitp()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'),\n      (document.getElementById('l_td').innerHTML =\n        '=&nbsp;<input id=\"l\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"lM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitl()\"><option selected=\"selected\" value=\"1\">mm</option><option value=\"10\">cm</option></select>'))\n    : 0 == c &&\n      ((document.getElementById('D_td').innerHTML =\n        '=&nbsp;<input id=\"D\" value=\"10\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"DM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitD()\"><option value=\"0.0254\">mil</option><option selected=\"selected\" value=\"25.4\">inch</option></select>'),\n      (document.getElementById('d_td').innerHTML =\n        '=&nbsp;<input id=\"d\" onkeyup=\"checnum(this)\" onchange=\"setP()\" onkeydown=\"clearFix()\" type=\"text\" size=\"5px\" /><select id=\"dM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitd()\"><option selected=\"selected\" value=\"0.0254\">mil</option><option value=\"25.4\">inch</option></select>'),\n      (document.getElementById('k_td').innerHTML =\n        '=&nbsp;<input id=\"p\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"pM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitp()\"><option selected=\"selected\" value=\"0.0254\">mil</option><option value=\"25.4\">inch</option></select>'),\n      (document.getElementById('l_td').innerHTML =\n        '=&nbsp;<input id=\"l\" onkeyup=\"checnum(this)\" type=\"text\" size=\"5px\" /><select id=\"lM\" style=\"width: auto;\" onclick=\"setC()\" onChange=\"unitl()\"><option value=\"0.0254\">mil</option><option selected=\"selected\" value=\"25.4\">inch</option></select>')),\n    0 == e &&\n      ((t = 1 * document.getElementById('DM').value),\n      (document.getElementById('D').value = n / t),\n      (l = 1 * document.getElementById('dM').value),\n      (document.getElementById('d').value = d / l),\n      (a = 1 * document.getElementById('pM').value),\n      (document.getElementById('p').value = u / a),\n      (o = 1 * document.getElementById('lM').value),\n      (document.getElementById('l').value = m / o));\n}\nfunction setC() {\n  (IndVal = eval(document.getElementById('LM').value)),\n    document.getElementById('LM2') && (IndVal2 = eval(document.getElementById('LM2').value)),\n    (dVal = eval(document.getElementById('dM').value)),\n    (pVal = eval(document.getElementById('pM').value)),\n    (lVal = eval(document.getElementById('lM').value)),\n    document.getElementById('lM2') && (lVal2 = eval(document.getElementById('lM2').value)),\n    (DVal = eval(document.getElementById('DM').value)),\n    document.getElementById('DM2') && (D2Val = eval(document.getElementById('DM2').value));\n}\nfunction unitL() {\n  var L = parseFloat(document.getElementById('L').value),\n    LM = eval(document.getElementById('LM').value);\n  L && ((L = (L * IndVal) / LM), (document.getElementById('L').value = parseFloat(L)));\n}\nfunction unitL3() {\n  var l = parseFloat(document.getElementById('L2').value),\n    lM = eval(document.getElementById('LM2').value);\n  l && ((l = (l * IndVal2) / lM), (document.getElementById('L2').value = parseFloat(l)));\n}\nfunction unitD() {\n  var D = parseFloat(document.getElementById('D').value),\n    DM = eval(document.getElementById('DM').value);\n  D && ((D = (D * DVal) / DM), (document.getElementById('D').value = parseFloat(D)));\n}\nfunction unitD2() {\n  var D2 = parseFloat(document.getElementById('D2').value),\n    DM2 = eval(document.getElementById('DM2').value);\n  D2 && ((D2 = (D2 * D2Val) / DM2), (document.getElementById('D2').value = parseFloat(D2)));\n}\nfunction unitd() {\n  var d = parseFloat(document.getElementById('d').value),\n    dM = eval(document.getElementById('dM').value);\n  d && ((d = (d * dVal) / dM), (document.getElementById('d').value = parseFloat(d)));\n}\nfunction unitp() {\n  var p = parseFloat(document.getElementById('p').value),\n    pM = eval(document.getElementById('pM').value);\n  p && ((p = (p * pVal) / pM), (document.getElementById('p').value = parseFloat(p)));\n}\nfunction unitl() {\n  var l = parseFloat(document.getElementById('l').value),\n    lM = eval(document.getElementById('lM').value);\n  l && ((l = (l * lVal) / lM), (document.getElementById('l').value = parseFloat(l)));\n}\nfunction unitl2() {\n  var l2 = parseFloat(document.getElementById('l2').value),\n    lM2 = eval(document.getElementById('lM2').value);\n  l2 && ((l2 = (l2 * lVal2) / lM2), (document.getElementById('l2').value = parseFloat(l2)));\n}\nfunction setP() {\n  var auto = document.getElementById('checkbox').checked;\n  if(1 == auto) {\n    var d = parseFloat(document.getElementById('d').value),\n      dM = eval(document.getElementById('dM').value),\n      pM = eval(document.getElementById('pM').value);\n    d *= dM;\n    var p1 = odCalc(d);\n    (p1 /= pM), (document.getElementById('p').value = p1), (document.getElementById('gauge').innerHTML = '');\n  }\n}\nfunction clearFix() {\n  document.getElementById('gauge').innerHTML = '';\n}\nfunction setAWG(awg) {\n  var d = 0.127 * Math.exp((36 - awg) / 8.624889),\n    dM = eval(document.getElementById('dM').value);\n  (document.getElementById('d').value = d / dM), setP();\n  var f = ['0000', '000', '00'];\n  if(awg < 0) {\n    var g = parseInt(awg) + 3;\n    document.getElementById('gauge').innerHTML = '(AWG-' + f[g] + ')';\n  } else document.getElementById('gauge').innerHTML = '(AWG-' + awg + ')';\n}\nfunction rosaKm(e) {\nlet n2, n3, n5, n7, n9;\n  return (\n    (n2 = e * e),\n    (n3 = n2 * e),\n    (n5 = n3 * n2),\n    (n7 = n5 * n2),\n    (n9 = n7 * n2),\n    Math.log(2 * Math.PI) - 1.5 - Math.log(e) / (6 * e) - 0.33084236 / e - 1 / (120 * n3) + 1 / (504 * n5) - 0.0011923 / n7 + 5068e-7 / n9\n  );\n}\nfunction rosaKs(e) {\n  return 1.25 - Math.log(2 * e);\n}\nfunction odCalc(e) {\n  return (m = 0.96344), (b = -0.19861), (od = Math.max(Math.exp(m * Math.log(e) + b), 1.09 * e)), od;\n}\nfunction clear01() {\n  (document.getElementById('w').value = ''),\n    (document.getElementById('l').value = ''),\n    (document.getElementById('L').value = ''),\n    (document.getElementById('p').value = ''),\n    (document.getElementById('D').value = ''),\n    (document.getElementById('d').value = '');\n}\nfunction clear02() {\n  (document.getElementById('w0').value = ''), (document.getElementById('D2').value = ''), (document.getElementById('l2').value = ''), (document.getElementById('L2').value = '');\n}\nfunction calc01() {\n  var msg = 'Data was entered wrong';\n  'ru' == document.documentElement.lang && (msg = '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ');\n  var I = parseFloat(document.getElementById('L').value),\n    D = parseFloat(document.getElementById('D').value),\n    d = parseFloat(document.getElementById('d').value),\n    p = parseFloat(document.getElementById('p').value),\n    LM = eval(document.getElementById('LM').value),\n    DM = eval(document.getElementById('DM').value),\n    dM = eval(document.getElementById('dM').value),\n    pM = eval(document.getElementById('pM').value),\n    lM = eval(document.getElementById('lM').value);\n  if(I && D && d && p)\n    if(0 != I && 0 != D && 0 != d && 0 != p) {\n      (I *= LM), (D *= DM), (d *= dM), (p *= pM);\n      var w = 0,\n        l = 0,\n        i = 0,\n        Dk = 0;\n      for(Ks = rosaKs(p / d), Dk = D + p; i <= I; )\n        (w += 0.001),\n          (l = w * p),\n          (k = l / Dk),\n          (i = 2e-4 * Math.PI * Dk * w * w * (Math.log(1 + Math.PI / (2 * k)) + 1 / (2.3004 + 3.437 * k + 1.763 * k * k - 0.47 / Math.pow(0.755 + 1 / k, 1.44)))),\n          (Km = rosaKm(w)),\n          (Lcor = 2e-4 * Math.PI * Dk * w * (Ks + Km)),\n          (i -= Lcor);\n      var w0 = Math.round(1e3 * w) / 1e3,\n        la = Math.round((1e3 * l) / lM) / 1e3;\n      (document.getElementById('w').value = parseFloat(w0)), (document.getElementById('l').value = parseFloat(la));\n    } else alert(msg);\n  else alert(msg);\n}\n\nfunction calc02() {\n  var msg = 'Data was entered wrong';\n  'ru' == document.documentElement.lang && (msg = '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ');\n  var w = parseFloat(document.getElementById('w0').value),\n    D = parseFloat(document.getElementById('D2').value),\n    l = parseFloat(document.getElementById('l2').value),\n    LM2 = eval(document.getElementById('LM2').value),\n    lM = eval(document.getElementById('lM2').value),\n    DM = eval(document.getElementById('DM2').value);\n  if(0 != w && 0 != D && 0 != l)\n    if(w && D && l) {\n      (l *= lM), (D *= DM);\n      var p = l / w,\n        Ks = rosaKs(1.07),\n        Dk = D + p,\n        k = l / Dk,\n        L = 2e-4 * Math.PI * Dk * w * w * (Math.log(1 + Math.PI / (2 * k)) + 1 / (2.3004 + 3.437 * k + 1.763 * k * k - 0.47 / Math.pow(0.755 + 1 / k, 1.44))),\n        Km = rosaKm(w),\n        Lcor = 2e-4 * Math.PI * Dk * w * (Ks + Km);\n      L -= Lcor;\n      var L0 = Math.round((1e3 * L) / LM2) / 1e3;\n      document.getElementById('L2').value = parseFloat(L0);\n    } else alert(msg);\n  else alert(msg);\n}\nvar DVal = 0,\n  D2Val = 0,\n  dVal = 0,\n  pVal = 0,\n  lVal = 0,\n  lVal2 = 0,\n  IndVal = 0,\n  IndVal2 = 0;\nwindow.addEventListener(\n  'DOMContentLoaded',\n  function() {\n    SetMeasure(1), SetMeasure2(1);\n    var e = document.getElementById('awg').value;\n    setAWG(e);\n  },\n  !0\n);\n",
			"file": "one_layer.js",
			"file_size": 12881,
			"file_write_time": 133494948094246328,
			"settings":
			{
				"buffer_size": 12865,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPosAAAAAAAA+ywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPosAAAAAAAA+iwAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAKsjAAAAAAAArCMAAAAAAAAAAAAArCMAAAAAAACuIwAAAAAAAAAAAACuIwAAAAAAAK8jAAAAAAAAAAAAAK8jAAAAAAAAsCMAAAAAAAAAAAAAsCMAAAAAAACxIwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsjAAAAAAAAqyMAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " n2,n3,"
					},
					"BwAAALEjAAAAAAAAsiMAAAAAAAAAAAAAsiMAAAAAAACzIwAAAAAAAAAAAACzIwAAAAAAALQjAAAAAAAAAAAAALQjAAAAAAAAtSMAAAAAAAAAAAAAtSMAAAAAAAC2IwAAAAAAAAAAAAC2IwAAAAAAALcjAAAAAAAAAAAAALcjAAAAAAAAuCMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEjAAAAAAAAsSMAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "n4,"
					},
					"AwAAALgjAAAAAAAAuSMAAAAAAAAAAAAAuSMAAAAAAAC6IwAAAAAAAAAAAAC6IwAAAAAAALsjAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgjAAAAAAAAuCMAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "n5,n6,n7"
					},
					"CAAAALsjAAAAAAAAvCMAAAAAAAAAAAAAvCMAAAAAAAC9IwAAAAAAAAAAAAC9IwAAAAAAAL4jAAAAAAAAAAAAAL4jAAAAAAAAvyMAAAAAAAAAAAAAvyMAAAAAAADAIwAAAAAAAAAAAADAIwAAAAAAAMEjAAAAAAAAAAAAAMEjAAAAAAAAwiMAAAAAAAAAAAAAwiMAAAAAAADDIwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsjAAAAAAAAuyMAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": ",n8"
					},
					"AwAAAMMjAAAAAAAAxCMAAAAAAAAAAAAAxCMAAAAAAADFIwAAAAAAAAAAAADFIwAAAAAAAMYjAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMjAAAAAAAAwyMAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAAMUjAAAAAAAAxSMAAAAAAAABAAAAOA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYjAAAAAAAAxiMAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"cut",
					null,
					"AQAAAKwjAAAAAAAArCMAAAAAAAAaAAAAICBsZXQgbjIsbjMsbjQsbjUsbjYsbjcsbgo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwjAAAAAAAAxiMAAAAAAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKwjAAAAAAAArSMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwjAAAAAAAArCMAAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKwjAAAAAAAArSMAAAAAAAAAAAAArSMAAAAAAACuIwAAAAAAAAAAAACuIwAAAAAAAK8jAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwjAAAAAAAArCMAAAAAAAAAAAAAAAAAAA"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8jAAAAAAAAsCMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8jAAAAAAAAryMAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"",
					null,
					"AQAAALAjAAAAAAAAwyMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAjAAAAAAAAsCMAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"left_delete",
					null,
					"AQAAAMIjAAAAAAAAwiMAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMjAAAAAAAAwyMAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMIjAAAAAAAAwyMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIjAAAAAAAAwiMAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"cut",
					null,
					"AQAAAJcjAAAAAAAAlyMAAAAAAABiAQAAZnVuY3Rpb24gcm9zYUttKGUpIHsKbGV0IG4yLCBuMywgbjUsIG43LCBuOTsKICByZXR1cm4gKAogICAgKG4yID0gZSAqIGUpLAogICAgKG4zID0gbjIgKiBlKSwKICAgIChuNSA9IG4zICogbjIpLAogICAgKG43ID0gbjUgKiBuMiksCiAgICAobjkgPSBuNyAqIG4yKSwKICAgIE1hdGgubG9nKDIgKiBNYXRoLlBJKSAtIDEuNSAtIE1hdGgubG9nKGUpIC8gKDYgKiBlKSAtIDAuMzMwODQyMzYgLyBlIC0gMSAvICgxMjAgKiBuMykgKyAxIC8gKDUwNCAqIG41KSAtIDAuMDAxMTkyMyAvIG43ICsgNTA2OGUtNyAvIG45CiAgKTsKfQpmdW5jdGlvbiByb3NhS3MoZSkgewogIHJldHVybiAxLjI1IC0gTWF0aC5sb2coMiAqIGUpOwp9",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkkAAAAAAAAlyMAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"paste",
					null,
					"AQAAAJcjAAAAAAAA+SQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcjAAAAAAAAlyMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/app.js",
			"settings":
			{
				"buffer_size": 16675,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					45,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD4yAAAAAAAAPzIAAAAAAAAAAAAAPzIAAAAAAABBMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjIAAAAAAAA+MgAAAAAAAAAAAAAAAElA"
				],
				[
					48,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAQTIAAAAAAABBMgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAABAEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAASBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABIEAAAAAAAAEwQAAAAAAAAAAAAAEwQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB0EAAAAAAAAHwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwQAAAAAAAAfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAEAAAAAAAAIQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n$"
					},
					"AwAAACEEAAAAAAAAIgQAAAAAAAAAAAAAIgQAAAAAAAAjBAAAAAAAAAAAAAAjBAAAAAAAACQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQQAAAAAAAAhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAACMEAAAAAAAAIwQAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAACMEAAAAAAAAJAQAAAAAAAAAAAAAIgQAAAAAAAAiBAAAAAAAAAEAAAAJIgQAAAAAAAAiBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAAaBAAAAAAAABsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAACRA"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsEAAAAAAAAHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwQAAAAAAAAbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABwEAAAAAAAAHgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAQAAAAAAAAcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"right_delete",
					null,
					"AQAAAB0EAAAAAAAAHQQAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "}catch"
					},
					"BgAAACYEAAAAAAAAJwQAAAAAAAAAAAAAJwQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACkEAAAAAAAAAAAAACkEAAAAAAAAKgQAAAAAAAAAAAAAKgQAAAAAAAArBAAAAAAAAAAAAAArBAAAAAAAACwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgQAAAAAAAAmBAAAAAAAAP///////+9/"
				],
				[
					79,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACwEAAAAAAAALgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC8EAAAAAAAAMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwQAAAAAAAAvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADAEAAAAAAAAMgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAD4EAAAAAAAAQAQAAAAAAAAAAAAAOwQAAAAAAAA7BAAAAAAAAAIAAAAgIDsEAAAAAAAAPgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgQAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAD4EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAABCBAAAAAAAAAAAAAA7BAAAAAAAADsEAAAAAAAAAwAAACAgCQ",
					"AQAAAAAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"DAAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPQQAAAAAAAA9BAAAAAAAAAMAAAAgIAk8BAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA/BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQQQAAAAAAAAAAAAAQQQAAAAAAABCBAAAAAAAAAAAAABCBAAAAAAAAEMEAAAAAAAAAAAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAERA"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEYEAAAAAAAASAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEcEAAAAAAAASQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwQAAAAAAABHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ERROR"
					},
					"BQAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE4EAAAAAAAATwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAE8EAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABRBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFIEAAAAAAAAUwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAFEEAAAAAAAAUgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"left_delete",
					null,
					"AQAAAFEEAAAAAAAAUQQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFEEAAAAAAAAUgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAAFEEAAAAAAAAUQQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ".message"
					},
					"CAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAAUgQAAAAAAABTBAAAAAAAAAAAAABTBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVQQAAAAAAAAAAAAAVQQAAAAAAABWBAAAAAAAAAAAAABWBAAAAAAAAFcEAAAAAAAAAAAAAFcEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"cut",
					null,
					"AQAAADsEAAAAAAAAOwQAAAAAAAAhAAAAY29uc29sZS5sb2coJ0VSUk9SJywgZS5tZXNzYWdlKTsK",
					"AQAAAAAAAAABAAAAOwQAAAAAAABcBAAAAAAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"paste",
					null,
					"AQAAADsEAAAAAAAAXAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"paste",
					null,
					"AQAAALgyAAAAAAAA2TIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuDIAAAAAAAC4MgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA2TIAAAAAAADZMgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiAAAAAAAAAEoAAAAvL2ltcG9ydCAnLi9zdHlsZXNoZWV0cy90bGl0ZS5jc3MnOwoKLy9pbXBvcnQgeyB0bGl0ZSB9IGZyb20gJy4vdGxpdGUuanMnOw",
					"AQAAAAAAAAABAAAAIQAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"left_delete",
					null,
					"AQAAACMAAAAAAAAAIwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAADRA"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACMAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					2,
					"left_delete",
					null,
					"AgAAACMAAAAAAAAAIwAAAAAAAAABAAAAcyIAAAAAAAAAIgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAABYEAAAAAAAAFwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAP///////+9/"
				],
				[
					231,
					1,
					"left_delete",
					null,
					"AQAAABYEAAAAAAAAFgQAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "\nthrow"
					},
					"BwAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAACAEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAiBAAAAAAAAAAAAAAiBAAAAAAAACMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "thort"
					},
					"BQAAAKQyAAAAAAAApTIAAAAAAAAAAAAApTIAAAAAAACmMgAAAAAAAAAAAACmMgAAAAAAAKcyAAAAAAAAAAAAAKcyAAAAAAAAqDIAAAAAAAAAAAAAqDIAAAAAAACpMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApDIAAAAAAACkMgAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " w"
					},
					"AgAAAKkyAAAAAAAAqjIAAAAAAAAAAAAAqjIAAAAAAACrMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTIAAAAAAACpMgAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					4,
					"left_delete",
					null,
					"BAAAAKoyAAAAAAAAqjIAAAAAAAABAAAAd6kyAAAAAAAAqTIAAAAAAAABAAAAIKgyAAAAAAAAqDIAAAAAAAABAAAAdKcyAAAAAAAApzIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAqzIAAAAAAACrMgAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAKcyAAAAAAAAqDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApzIAAAAAAACnMgAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					2,
					"left_delete",
					null,
					"AgAAAKcyAAAAAAAApzIAAAAAAAABAAAAcqYyAAAAAAAApjIAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqDIAAAAAAACoMgAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "row"
					},
					"AwAAAKYyAAAAAAAApzIAAAAAAAAAAAAApzIAAAAAAACoMgAAAAAAAAAAAACoMgAAAAAAAKkyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjIAAAAAAACmMgAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAAKkyAAAAAAAAqjIAAAAAAAAAAAAAqjIAAAAAAACrMgAAAAAAAAAAAACrMgAAAAAAAKwyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTIAAAAAAACpMgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAKQQAALy9pbXBvcnQgJy4vc3R5bGVzaGVldHMvbWFpbi5jc3MnOwoKY29uc3QgUSA9IHMgPT4gKHR5cGVvZiBzID09ICdzdHJpbmcnID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzKSA6IHMpOwpjb25zdCBRQSA9ICguLi5hKSA9PiBbLi4uKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYS5qb2luKCcsICcpKSA/PyBbXSldOwpjb25zdCBHUyA9IHMgPT4gR2V0UHJvcHMod2luZG93LmdldENvbXB1dGVkU3R5bGUoUShzKSkpOwpjb25zdCBHQSA9IHMgPT4gR2V0QXR0cmlidXRlcyhRKHMpKTsKY29uc3QgR1IgPSBzID0+IFJlY3QoUShzKT8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpOwoKY29uc3QgTlVNX0ZJRUxEUyA9IDM7Cgpjb25zdCAkMlBJID0gTWF0aC5QSSAqIDI7CmNvbnN0ICRQSTIgPSBNYXRoLlBJICoqIDI7Cgpjb25zdCBUaG9tcHNvbiA9IHsKICBjYWxjdWxhdGU6IChMLCBDKSA9PiAxIC8gKE1hdGguc3FydChMICogQykgKiAkMlBJICogMiksCiAgaW52ZXJzZTogKGYsIExDKSA9PiAxIC8gKDQgKiAkUEkyICogTEMgKiBmICoqIDIpCn07Cgpjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoOCAqIE5VTV9GSUVMRFMgKiAyKTsKY29uc3QgdmFsdWVzID0gbmV3IEZsb2F0NjRBcnJheShidWZmZXIsIDAsIE5VTV9GSUVMRFMpOwpjb25zdCB2YWx1ZXMyID0gbmV3IEZsb2F0NjRBcnJheShidWZmZXIsIDI0LCBOVU1fRklFTERTKTsKY29uc3QgdmFsaWRWYWx1ZXMgPSBBcnJheS5mcm9tKG5ldyBBcnJheShOVU1fRklFTERTICogMiksICgpID0+IGZhbHNlKTsKY29uc3QgYWxsVmFsdWVzID0gbmV3IEZsb2F0NjRBcnJheShidWZmZXIpOwpjb25zdCBmaWVsZE5hbWVzID0gWydMJywgJ0MnLCAnZiddOwpjb25zdCB1bml0TmFtZXMgPSBbJ0gnLCAnRicsICdIeiddOwpjb25zdCBjb25maWcgPSB7fTsKY29uc3QgbWluU2l6ZSA9IDEwOwoKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHsKICB0cnkgewogICAgSW5pdCgpOwogIH0gY2F0Y2goZSkgewogICAgY29uc29sZS5sb2coJ0VSUk9SJywgZS5tZXNzYWdlKTsKICAgIHRocm93IGU7CiAgfQp9KTsKCnNldFRpbWVvdXQoSW5pdCwgMTAwKTsKCmNvbnN0IHJvc2FLbSA9IGUgPT4gTWF0aC5sb2coMiAqIE1hdGguUEkpIC0gMS41IC0gTWF0aC5sb2coZSkgLyAoNiAqIGUpIC0gMC4zMzA4NDIzNiAvIGUgLSAxIC8gKDEyMCAqIGUgKiogMykgKyAxIC8gKDUwNCAqIGUgKiogNSkgLSAwLjAwMTE5MjMgLyBlICoqIDcgKyA1MDY4ZS03IC8gZSAqKiA5Owpjb25zdCByb3NhS3MgPSBlID0+IDEuMjUgLSBNYXRoLmxvZygyICogZSk7CgpmdW5jdGlvbiBTZXJpZXNDYXBzKHZhbHVlcykgewogIHJldHVybiAxIC8gdmFsdWVzLm1hcCh2ID0+IDEgLyBQYXJzZU51bWJlcih2KSkucmVkdWNlKChyLCB2KSA9PiByICsgdiwgMCk7Cn0KCi8qKgogKiBDYWxjdWxhdGVzIG51bWJlciBvZiB0dXJucyBmb3IgYSBzaW5nbGUtbGF5ZXIgY29pbAogKgogKiBAcGFyYW0ge051bWJlcn0gTCAgICAgICAgICBJbmR1Y3RhbmNlICjCtUgpCiAqIEBwYXJhbSB7TnVtYmVyfSBmb3JtICAgICAgIGZvcm0gZGlhbWV0ZXIgKG1tKQogKiBAcGFyYW0ge051bWJlcn0gaW5uZXIgICAgICBpbm5lciB3aXJlIGRpYW0gKG1tKQogKiBAcGFyYW0ge051bWJlcn0gb3V0ZXIgICAgICBvdXRlciB3aXJlIGRpYW0gKG1tKQogKgogKiBAcmV0dXJucyB7TnVtYmVyfSAgbnVtYmVyIG9mIHR1cm5zCiAqLwpmdW5jdGlvbiBDb2lsVHVybnMoTCwgZm9ybSwgaW5uZXIsIG91dGVyKSB7CiAgbGV0IG4gPSAwLAogICAgaSA9IDAsCiAgICBEayA9IGZvcm0gKyBvdXRlcjsKCiAgTCAvPSAyZS00ICogTWF0aC5QSSAqIERrOwoKICBmb3IobGV0IEtzID0gcm9zYUtzKG91dGVyIC8gaW5uZXIpOyBpIDw9IEw7ICkgewogICAgbiArPSAxZS00OwoKICAgIGNvbnN0IGsgPSAobiAqIG91dGVyKSAvIERrOwoKICAgIGkgPSBuICogKE1hdGgubG9nKDEgKyBNYXRoLlBJIC8gKDIgKiBrKSkgKyAxIC8gKDIuMzAwNCArIDMuNDM3ICogayArIDEuNzYzICogayAqIGsgLSAwLjQ3IC8gKDAuNzU1ICsgMSAvIGspICoqIDEuNDQpKTsKICAgIGkgLT0gS3MgKyByb3NhS20obik7CiAgICBpICo9IG47CiAgfQoKICByZXR1cm4gbjsKfQoKLyoqCiAqIENhbGN1bGF0ZXMgaW5kdWN0YW5jZQogKgogKiBAcGFyYW0ge051bWJlcn0gbiAgICAgTnVtYmVyIG9mIHR1cm5zCiAqIEBwYXJhbSB7TnVtYmVyfSBmb3JtICBmb3JtIGRpYW1ldGVyIChtbSkKICogQHBhcmFtIHtOdW1iZXJ9IGxlbiAgIGNvaWwgbGVuZ3RoIChtbSkKICoKICogQHJldHVybnMge051bWJlcn0gaW5kdWN0YW5jZSAgKMK1SCkKICovCmZ1bmN0aW9uIENvaWxJbmR1Y3RhbmNlKG4sIGZvcm0sIGxlbikgewogIGNvbnN0IEtzID0gcm9zYUtzKDEuMDcpLAogICAgRGsgPSBmb3JtICsgbGVuIC8gbiwKICAgIGsgPSBsZW4gLyBEazsKCiAgcmV0dXJuIG4gKiAyZS00ICogTWF0aC5QSSAqIERrICogKG4gKiAoTWF0aC5sb2coMSArIE1hdGguUEkgLyAoMiAqIGspKSArIDEgLyAoMi4zMDA0ICsgMy40MzcgKiBrICsgMS43NjMgKiBrICogayAtIDAuNDcgLyAoMC43NTUgKyAxIC8gaykgKiogMS40NCkpIC0gKEtzICsgcm9zYUttKG4pKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBPbklucHV0KHsgdGFyZ2V0IH0pIHsKICBjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSB0YXJnZXQ7CiAgY29uc3QgaWR4ID0gRmllbGRJbmRleChuYW1lKTsKCiAgaWYoaWR4ICE9PSB1bmRlZmluZWQpIHsKICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgogICAgY29uc3QgcmFuZ2UgPSBQYXJzZVJhbmdlKHZhbHVlKTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMjsgaSsrKSB7CiAgICAgIGFsbFZhbHVlc1tpZHggKyBpICogTlVNX0ZJRUxEU10gPSByYW5nZVtpXTsKICAgICAgdmFsaWRWYWx1ZXNbaWR4ICsgaSAqIE5VTV9GSUVMRFNdID0gaSA8IHJhbmdlLmxlbmd0aDsKICAgIH0KCiAgICBDYWxjVGhvbXBzb24oKTsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRQcm9wcyhjc3NTdHlsZSkgewogIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoWy4uLmNzc1N0eWxlXS5tYXAobmFtZSA9PiBbbmFtZSwgY3NzU3R5bGVbbmFtZV1dKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRBdHRyaWJ1dGVzKGUpIHsKICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKGUuZ2V0QXR0cmlidXRlTmFtZXMoKS5tYXAobmFtZSA9PiBbbmFtZSwgZS5nZXRBdHRyaWJ1dGUobmFtZSldKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBJc1JhbmdlKGZpZWxkSWQpIHsKICByZXR1cm4gR2V0UmFuZ2UoZmllbGRJZCkubGVuZ3RoID4gMTsKICByZXR1cm4gISF2YWxpZFZhbHVlc1tOVU1fRklFTERTICsgZmllbGRJZF07Cn0KCmV4cG9ydCBmdW5jdGlvbiBGaWVsZEluZGV4KGFyZykgewogIGlmKElzU3RyaW5nKGFyZykpIHsKICAgIGFyZyA9IGZpZWxkTmFtZXMuaW5kZXhPZihhcmcpOwogICAgaWYoYXJnID09IC0xKQogICAgICBhcmcgPSB7CiAgICAgICAgTDogMCwKICAgICAgICBDOiAxLAogICAgICAgIGY6IDIKICAgICAgfVthcmddOwogIH0KICByZXR1cm4gYXJnOwp9CgpleHBvcnQgZnVuY3Rpb24gU2F2ZUNvbmZpZygpIHsKICBmb3IobGV0IGkgPSAwOyBpIDwgTlVNX0ZJRUxEUzsgaSsrKSBpZih2YWxpZFZhbHVlc1tpXSkgY29uZmlnWydMQ2YnW2ldXSA9IEdldEZpZWxkKGkpOwoKICBjb25maWcuc2VsZWN0ZWQgPSBHZXRTZWxlY3RlZCgpOwoKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY29uZmlnJywgSlNPTi5zdHJpbmdpZnkoY29uZmlnKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBMb2FkQ29uZmlnKCkgewogIGxldCByID0ge307CgogIHRyeSB7CiAgICByID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY29uZmlnJykgPz8gJ3t9Jyk7CiAgfSBjYXRjaChlKSB7fQoKICByZXR1cm4gcjsKfQoKZnVuY3Rpb24gRmllbGRFbGVtZW50cyhuKSB7CiAgcmV0dXJuIFsuLi5QYXJ0aXRpb25BcnJheShbLi4uUSgnI2ZpZWxkcycpLmNoaWxkcmVuXSwgTlVNX0ZJRUxEUyldW0ZpZWxkSW5kZXgobildOwp9CgpleHBvcnQgZnVuY3Rpb24gR2V0RmllbGQobikgewogIGNvbnN0IGUgPSAoRmllbGRFbGVtZW50cyhuKSA/PyBbXSkuZmluZChlID0+IGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09ICdpbnB1dCcpOwogIHJldHVybiBlPy52YWx1ZTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFNldEZpZWxkKG4sIHYpIHsKICBjb25zdCBlID0gKEZpZWxkRWxlbWVudHMobikgPz8gW10pLmZpbmQoZSA9PiBlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAnaW5wdXQnKTsKICBlLnZhbHVlID0gdjsKfQoKZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdEZpZWxkKGkpIHsKICBpZighKGkgPj0gMCAmJiBpIDw9IDIpKSB0aHJvdyBuZXcgRXJyb3IoYFNlbGVjdEZpZWxkIGk9JHtpfWApOwoKICBmb3IobGV0IGogPSAwOyBqIDwgTlVNX0ZJRUxEUzsgaisrKSB7CiAgICBGaWVsZEVsZW1lbnRzKGopLmZvckVhY2goKGUsIHgpID0+IGUuY2xhc3NMaXN0W2kgPT0gaiA/ICdhZGQnIDogJ3JlbW92ZSddKCdzZWxlY3RlZCcpKTsKCiAgICBGaWVsZEVsZW1lbnRzKGopWzJdLmRpc2FibGVkID0gaSA9PSBqOwogIH0KCiAgUSgnaW1nJykuc3JjID0gYHN2Zy8ke1snaW5kdWN0YW5jZScsICdjYXBhY2l0YW5jZScsICdmcmVxJ11baV19LWVxdWF0aW9uLnN2Z2A7Cn0KCmV4cG9ydCBmdW5jdGlvbiBHdWVzc0ZpZWxkKCkgewogIGlmKHZhbGlkVmFsdWVzLmZpbHRlcih2ID0+IHYgPT09IHRydWUpLmxlbmd0aCA9PSAyKSByZXR1cm4gdmFsaWRWYWx1ZXMuaW5kZXhPZihmYWxzZSk7CgogIHJldHVybiAwOwp9CgpleHBvcnQgZnVuY3Rpb24gR2V0U2VsZWN0ZWQoKSB7CiAgcmV0dXJuIFFBKCdpbnB1dCcpCiAgICAubWFwKGUgPT4gZS5jbGFzc0xpc3QuY29udGFpbnMoJ3NlbGVjdGVkJykpCiAgICAuaW5kZXhPZih0cnVlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldFJhbmdlKG5hbWUpIHsKICBjb25zdCBpZHggPSBGaWVsZEluZGV4KG5hbWUpOwoKICBsZXQgYSA9IFssXTsKCiAgdHJ5IHsKICAgIHRocm93IG5ldyBFcnJvcigpOwogICAgZm9yKGxldCBpID0gMDsgaSA8IDI7IGkrKykgewogICAgICBpZihJc051bWJlcihhbGxWYWx1ZXNbaWR4ICsgaSAqIE5VTV9GSUVMRFNdKSAmJiBOdW1iZXIuaXNGaW5pdGUoYWxsVmFsdWVzW2lkeCArIGkgKiBOVU1fRklFTERTXSkgJiYgIWlzTmFOKGFsbFZhbHVlc1tpZHggKyBpICogTlVNX0ZJRUxEU10pKSB7CiAgICAgICAgYVtpXSA9IGFsbFZhbHVlc1tpZHggKyBpICogTlVNX0ZJRUxEU107CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgICAgdGhyb3cgbmV3IEVycm9yKCk7CiAgICB9CiAgfSBjYXRjaChlKSB7CiAgICBhID0gUGFyc2VSYW5nZShHZXRGaWVsZChpZHgpID8/ICcnKTsKICAgIGZvcihsZXQgaSA9IDA7IGkgPCAyOyBpKyspIHsKICAgICAgYWxsVmFsdWVzW2lkeCArIGkgKiBOVU1fRklFTERTXSA9IGFbaV07CiAgICAgIHZhbGlkVmFsdWVzW2lkeCArIGkgKiBOVU1fRklFTERTXSA9IGkgPCBhLmxlbmd0aDsKICAgIH0KICB9CgogIHJldHVybiBhOwp9CgpleHBvcnQgZnVuY3Rpb24gU2V0UmFuZ2UobmFtZSwgdmFsdWUpIHsKICBjb25zdCBpZHggPSBGaWVsZEluZGV4KG5hbWUpOwoKICBpZih2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7CiAgICB2YWx1ZXNbaWR4XSA9IHVuZGVmaW5lZDsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgaWYoSXNOdW1iZXIodmFsdWUpKSB7CiAgICBpZighTnVtYmVyLmlzRmluaXRlKHZhbHVlKSkgdGhyb3cgbmV3IEVycm9yKGBTZXRSYW5nZSBuYW1lPSR7bmFtZX0gdmFsdWU9JHt2YWx1ZX1gKTsKCiAgICBpZihpc05hTih2YWx1ZSkpIHRocm93IG5ldyBFcnJvcihgU2V0UmFuZ2UgbmFtZT0ke25hbWV9IHZhbHVlPSR7dmFsdWV9YCk7CiAgfQoKICBjb25zdCByYW5nZSA9IFBhcnNlUmFuZ2UodmFsdWUpOwoKICAvL2NvbnNvbGUubG9nKCdTZXRSYW5nZScsIHsgbmFtZSwgdmFsdWUsIHJhbmdlIH0pOwoKICBmb3IobGV0IGkgPSAwOyBpIDwgMjsgaSsrKSB7CiAgICBhbGxWYWx1ZXNbaWR4ICsgaSAqIE5VTV9GSUVMRFNdID0gcmFuZ2VbaV07CiAgICB2YWxpZFZhbHVlc1tpZHggKyBpICogTlVNX0ZJRUxEU10gPSBpIDwgcmFuZ2UubGVuZ3RoOwogIH0KCiAgcmV0dXJuIHJhbmdlOwp9CgpleHBvcnQgZnVuY3Rpb24gQ2FsY1Rob21wc29uKCkgewogIGNvbnN0IHNlbCA9IEdldFNlbGVjdGVkKCk7CgogIGlmKElzTnVtYmVyKHNlbCkgJiYgIWlzTmFOKHNlbCkpIHsKICAgIGNvbnN0IGZuID0gW0NhbGNJbmR1Y3RhbmNlLCBDYWxjQ2FwYWNpdGFuY2UsIENhbGNGcmVxdWVuY3ldW3NlbF07CgogICAgaWYodHlwZW9mIGZuICE9ICdmdW5jdGlvbicpIHRocm93IG5ldyBFcnJvcihgQ2FsY1Rob21wc29uIHNlbD0ke3NlbH1gKTsKCiAgICBbQ2FsY0luZHVjdGFuY2UsIENhbGNDYXBhY2l0YW5jZSwgQ2FsY0ZyZXF1ZW5jeV1bc2VsXSgpOwoKICAgIGNvbnN0IHN6ID0gR2V0U2l6ZSgpLAogICAgICBtYXggPSBHZXRNYXhTaXplKCk7CgogICAgaWYobWF4ID4gc3ogfHwgc3ogPiBtaW5TaXplKSBDaGFuZ2VTaXplKE1hdGgubWF4KG1pblNpemUsIG1heCkpOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIEZvcm1hdFJhbmdlKGFyZywgdW5pdCkgewogIGNvbnN0IHJlc3VsdHMgPSBbLi4uYXJnXS5zb3J0KChhLCBiKSA9PiBhIC0gYik7CgogIHJldHVybiAocmVzdWx0cy5sZW5ndGggPiAxID8gW01hdGgubWluKC4uLnJlc3VsdHMpLCBNYXRoLm1heCguLi5yZXN1bHRzKV0gOiByZXN1bHRzKQogICAgLm1hcCgobiwgaSkgPT4gRm9ybWF0TnVtYmVyKG4sIGkgPiAwID8gdW5pdCA6IHVuZGVmaW5lZCwgY29uZmlnLnByZWNpc2lvbiA8PSAwID8gJ2Zsb29yJyA6ICdyb3VuZCcsIFJvdW5kVG8oKSkpCiAgICAuam9pbignIC0gJyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBDYWxjRnJlcXVlbmN5KCkgewogIGNvbnN0IHJlc3VsdHMgPSBbXSwKICAgIEwgPSBHZXRSYW5nZSgnTCcpLAogICAgQyA9IEdldFJhbmdlKCdDJyk7CgogIGZvcihsZXQgaSA9IDA7IGkgPCBMLmxlbmd0aDsgaSsrKSBmb3IgKGxldCBqID0gMDsgaiA8IEMubGVuZ3RoOyBqKyspIHJlc3VsdHMucHVzaChUaG9tcHNvbi5jYWxjdWxhdGUoTFtpXSwgQ1tqXSkpOwoKICBjb25zdCBzdHIgPSBGb3JtYXRSYW5nZShyZXN1bHRzLCAnSHonKTsKCiAgU2V0RmllbGQoMiwgc3RyKTsKCiAgcmV0dXJuIHN0cjsKfQoKZXhwb3J0IGZ1bmN0aW9uIENhbGNJbmR1Y3RhbmNlKCkgewogIGNvbnN0IHJlc3VsdHMgPSBbXSwKICAgIGYgPSBHZXRSYW5nZSgnZicpLAogICAgQyA9IEdldFJhbmdlKCdDJyk7CgogIGZvcihsZXQgaSA9IDA7IGkgPCBmLmxlbmd0aDsgaSsrKSBmb3IgKGxldCBqID0gMDsgaiA8IEMubGVuZ3RoOyBqKyspIHJlc3VsdHMucHVzaChUaG9tcHNvbi5pbnZlcnNlKGZbaV0sIENbal0pKTsKCiAgY29uc3Qgc3RyID0gRm9ybWF0UmFuZ2UocmVzdWx0cywgJ0gnKTsKCiAgU2V0RmllbGQoMCwgc3RyKTsKCiAgcmV0dXJuIHN0cjsKfQoKZXhwb3J0IGZ1bmN0aW9uIENhbGNDYXBhY2l0YW5jZSgpIHsKICBjb25zdCByZXN1bHRzID0gW10sCiAgICBmID0gR2V0UmFuZ2UoJ2YnKSwKICAgIEwgPSBHZXRSYW5nZSgnTCcpOwoKICBmb3IobGV0IGkgPSAwOyBpIDwgZi5sZW5ndGg7IGkrKykgZm9yIChsZXQgaiA9IDA7IGogPCBMLmxlbmd0aDsgaisrKSByZXN1bHRzLnB1c2goVGhvbXBzb24uaW52ZXJzZShmW2ldLCBMW2pdKSk7CgogIGNvbnN0IHN0ciA9IEZvcm1hdFJhbmdlKHJlc3VsdHMsICdGJyk7CgogIFNldEZpZWxkKDEsIHN0cik7CgogIHJldHVybiBzdHI7Cn0KCmV4cG9ydCBmdW5jdGlvbiBDbGVhclZhbHVlcyhpZHgpIHsKICBmb3IobGV0IGkgPSAwOyBpIDwgTlVNX0ZJRUxEUzsgaSsrKSBpZihpZHggPT09IHVuZGVmaW5lZCB8fCAoSXNOdW1iZXIoaWR4KSAmJiBpID09IGlkeCkpIFNldFJhbmdlKGksIHVuZGVmaW5lZCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBQcm9jZXNzVmFsdWUodmFsdWUsIG5hbWUpIHsKICB0cnkgewogICAgY29uc3QgW251bSwgZXhwXSA9IFVuaXQodmFsdWUpOwogICAgcmV0dXJuIE1hdGgucG93KDEwLCBleHApICogbnVtOwogIH0gY2F0Y2goZSkgewogICAgY29uc29sZS5lcnJvcignUHJvY2Vzc1ZhbHVlJywgeyB2YWx1ZSwgbmFtZSB9KTsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBQYXJzZVJhbmdlKHZhbHVlKSB7CiAgY29uc3QgcGFydHMgPSB2YWx1ZQogICAgLnNwbGl0KC9ccyotXHMqL2cpCiAgICAubWFwKFVuaXQpCiAgICAuc2xpY2UoMCwgMik7CgogIGlmKHBhcnRzWzBdICYmIHBhcnRzWzFdKSBpZiAocGFydHNbMF1bMV0gPT09IG51bGwpIHBhcnRzWzBdWzFdID0gcGFydHNbMV1bMV07CgogIHJldHVybiBwYXJ0cy5tYXAoTnVtZXJpY1ZhbHVlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFBhcnNlTnVtYmVyKHZhbHVlKSB7CiAgcmV0dXJuIE51bWVyaWNWYWx1ZShVbml0KHZhbHVlKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBQYXJzZVZhbHVlKHZhbHVlLCBuYW1lKSB7CiAgY29uc3QgaWR4ID0gRmllbGRJbmRleChuYW1lKTsKCiAgaWYoIUlzU3RyaW5nKG5hbWUpKSBuYW1lID0gJ0xDZidbaWR4XTsKCiAgaWYodmFsdWUgIT0gJycpIHsKICAgIGNvbnN0IHJlc3VsdCA9IFByb2Nlc3NWYWx1ZSh2YWx1ZSwgbmFtZSk7CiAgICBjb25zdCB2YWxpZCA9ICh2YWxpZFZhbHVlc1tpZHhdID0gIWlzTmFOKHJlc3VsdCkpOwoKICAgIGlmKCF2YWxpZCB8fCBpZHggPT09IHVuZGVmaW5lZCkgdGhyb3cgbmV3IEVycm9yKGBQYXJzZVZhbHVlIGlkeD0ke2lkeH0gbmFtZT0ke25hbWV9IHZhbHVlPSR7dmFsdWV9IHJlc3VsdD0ke3Jlc3VsdH1gKTsKCiAgICB2YWx1ZXNbaWR4XSA9IHZhbGlkID8gcmVzdWx0IDogdW5kZWZpbmVkOwoKICAgIHJldHVybiB2YWxpZDsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBSZWFkRmllbGRzKG5hbWUpIHsKICBjb25zdCBpZHggPSBGaWVsZEluZGV4KG5hbWUpOwoKICBDbGVhclZhbHVlcyhpZHgpOwoKICBRQSgnaW5wdXQnKQogICAgLnNsaWNlKDAsIDIpCiAgICAuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSB9LCBpKSA9PiB7CiAgICAgIGlmKCFJc051bWJlcihpZHgpIHx8IGkgPT0gaWR4KQogICAgICAgIGlmKChJc1N0cmluZyh2YWx1ZSkgJiYgdmFsdWUgIT0gJycpIHx8IChJc051bWJlcih2YWx1ZSkgJiYgTnVtYmVyLmlzRmluaXRlKHZhbHVlKSkpIGlmICghUGFyc2VWYWx1ZSh2YWx1ZSwgbmFtZSkpIHRocm93IG5ldyBFcnJvcihgUmVhZEZpZWxkcygpOiBlcnJvciBwYXJzaW5nIGZpZWxkICcke25hbWV9J2ApOwogICAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBGb3JtYXROdW1iZXIoYXJnLCB1bml0LCBmbiA9ICdyb3VuZCcsIHJvdW5kID0gUm91bmRUbygpKSB7CiAgbGV0IFtudW0sIGV4cCA9IG51bGxdID0gQXJyYXkuaXNBcnJheShhcmcpID8gYXJnIDogW2FyZ107CgogIGlmKCFJc051bWJlcihleHApKSBleHAgPSBFeHBvbmVudChudW0pOwogIGV4cCA9IFRob3VzYW5kKGV4cCwgZm4pOwogIGNvbnN0IGV4cFN0ciA9IEV4cDJVbml0KGV4cCk7CiAgaWYoSXNOdW1iZXIodW5pdCkpIHVuaXQgPSB1bml0TmFtZXNbdW5pdF07CgogIGxldCBzID0gcm91bmQobnVtICogTWF0aC5wb3coMTAsIC1leHApKSArICcnOwoKICBpZih0eXBlb2YgdW5pdCAhPSAndW5kZWZpbmVkJykgewogICAgaWYoSXNTdHJpbmcoZXhwU3RyKSkgcyArPSAnICcgKyBleHBTdHI7CiAgICBzICs9IHVuaXQ7CiAgfQoKICByZXR1cm4gczsKfQoKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFNldFN0YXR1cyhzdHIsIHQxID0gMzAwMCwgdDIgPSAxMDAwKSB7CiAgY29uc3Qgc3QgPSBRKCcjc3RhdHVzJyk7CgogIFJlbW92ZUFsbENoaWxkcmVuKHN0KTsKCiAgbGV0IGUgPSBzdC5maXJzdEVsZW1lbnRDaGlsZCA/PyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCiAgZS5pbm5lclRleHQgPSBzdHI7CgogIHN0Lmluc2VydEJlZm9yZShlLCBzdC5maXJzdEVsZW1lbnRDaGlsZCk7CgogIE9iamVjdC5hc3NpZ24oZS5zdHlsZSwgeyB0cmFuc2l0aW9uOiAnb3BhY2l0eSAwcycgfSk7CiAgT2JqZWN0LmFzc2lnbihlLnN0eWxlLCB7CiAgICB0cmFuc2l0aW9uOiBgb3BhY2l0eSAke3QxIC8gMTAwMH1zYCwKICAgIG9wYWNpdHk6ICcxJwogIH0pOwoKICBhd2FpdCBXYWl0Rm9yKHQxKTsKCiAgT2JqZWN0LmFzc2lnbihlLnN0eWxlLCB7IHRyYW5zaXRpb246IGBhbGwgJHt0MiAvIDEwMDB9c2AsIG9wYWNpdHk6ICcwJyB9KTsKCiAgYXdhaXQgV2FpdEZvcih0Mik7Cn0KZXhwb3J0IGZ1bmN0aW9uIFNldHVwRmllbGRzKCkgewogIGlmKCFnbG9iYWxUaGlzLmRvY3VtZW50KSB7CiAgICBzZXRUaW1lb3V0KCgpID0+IFNldHVwRmllbGRzKCksIDEwMCk7CiAgICByZXR1cm47CiAgfQoKICBbLi4uUGFydGl0aW9uQXJyYXkoWy4uLlEoJyNmaWVsZHMnKS5jaGlsZHJlbl0sIE5VTV9GSUVMRFMpXS5mb3JFYWNoKChhLCBpKSA9PiB7CiAgICBhLnNsaWNlKDAsIDIpLmZvckVhY2goZSA9PiBlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiBTZWxlY3RGaWVsZChpKSkpOwogICAgYS5mb3JFYWNoKGUgPT4gZS5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIGFzeW5jIGUgPT4gKGF3YWl0IENvcHlUb0NsaXBib2FyZChHZXRGaWVsZChpKSksIGUucHJldmVudERlZmF1bHQoKSksIHRydWUpKTsKICB9KTsKCiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKAogICAgJ2RibGNsaWNrJywKICAgIGFzeW5jIGUgPT4gewogICAgICBjb25zdCB7IHRhcmdldCB9ID0gZTsKCiAgICAgIGlmKHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ2lucHV0JykgYXdhaXQgQ29weVRvQ2xpcGJvYXJkKHRhcmdldC52YWx1ZSk7CgogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAogICAgdHJ1ZQogICk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRTaXplKCkgewogIHJldHVybiArUSgnaW5wdXQnKS5zaXplOwp9CgpleHBvcnQgZnVuY3Rpb24gR2V0TWF4U2l6ZSgpIHsKICByZXR1cm4gTWF0aC5tYXgoCiAgICAuLi5RQSgnaW5wdXQnKQogICAgICAuc2xpY2UoMCwgMykKICAgICAgLm1hcChlID0+IGUudmFsdWUpCiAgICAgIC5tYXAodiA9PiB2Lmxlbmd0aCkKICApOwp9CgpleHBvcnQgZnVuY3Rpb24gQ2hhbmdlU2l6ZShzeiA9IEdldE1heFNpemUoKSkgewogIFFBKCdpbnB1dCcpCiAgICAuc2xpY2UoMCwgMykKICAgIC5mb3JFYWNoKChlLCBpKSA9PiBlLnNldEF0dHJpYnV0ZSgnc2l6ZScsIHN6KSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBDaGFuZ2VQcmVjaXNpb24ocCkgewogIFEoJyNwcmVjaXNpb24nKS52YWx1ZSA9IHAgKyAnJzsKICBRKCcjcHJlY2lzaW9uX251bScpLnZhbHVlID0gcCArICcnOwoKICBjb25maWcucHJlY2lzaW9uID0gcDsKCiAgdHJ5IHsKICAgIENhbGNUaG9tcHNvbigpOwogICAgUmVhZEZpZWxkcygpOwogIH0gY2F0Y2goZSkge30KfQoKZXhwb3J0IGZ1bmN0aW9uIEluaXQoKSB7CiAgaWYoZ2xvYmFsVGhpcy5pbml0aWFsaXplZCkgcmV0dXJuOwogIGdsb2JhbFRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlOwoKICBRQSgnaW5wdXQnKQogICAgLnNsaWNlKDAsIDMpCiAgICAuZm9yRWFjaCgoZSwgaSkgPT4gewogICAgICBlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIE9uSW5wdXQsIGZhbHNlKTsKICAgICAgZS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgT25JbnB1dCwgZmFsc2UpOwogICAgfSk7CgogIFNldHVwRmllbGRzKCk7CgogIE9iamVjdC5hc3NpZ24oY29uZmlnLCBMb2FkQ29uZmlnKCkpOwoKICBRKCcjcHJlY2lzaW9uX251bScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGV2ZW50ID0+IHsKICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldmVudDsKICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRhcmdldDsKICAgIGNvbnN0IHAgPSArdmFsdWU7CgogICAgaWYoIWlzTmFOKHApICYmIHAgPj0gMCAmJiBwIDw9IDkpIENoYW5nZVByZWNpc2lvbihwKTsKICB9KTsKCiAgUSgnI3ByZWNpc2lvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGV2ZW50ID0+IHsKICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldmVudDsKICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRhcmdldDsKCiAgICBDaGFuZ2VQcmVjaXNpb24oK3ZhbHVlKTsKICB9KTsKCiAgUUEoJyNwcmVjaXNpb24sICNwcmVjaXNpb25fbnVtJykuZm9yRWFjaChlID0+CiAgICBlLmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgKHsgdGFyZ2V0LCBkZWx0YVkgfSkgPT4gewogICAgICBsZXQgeCA9ICt0YXJnZXQudmFsdWUgLSBNYXRoLnNpZ24oZGVsdGFZKTsKCiAgICAgIGlmKCFpc05hTih4KSAmJiB4ID49IDApIENoYW5nZVByZWNpc2lvbigreCk7CiAgICB9KQogICk7CgogIGlmKCdwcmVjaXNpb24nIGluIGNvbmZpZykgewogICAgUSgnI3ByZWNpc2lvbicpLnZhbHVlID0gY29uZmlnLnByZWNpc2lvbjsKICAgIFEoJyNwcmVjaXNpb25fbnVtJykudmFsdWUgPSBjb25maWcucHJlY2lzaW9uOwogIH0KCiAgY29uc3QgeyBMLCBDLCBmIH0gPSBjb25maWc7CgogIFtMLCBDLCBmXS5mb3JFYWNoKCh2LCBpKSA9PiBTZXRGaWVsZChpLCBJc1N0cmluZyh2KSAmJiB2ICE9ICcnID8gdiA6ICcnKSk7CgogIGlmKCdzZWxlY3RlZCcgaW4gY29uZmlnKSB7CiAgICBpZihjb25maWcuc2VsZWN0ZWQgPj0gMCAmJiBjb25maWcuc2VsZWN0ZWQgPD0gMikgU2VsZWN0RmllbGQoY29uZmlnLnNlbGVjdGVkKTsKICAgIGVsc2UgZGVsZXRlIGNvbmZpZy5zZWxlY3RlZDsKICB9CgogIGlmKEdldFNlbGVjdGVkKCkgPT09IHVuZGVmaW5lZCkgewogICAgbGV0IGYgPSBHdWVzc0ZpZWxkKCk7CiAgICBpZighSXNOdW1iZXIoZikgfHwgIShmID49IDAgJiYgZiA8PSAyKSkgZiA9IDI7CiAgICBTZWxlY3RGaWVsZChmKTsKICB9CgogIHRyeSB7CiAgICBDYWxjVGhvbXBzb24oKTsKICB9IGNhdGNoKGUpIHsKICAgIGNvbnNvbGUubG9nKCdFUlJPUicsIGUubWVzc2FnZSk7dGhyb3cgZTsKICB9CgogIHNldEludGVydmFsKCgpID0+IFNhdmVDb25maWcoKSwgNTAwKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIE51bWVyaWNWYWx1ZShbbnVtLCBleHBdKSB7CiAgcmV0dXJuIE1hdGgucG93KDEwLCBleHApICogbnVtOwp9CgpleHBvcnQgZnVuY3Rpb24gV2FpdEZvcihtcykgewogIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJlbW92ZUFsbENoaWxkcmVuKGUpIHsKICB3aGlsZShlLmZpcnN0RWxlbWVudENoaWxkKSBlLnJlbW92ZUNoaWxkKGUuZmlyc3RFbGVtZW50Q2hpbGQpOwp9CgpleHBvcnQgZnVuY3Rpb24qIFBhcnRpdGlvbkFycmF5KGEsIHNpemUpIHsKICBmb3IobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkgKz0gc2l6ZSkgeWllbGQgYS5zbGljZShpLCBpICsgc2l6ZSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBFeHBvbmVudChudW0pIHsKICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLmxvZzEwKG51bSkpOwp9CgpleHBvcnQgZnVuY3Rpb24gVGhvdXNhbmQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykgewogIHJldHVybiBNYXRoLm1pbigyMSwgTWF0aC5tYXgoLTI0LCBNYXRoW2ZuXShleHBvbmVudCAvIDMpICogMykpOwp9CgpleHBvcnQgZnVuY3Rpb24gRXhwMlVuaXQoZXhwb25lbnQsIGZuID0gJ2Zsb29yJykgewogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBzd2l0Y2ggKFRob3VzYW5kKGV4cG9uZW50LCBmbikpIHsKICAgIGNhc2UgLTI0OiByZXR1cm4gJ3knOwogICAgY2FzZSAtMjE6IHJldHVybiAneic7CiAgICBjYXNlIC0xODogcmV0dXJuICdhJzsKICAgIGNhc2UgLTE1OiByZXR1cm4gJ2YnOwogICAgY2FzZSAtMTI6IHJldHVybiAncCc7CiAgICBjYXNlIC05OiByZXR1cm4gJ24nOwogICAgY2FzZSAtNjogcmV0dXJuICfCtSc7CiAgICBjYXNlIC0zOiByZXR1cm4gJ20nOwogICAgY2FzZSAtMjogcmV0dXJuICdjJzsKICAgIGNhc2UgLTE6IHJldHVybiAnZCc7CiAgICBjYXNlIDA6IHJldHVybiAnJzsKICAgIGNhc2UgMjogcmV0dXJuICdoJzsKICAgIGNhc2UgMzogcmV0dXJuICdrJzsKICAgIGNhc2UgNjogcmV0dXJuICdNJzsKICAgIGNhc2UgOTogcmV0dXJuICdHJzsKICAgIGNhc2UgMTI6IHJldHVybiAnVCc7CiAgICBjYXNlIDE1OiByZXR1cm4gJ1AnOwogICAgY2FzZSAxODogcmV0dXJuICdFJzsKICAgIGNhc2UgMjE6IHJldHVybiAnWic7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gVW5pdChzdHIpIHsKICBpZighSXNTdHJpbmcoc3RyKSkgc3RyID0gc3RyICsgJyc7CgogIGNvbnN0IFtudW0sIHVuaXQgPSAnJ10gPSBbLi4uc3RyLnJlcGxhY2VBbGwoL1xzKy9nLCAnJykubWF0Y2hBbGwoLyhbLUVlLlxkXSt8W14tRWUuXGRdKykvZyldLm1hcCgoW2FdKSA9PiBhKTsKICBsZXQgZXhwID0gbnVsbDsKCiAgLyogcHJldHRpZXItaWdub3JlICovIHN3aXRjaCAodW5pdFswXSkgewogICAgY2FzZSAneSc6IGV4cCA9IC0yNDsgYnJlYWs7CiAgICBjYXNlICd6JzogZXhwID0gLTIxOyBicmVhazsKICAgIGNhc2UgJ2EnOiBleHAgPSAtMTg7IGJyZWFrOwogICAgY2FzZSAnZic6IGV4cCA9IC0xNTsgYnJlYWs7CiAgICBjYXNlICdwJzogZXhwID0gLTEyOyBicmVhazsKICAgIGNhc2UgJ24nOiBleHAgPSAtOTsgYnJlYWs7CiAgICBjYXNlICdcdTAwQjUnOiBjYXNlICdcdTAzQkMnOiBjYXNlICd1JzogZXhwID0gLTY7IGJyZWFrOwogICAgY2FzZSAnbSc6IGV4cCA9IC0zOyBicmVhazsKICAgIGNhc2UgJ2MnOiBleHAgPSAtMjsgYnJlYWs7CiAgICBjYXNlICdkJzogZXhwID0gLTE7IGJyZWFrOwogICAgY2FzZSAnaCc6IGV4cCA9IDI7IGJyZWFrOwogICAgY2FzZSAnayc6IGV4cCA9IDM7IGJyZWFrOwogICAgY2FzZSAnTSc6IGV4cCA9IDY7IGJyZWFrOwogICAgY2FzZSAnRyc6IGV4cCA9IDk7IGJyZWFrOwogICAgY2FzZSAnVCc6IGV4cCA9IDEyOyBicmVhazsKICAgIGNhc2UgJ1AnOiBleHAgPSAxNTsgYnJlYWs7CiAgICBjYXNlICdFJzogZXhwID0gMTg7IGJyZWFrOwogICAgY2FzZSAnWic6IGV4cCA9IDIxOyBicmVhazsKICB9CgogIHJldHVybiBbK251bSwgZXhwXTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJvdW5kVG8ocHJlYyA9IGNvbmZpZy5wcmVjaXNpb24pIHsKICByZXR1cm4gbiA9PiBuLnRvRml4ZWQocHJlYykucmVwbGFjZSgvXC4oLipbXjBdKTAqJC9nLCAnLiQxJyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBJc051bWJlcihhcmcpIHsKICByZXR1cm4gdHlwZW9mIGFyZyA9PSAnbnVtYmVyJzsKfQoKZXhwb3J0IGZ1bmN0aW9uIElzU3RyaW5nKGFyZykgewogIHJldHVybiB0eXBlb2YgYXJnID09ICdzdHJpbmcnOwp9CgpleHBvcnQgYXN5bmMgZnVuY3Rpb24gQ29weVRvQ2xpcGJvYXJkKHN0cikgewogIGxldCByZXN1bHQgPSBhd2FpdCBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChzdHIpOwoKICBTZXRTdGF0dXMoYENvcGllZDogJyR7c3RyfSdgKTsKfQoKZnVuY3Rpb24gUmVjdCh7IHgsIHksIHdpZHRoLCBoZWlnaHQgfSkgewogIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YoeyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH0sIFJlY3QucHJvdG90eXBlKTsKfQoKUmVjdC5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKiAoKSB7CiAgY29uc3QgeyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH0gPSB0aGlzOwogIHlpZWxkKiBbeCwgeSwgd2lkdGgsIGhlaWdodF07Cn07CgpPYmplY3QuZGVmaW5lUHJvcGVydGllcyhSZWN0LnByb3RvdHlwZSwgewogIHgyOiB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnggKyB0aGlzLndpZHRoOwogICAgfQogIH0sCiAgeTI6IHsKICAgIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMueSArIHRoaXMuaGVpZ2h0OwogICAgfQogIH0KfSk7CgovKiBwcmV0dGllci1pZ25vcmUgKi8gT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IENhbGNDYXBhY2l0YW5jZSwgQ2FsY0ZyZXF1ZW5jeSwgQ2FsY0luZHVjdGFuY2UsIENhbGNUaG9tcHNvbiwgQ2hhbmdlUHJlY2lzaW9uLCBDaGFuZ2VTaXplLCBDbGVhclZhbHVlcywgQ29pbEluZHVjdGFuY2UsIENvaWxUdXJucywgQ29weVRvQ2xpcGJvYXJkLCBFeHAyVW5pdCwgRXhwb25lbnQsIEZpZWxkRWxlbWVudHMsIEZpZWxkSW5kZXgsIEZvcm1hdE51bWJlciwgRm9ybWF0UmFuZ2UsIEdldEF0dHJpYnV0ZXMsIEdldEZpZWxkLCBHZXRNYXhTaXplLCBHZXRQcm9wcywgR2V0UmFuZ2UsIEdldFNlbGVjdGVkLCBHZXRTaXplLCBHdWVzc0ZpZWxkLCBJbml0LCBJc051bWJlciwgSXNSYW5nZSwgSXNTdHJpbmcsIExvYWRDb25maWcsIE51bWVyaWNWYWx1ZSwgT25JbnB1dCwgUGFyc2VOdW1iZXIsIFBhcnNlUmFuZ2UsIFBhcnNlVmFsdWUsIFByb2Nlc3NWYWx1ZSwgUmVhZEZpZWxkcywgUmVjdCwgUmVtb3ZlQWxsQ2hpbGRyZW4sIFJvdW5kVG8sIFNhdmVDb25maWcsIFNlbGVjdEZpZWxkLCBTZXJpZXNDYXBzLCBTZXRGaWVsZCwgU2V0UmFuZ2UsIFNldFN0YXR1cywgU2V0dXBGaWVsZHMsIFRob3VzYW5kLCBVbml0LCBXYWl0Rm9yIH0pOwovKiBwcmV0dGllci1pZ25vcmUgKi8gT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IGJ1ZmZlciwgdmFsdWVzLCB2YWx1ZXMyLCB2YWxpZFZhbHVlcywgYWxsVmFsdWVzLCBjb25maWcsIFEsIFFBLCBHUywgR0EsIEdSLCBUaG9tcHNvbiB9KTsKAAAAAAAAAAAMQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArDIAAAAAAACsMgAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAALy8",
					"AQAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					2,
					"left_delete",
					null,
					"AgAAAAEAAAAAAAAAAQAAAAAAAAABAAAALwAAAAAAAAAAAAAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKkyAAAAAAAAqjIAAAAAAAAAAAAAqjIAAAAAAACrMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTIAAAAAAACpMgAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAALy8",
					"AQAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": "console."
					},
					"CAAAANYbAAAAAAAA1xsAAAAAAAAAAAAA1xsAAAAAAADYGwAAAAAAAAAAAADYGwAAAAAAANkbAAAAAAAAAAAAANkbAAAAAAAA2hsAAAAAAAAAAAAA2hsAAAAAAADbGwAAAAAAAAAAAADbGwAAAAAAANwbAAAAAAAAAAAAANwbAAAAAAAA3RsAAAAAAAAAAAAA3RsAAAAAAADeGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hsAAAAAAADWGwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": ".o"
					},
					"AgAAAN4bAAAAAAAA3xsAAAAAAAAAAAAA3xsAAAAAAADgGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hsAAAAAAADeGwAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					2,
					"left_delete",
					null,
					"AgAAAN8bAAAAAAAA3xsAAAAAAAABAAAAb94bAAAAAAAA3hsAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA4BsAAAAAAADgGwAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "log"
					},
					"AwAAAN4bAAAAAAAA3xsAAAAAAAAAAAAA3xsAAAAAAADgGwAAAAAAAAAAAADgGwAAAAAAAOEbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hsAAAAAAADeGwAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEbAAAAAAAA4xsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RsAAAAAAADhGwAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOIbAAAAAAAA5BsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hsAAAAAAADiGwAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "CalcFre"
					},
					"BwAAAOMbAAAAAAAA5BsAAAAAAAAAAAAA5BsAAAAAAADlGwAAAAAAAAAAAADlGwAAAAAAAOYbAAAAAAAAAAAAAOYbAAAAAAAA5xsAAAAAAAAAAAAA5xsAAAAAAADoGwAAAAAAAAAAAADoGwAAAAAAAOkbAAAAAAAAAAAAAOkbAAAAAAAA6hsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xsAAAAAAADjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"insert_completion",
					{
						"completion": "CalcFrequency",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CalcFrequency"
					},
					"AgAAAOMbAAAAAAAA4xsAAAAAAAAHAAAAQ2FsY0ZyZeMbAAAAAAAA8BsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hsAAAAAAADqGwAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPEbAAAAAAAA8hsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RsAAAAAAADxGwAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIbAAAAAAAA8xsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hsAAAAAAADyGwAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPMbAAAAAAAA9RsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xsAAAAAAADzGwAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "results,str"
					},
					"CwAAAPQbAAAAAAAA9RsAAAAAAAAAAAAA9RsAAAAAAAD2GwAAAAAAAAAAAAD2GwAAAAAAAPcbAAAAAAAAAAAAAPcbAAAAAAAA+BsAAAAAAAAAAAAA+BsAAAAAAAD5GwAAAAAAAAAAAAD5GwAAAAAAAPobAAAAAAAAAAAAAPobAAAAAAAA+xsAAAAAAAAAAAAA+xsAAAAAAAD8GwAAAAAAAAAAAAD8GwAAAAAAAP0bAAAAAAAAAAAAAP0bAAAAAAAA/hsAAAAAAAAAAAAA/hsAAAAAAAD/GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BsAAAAAAAD0GwAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAEcAAAAAAAAAhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"cut",
					null,
					"AQAAANYbAAAAAAAA1hsAAAAAAAAtAAAAY29uc29sZS5sb2coJ0NhbGNGcmVxdWVuY3knLCB7cmVzdWx0cyxzdHJ9KTsK",
					"AQAAAAAAAAABAAAA1hsAAAAAAAADHAAAAAAAAAAAAAAAAAAA"
				],
				[
					418,
					1,
					"paste",
					null,
					"AQAAAAAcAAAAAAAALRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAAA"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANYbAAAAAAAA1xsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hsAAAAAAADWGwAAAAAAAAAAAAAAAAAA"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAEcAAAAAAAAAhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAAA"
				],
				[
					541,
					1,
					"paste",
					null,
					"AQAAAJQaAAAAAAAAmxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBoAAAAAAACUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": ".length"
					},
					"BwAAAJsaAAAAAAAAnBoAAAAAAAAAAAAAnBoAAAAAAACdGgAAAAAAAAAAAACdGgAAAAAAAJ4aAAAAAAAAAAAAAJ4aAAAAAAAAnxoAAAAAAAAAAAAAnxoAAAAAAACgGgAAAAAAAAAAAACgGgAAAAAAAKEaAAAAAAAAAAAAAKEaAAAAAAAAohoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxoAAAAAAACbGgAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": " <=1"
					},
					"BAAAAKIaAAAAAAAAoxoAAAAAAAAAAAAAoxoAAAAAAACkGgAAAAAAAAAAAACkGgAAAAAAAKUaAAAAAAAAAAAAAKUaAAAAAAAAphoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohoAAAAAAACiGgAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAKYaAAAAAAAApxoAAAAAAAAAAAAApxoAAAAAAACoGgAAAAAAAAAAAACoGgAAAAAAAKkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphoAAAAAAACmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkaAAAAAAAAqhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRoAAAAAAACpGgAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAK8aAAAAAAAAsBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxoAAAAAAACvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAJQaAAAAAAAAlRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBoAAAAAAACUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAlRoAAAAAAACVGgAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					2,
					"left_delete",
					null,
					"AgAAABkcAAAAAAAAGRwAAAAAAAAyAAAAICBjb25zb2xlLmxvZygnQ2FsY0ZyZXF1ZW5jeScsIHsgcmVzdWx0cywgc3RyIH0pOwoYHAAAAAAAABgcAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAGRwAAAAAAABLHAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/app.html",
			"settings":
			{
				"buffer_size": 1493,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " mn"
					},
					"AwAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAALAEAAAAAAAAsAQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAsQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "odule"
					},
					"BQAAALAEAAAAAAAAsQQAAAAAAAAAAAAAsQQAAAAAAACyBAAAAAAAAAAAAACyBAAAAAAAALMEAAAAAAAAAAAAALMEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"cut",
					null,
					"AQAAAJYEAAAAAAAAlgQAAAAAAAAqAAAAICAgIDxzY3JpcHQgc3JjPSJhcHAuanMiIG1vZHVsZT48L3NjcmlwdD4K",
					"AQAAAAAAAAABAAAAlgQAAAAAAADABAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"paste",
					null,
					"AQAAAGgAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAIgAAAAAAAAAiAAAAAAAAAAIAAAAPC9zY3JpcHSHAAAAAAAAAIcAAAAAAAAAAQAAAD4",
					"AQAAAAAAAAABAAAAiAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAIgAAAAAAAAAiAAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					2,
					"left_delete",
					null,
					"AgAAAIEAAAAAAAAAgQAAAAAAAAAGAAAAbW9kdWxlgAAAAAAAAACAAAAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAAgQAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAAdAAAAICAgICA8c2NyaXB0IHNyYz0iYXBwLmpzIiAvPgo",
					"AQAAAAAAAAABAAAAZwAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"paste",
					null,
					"AQAAAJYEAAAAAAAAswQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgQAAAAAAACWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"",
					null,
					"AQAAAGgAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"paste",
					null,
					"AgAAAIkAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACdAAAAAAAAAAsAAABleGFtcGxlLmNzcw",
					"AQAAAAAAAAABAAAAiQAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAOcEAAAAAAAA5wQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"right_delete",
					null,
					"AQAAAOcEAAAAAAAA5wQAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAOgEAAAAAAAA6QQAAAAAAAAAAAAA6QQAAAAAAADqBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"close_tag",
					{
						"insert_slash": true
					},
					"AQAAAOoEAAAAAAAA8gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gQAAAAAAADyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAPIEAAAAAAAA8gQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA8wQAAAAAAADzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " modue"
					},
					"BgAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAADpBAAAAAAAAOoEAAAAAAAAAAAAAOoEAAAAAAAA6wQAAAAAAAAAAAAA6wQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAO0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAOwEAAAAAAAA7AQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AwAAAO4EAAAAAAAA7wQAAAAAAAAAAAAA7wQAAAAAAADvBAAAAAAAAAoAAAA+IDwvc2NyaXB07wQAAAAAAADwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"cut",
					null,
					"AQAAAM0EAAAAAAAAzQQAAAAAAAAlAAAAICAgICAgPHNjcmlwdCBzcmM9ImFwcC5qcyIgbW9kdWxlIC8+Cg",
					"AQAAAAAAAAABAAAAzQQAAAAAAADyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"paste",
					null,
					"AQAAAM0EAAAAAAAA8gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					2,
					"left_delete",
					null,
					"AgAAAOgEAAAAAAAA6AQAAAAAAAAGAAAAbW9kdWxl5wQAAAAAAADnBAAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAA6AQAAAAAAADuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"cut",
					null,
					"AQAAAM0EAAAAAAAAzQQAAAAAAAAeAAAAICAgICAgPHNjcmlwdCBzcmM9ImFwcC5qcyIgLz4K",
					"AQAAAAAAAAABAAAAzQQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"paste",
					null,
					"AQAAAM0EAAAAAAAA6wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"cut",
					null,
					"AQAAAM0EAAAAAAAAzQQAAAAAAAAeAAAAICAgICAgPHNjcmlwdCBzcmM9ImFwcC5qcyIgLz4K",
					"AQAAAAAAAAABAAAAzQQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"paste",
					null,
					"AQAAAM0EAAAAAAAA6wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADoBAAAAAAAAAIAAAAgLw",
					"AQAAAAAAAAABAAAA6QQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"left_delete",
					null,
					"AQAAAOcEAAAAAAAA5wQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgEAAAAAAAA6QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"left_delete",
					null,
					"AQAAAOgEAAAAAAAA6AQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAOgEAAAAAAAA6QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"close_tag",
					{
						"insert_slash": true
					},
					"AQAAAOkEAAAAAAAA8QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QQAAAAAAADxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"left_delete",
					null,
					"AQAAAPEEAAAAAAAA8QQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA8gQAAAAAAADyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " module"
					},
					"BwAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAADpBAAAAAAAAOoEAAAAAAAAAAAAAOoEAAAAAAAA6wQAAAAAAAAAAAAA6wQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAO0EAAAAAAAAAAAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AwAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADoBAAAAAAAABAAAAAgbW9kdWxlPjwvc2NyaXB06AQAAAAAAADpBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wQAAAAAAAD3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"",
					null,
					"AgAAAOcEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABQAAAAAAAAMAAAAgLz4",
					"AQAAAAAAAAABAAAA5wQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"cut",
					null,
					"AQAAAM0EAAAAAAAAzQQAAAAAAAAzAAAAICAgICAgPHNjcmlwdCBzcmM9ImFwcC5qcyIgdHlwZT0ibW9kdWxlIj48L3NjcmlwdD4K",
					"AQAAAAAAAAABAAAAzQQAAAAAAAAABQAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"paste",
					null,
					"AQAAAKAAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+CiAgICA8dGl0bGU+TEMgY2lyY3VpdCBjYWxjdWxhdGlvbjwvdGl0bGU+CiAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZXNoZWV0cy9tYWluLmNzcyI+CiAgICAgIDxzY3JpcHQgc3JjPSJhcHAuanMiIHR5cGU9Im1vZHVsZSI+PC9zY3JpcHQ+CjwvaGVhZD4KICA8Ym9keT4KICAgIDxoMj5UaG9tc29uJ3MgZm9ybXVsYTwvaDI+CiAgICA8aW1nIHNyYz0ic3ZnL2ZyZXEtZXF1YXRpb24uc3ZnIiAvPgogICAgPGZvcm0gYWN0aW9uPSIiIG9uc3VibWl0PSIiPgogICAgICA8ZGl2IGlkPSJmaWVsZHMiIHN0eWxlPSJkaXNwbGF5OiBpbmxpbmUtZ3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxLjJlbSA2LjVlbSAxZnIiPgogICAgICAgIDxsYWJlbCBjbGFzcz0idmFyIGluZHVjdGFuY2UiPjxiPkw8L2I+PC9sYWJlbD4KICAgICAgICA8bGFiZWwgY2xhc3M9Im5hbWUgaW5kdWN0YW5jZSI+SW5kdWN0YW5jZTwvbGFiZWw+CiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHNpemU9IjIwIiBuYW1lPSJMIiB2YWx1ZT0iIiAvPgogICAgICAgIDxsYWJlbCBjbGFzcz0idmFyIGNhcGFjaXRhbmNlIj48Yj5DPC9iPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJuYW1lIGNhcGFjaXRhbmNlIj5DYXBhY2l0YW5jZTwvbGFiZWw+CiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHNpemU9IjIwIiBuYW1lPSJDIiB2YWx1ZT0iIiAvPgogICAgICAgIDxsYWJlbCBjbGFzcz0idmFyIGZyZXF1ZW5jeSI+PGI+ZjwvYj48L2xhYmVsPgogICAgICAgIDxsYWJlbCBjbGFzcz0ibmFtZSBmcmVxdWVuY3kiPkZyZXF1ZW5jeTwvbGFiZWw+CiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHNpemU9IjIwIiBuYW1lPSJmIiB2YWx1ZT0iIiAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0icHJlY2lzaW9uX2dycCI+CiAgICAgICAgPGxhYmVsIGZvcj0icHJlY2lzaW9uIiBpZD0icHJlY2lzaW9uX2xibCI+UHJlY2lzaW9uPC9sYWJlbD4KICAgICAgICA8aW5wdXQgdHlwZT0icmFuZ2UiIGlkPSJwcmVjaXNpb24iIG5hbWU9InByZWNpc2lvbiIgbWluPSIwIiBtYXg9IjkiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InByZWNpc2lvbl9udW0iIG5hbWU9InByZWNpc2lvbl9udW0iIHZhbHVlPSIiIHNpemU9IjIiIC8+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGlkPSJzdGF0dXMiPiZuYnNwOzwvZGl2PgogICAgPC9mb3JtPgoKIDwvYm9keT4KPC9odG1sPgoAAAAAAAAAABMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKAAAAAAAAAApAAAAAAAAAAAAAAAawAAAAAAAABwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABsAAAAAAAAAAQAAAA8IS0t",
					"AQAAAAAAAAABAAAAbwAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACkAAAAAAAAAAMAAAAtLT4",
					"AQAAAAAAAAABAAAAowAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXBQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+CiAgICA8dGl0bGU+TEMgY2lyY3VpdCBjYWxjdWxhdGlvbjwvdGl0bGU+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGVzaGVldHMvbWFpbi5jc3MiIC8+ICAKICAgIDxzY3JpcHQgc3JjPSJhcHAuanMiIHR5cGU9Im1vZHVsZSI+PC9zY3JpcHQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPGgyPlRob21zb24ncyBmb3JtdWxhPC9oMj4KICAgIDxpbWcgc3JjPSJzdmcvZnJlcS1lcXVhdGlvbi5zdmciIC8+CiAgICA8Zm9ybSBhY3Rpb249IiIgb25zdWJtaXQ9IiI+CiAgICAgIDxkaXYgaWQ9ImZpZWxkcyIgc3R5bGU9ImRpc3BsYXk6IGlubGluZS1ncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDEuMmVtIDYuNWVtIDFmciI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJ2YXIgaW5kdWN0YW5jZSI+PGI+TDwvYj48L2xhYmVsPgogICAgICAgIDxsYWJlbCBjbGFzcz0ibmFtZSBpbmR1Y3RhbmNlIj5JbmR1Y3RhbmNlPC9sYWJlbD4KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgc2l6ZT0iMjAiIG5hbWU9IkwiIHZhbHVlPSIiIC8+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJ2YXIgY2FwYWNpdGFuY2UiPjxiPkM8L2I+PC9sYWJlbD4KICAgICAgICA8bGFiZWwgY2xhc3M9Im5hbWUgY2FwYWNpdGFuY2UiPkNhcGFjaXRhbmNlPC9sYWJlbD4KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgc2l6ZT0iMjAiIG5hbWU9IkMiIHZhbHVlPSIiIC8+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJ2YXIgZnJlcXVlbmN5Ij48Yj5mPC9iPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJuYW1lIGZyZXF1ZW5jeSI+RnJlcXVlbmN5PC9sYWJlbD4KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgc2l6ZT0iMjAiIG5hbWU9ImYiIHZhbHVlPSIiIC8+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGlkPSJwcmVjaXNpb25fZ3JwIj4KICAgICAgICA8bGFiZWwgZm9yPSJwcmVjaXNpb24iIGlkPSJwcmVjaXNpb25fbGJsIj5QcmVjaXNpb248L2xhYmVsPgogICAgICAgIDxpbnB1dCB0eXBlPSJyYW5nZSIgaWQ9InByZWNpc2lvbiIgbmFtZT0icHJlY2lzaW9uIiBtaW49IjAiIG1heD0iOSIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0icHJlY2lzaW9uX251bSIgbmFtZT0icHJlY2lzaW9uX251bSIgdmFsdWU9IiIgc2l6ZT0iMiIgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9InN0YXR1cyI+Jm5ic3A7PC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9ib2R5Pgo8L2h0bWw+CgAAAAAAAAAAEwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"paste",
					null,
					"AQAAAGkAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					2,
					"right_delete",
					null,
					"AgAAAGsAAAAAAAAAawAAAAAAAAACAAAAICBrAAAAAAAAAGsAAAAAAAAAAQAAADw",
					"AQAAAAAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAGsAAAAAAAAAbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAADRA"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " sizes="
					},
					"BwAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIsAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "165x"
					},
					"BAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					2,
					"left_delete",
					null,
					"AgAAAI8AAAAAAAAAjwAAAAAAAAABAAAAeI4AAAAAAAAAjgAAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "x16"
					},
					"AwAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " 32x6"
					},
					"BQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"left_delete",
					null,
					"AQAAAJUAAAAAAAAAlQAAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": " 484"
					},
					"BAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"left_delete",
					null,
					"AQAAAJoAAAAAAAAAmgAAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "x48"
					},
					"AwAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"left_delete",
					null,
					"AQAAAJ4AAAAAAAAAngAAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "64x654"
					},
					"BgAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					2,
					"left_delete",
					null,
					"AgAAAKMAAAAAAAAAowAAAAAAAAABAAAANKIAAAAAAAAAogAAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAKIAAAAAAAAAowAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " 128x128"
					},
					"CAAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " 256cx"
					},
					"BgAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					2,
					"left_delete",
					null,
					"AgAAALAAAAAAAAAAsAAAAAAAAAABAAAAeK8AAAAAAAAArwAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "x256"
					},
					"BAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"paste",
					null,
					"AQAAAGsAAAAAAAAAuQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZBQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+CiAgICA8dGl0bGU+TEMgY2lyY3VpdCBjYWxjdWxhdGlvbjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBzaXplcz0iMTZ4MTYiIGhyZWY9ImZhdmljb24ucG5nIiAvPgo8bGluayByZWw9InNob3J0Y3V0IGljb24iIHNpemVzPSIxNngxNiAzMngzMiA0OHg0OCA2NHg2NCAxMjh4MTI4IDI1NngyNTYiIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iZmF2aWNvbi5pY28iIC8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9InN0eWxlc2hlZXRzL21haW4uY3NzIiAvPgogICAgPHNjcmlwdCBzcmM9ImFwcC5qcyIgdHlwZT0ibW9kdWxlIj48L3NjcmlwdD4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aDI+VGhvbXNvbidzIGZvcm11bGE8L2gyPgogICAgPGltZyBzcmM9InN2Zy9mcmVxLWVxdWF0aW9uLnN2ZyIgLz4KICAgIDxmb3JtIGFjdGlvbj0iIiBvbnN1Ym1pdD0iIj4KICAgICAgPGRpdiBpZD0iZmllbGRzIiBzdHlsZT0iZGlzcGxheTogaW5saW5lLWdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczogMS4yZW0gNi41ZW0gMWZyIj4KICAgICAgICA8bGFiZWwgY2xhc3M9InZhciBpbmR1Y3RhbmNlIj48Yj5MPC9iPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJuYW1lIGluZHVjdGFuY2UiPkluZHVjdGFuY2U8L2xhYmVsPgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBzaXplPSIyMCIgbmFtZT0iTCIgdmFsdWU9IiIgLz4KICAgICAgICA8bGFiZWwgY2xhc3M9InZhciBjYXBhY2l0YW5jZSI+PGI+QzwvYj48L2xhYmVsPgogICAgICAgIDxsYWJlbCBjbGFzcz0ibmFtZSBjYXBhY2l0YW5jZSI+Q2FwYWNpdGFuY2U8L2xhYmVsPgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBzaXplPSIyMCIgbmFtZT0iQyIgdmFsdWU9IiIgLz4KICAgICAgICA8bGFiZWwgY2xhc3M9InZhciBmcmVxdWVuY3kiPjxiPmY8L2I+PC9sYWJlbD4KICAgICAgICA8bGFiZWwgY2xhc3M9Im5hbWUgZnJlcXVlbmN5Ij5GcmVxdWVuY3k8L2xhYmVsPgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBzaXplPSIyMCIgbmFtZT0iZiIgdmFsdWU9IiIgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9InByZWNpc2lvbl9ncnAiPgogICAgICAgIDxsYWJlbCBmb3I9InByZWNpc2lvbiIgaWQ9InByZWNpc2lvbl9sYmwiPlByZWNpc2lvbjwvbGFiZWw+CiAgICAgICAgPGlucHV0IHR5cGU9InJhbmdlIiBpZD0icHJlY2lzaW9uIiBuYW1lPSJwcmVjaXNpb24iIG1pbj0iMCIgbWF4PSI5IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJwcmVjaXNpb25fbnVtIiBuYW1lPSJwcmVjaXNpb25fbnVtIiB2YWx1ZT0iIiBzaXplPSIyIiAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0ic3RhdHVzIj4mbmJzcDs8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2JvZHk+CjwvaHRtbD4KAAAAAAAAAADVBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "app/app.html",
			"settings":
			{
				"buffer_size": 1433,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": " type="
					},
					"BgAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALEEAAAAAAAAAAAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACzBAAAAAAAAAAAAACzBAAAAAAAALQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALQEAAAAAAAAtgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "module"
					},
					"BgAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"",
					null,
					"AQAAAGkAAAAAAAAAvQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAKEAAAAAAAAAoQAAAAAAAAAMAAAAZG9jcy9pbWFnZXMv",
					"AQAAAAAAAAABAAAAoQAAAAAAAACtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAGsAAAAAAAAAawAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"paste",
					null,
					"AgAAAGcAAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADfAAAAAAAAAEgAAAAgICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9ImZhdmljb24uaWNvIiAvPgo",
					"AQAAAAAAAAABAAAAZwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"",
					null,
					"AQAAAGsAAAAAAAAA3gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "fac"
					},
					"BAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACmAAAAAAAAADYAAAAvdGVtcGxhdGVzL2ZpbmR0dWJlcy9pbWFnZXMvZmF2aWNvbi0xNngxNi5wbmc/ZTlmN2JjODimAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAKcAAAAAAAAApwAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "voi"
					},
					"AwAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					2,
					"left_delete",
					null,
					"AgAAAKkAAAAAAAAAqQAAAAAAAAABAAAAaagAAAAAAAAAqAAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "ocpm"
					},
					"BAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					3,
					"left_delete",
					null,
					"AwAAAKsAAAAAAAAAqwAAAAAAAAABAAAAbaoAAAAAAAAAqgAAAAAAAAABAAAAcKkAAAAAAAAAqQAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "ic"
					},
					"AgAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					3,
					"left_delete",
					null,
					"AwAAAKoAAAAAAAAAqgAAAAAAAAABAAAAY6kAAAAAAAAAqQAAAAAAAAABAAAAaagAAAAAAAAAqAAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "icon.png"
					},
					"CAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/main.js",
			"redo_stack":
			[
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXCAAALy8gVGhpcyBpcyBtYWluIHByb2Nlc3Mgb2YgRWxlY3Ryb24sIHN0YXJ0ZWQgYXMgZmlyc3QgdGhpbmcgd2hlbiB5b3VyIC8vIGFwcCBzdGFydHMuIEl0IHJ1bnMgdGhyb3VnaCBlbnRpcmUgbGlmZSBvZiB5b3VyIGFwcGxpY2F0aW9uLiAvLyBJdCBkb2Vzbid0IGhhdmUgYW55IHdpbmRvd3Mgd2hpY2ggeW91IGNhbiBzZWUgb24gc2NyZWVuLCBidXQgd2UKY2FuIG9wZW4gLy8gd2luZG93IGZyb20gaGVyZS4gaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7IGltcG9ydCB1cmwgZnJvbSAndXJsJzsgaW1wb3J0IHsgYXBwLCBNZW51LCBpcGNNYWluLCBzaGVsbCB9IGZyb20gJ2VsZWN0cm9uJzsgaW1wb3J0IGFwcE1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvYXBwX21lbnVfdGVtcGxhdGUnOyBpbXBvcnQKZWRpdE1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvZWRpdF9tZW51X3RlbXBsYXRlJzsgaW1wb3J0IGRldk1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvZGV2X21lbnVfdGVtcGxhdGUnOyBpbXBvcnQgY3JlYXRlV2luZG93IGZyb20gJy4vaGVscGVycy93aW5kb3cnOyAvLyBTcGVjaWFsIG1vZHVsZSBob2xkaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcwp3aGljaCB5b3UgZGVjbGFyZWQgLy8gaW4gY29uZmlnL2Vudl94eHguanNvbiBmaWxlLiBpbXBvcnQgZW52IGZyb20gJ2Vudic7IC8vIFNhdmUgdXNlckRhdGEgaW4gc2VwYXJhdGUgZm9sZGVycyBmb3IgZWFjaCBlbnZpcm9ubWVudC4gLy8gVGhhbmtzIHRvIHRoaXMgeW91IGNhbiB1c2UgcHJvZHVjdGlvbiBhbmQgZGV2ZWxvcG1lbnQgdmVyc2lvbnMKb2YgdGhlIGFwcCAvLyBvbiBzYW1lIG1hY2hpbmUgbGlrZSB0aG9zZSBhcmUgdHdvIHNlcGFyYXRlIGFwcHMuIGlmKGVudi5uYW1lICE9PSAncHJvZHVjdGlvbicpIHsgY29uc3QgdXNlckRhdGFQYXRoID0gYXBwLmdldFBhdGgoJ3VzZXJEYXRhJyk7IGFwcC5zZXRQYXRoKCd1c2VyRGF0YScsIGAke3VzZXJEYXRhUGF0aH0gKCR7ZW52Lm5hbWV9KWApOwp9IGNvbnN0IHNldEFwcGxpY2F0aW9uTWVudSA9ICgpID0+IHsgY29uc3QgbWVudXMgPSBbYXBwTWVudVRlbXBsYXRlLCBlZGl0TWVudVRlbXBsYXRlXTsgaWYoZW52Lm5hbWUgIT09ICdwcm9kdWN0aW9uJykgeyBtZW51cy5wdXNoKGRldk1lbnVUZW1wbGF0ZSk7IH0KTWVudS5zZXRBcHBsaWNhdGlvbk1lbnUoTWVudS5idWlsZEZyb21UZW1wbGF0ZShtZW51cykpOyB9OyAvLyBXZSBjYW4gY29tbXVuaWNhdGUgd2l0aCBvdXIgd2luZG93ICh0aGUgcmVuZGVyZXIgcHJvY2VzcykgdmlhIG1lc3NhZ2VzLiBjb25zdCBpbml0SXBjID0gKCkgPT4geyBpcGNNYWluLm9uKCduZWVkLWFwcC1wYXRoJywgKGV2ZW50LCBhcmcpCj0+IHsgZXZlbnQucmVwbHkoJ2FwcC1wYXRoJywgYXBwLmdldEFwcFBhdGgoKSk7IH0pOyBpcGNNYWluLm9uKCdvcGVuLWV4dGVybmFsLWxpbmsnLCAoZXZlbnQsIGhyZWYpID0+IHsgc2hlbGwub3BlbkV4dGVybmFsKGhyZWYpOyB9KTsgfTsgYXBwLm9uKCdyZWFkeScsICgpID0+IHsgc2V0QXBwbGljYXRpb25NZW51KCk7IGluaXRJcGMoKTsgY29uc3QKbWFpbldpbmRvdyA9IGNyZWF0ZVdpbmRvdygnbWFpbicsIHsgd2lkdGg6IDEwMDAsIGhlaWdodDogNjAwLCB3ZWJQcmVmZXJlbmNlczogeyAvLyBUd28gcHJvcGVydGllcyBiZWxvdyBhcmUgaGVyZSBmb3IgZGVtbyBwdXJwb3NlcywgYW5kIGFyZSAvLyBzZWN1cml0eSBoYXphcmQuIE1ha2Ugc3VyZSB5b3Uga25vdyB3aGF0IHlvdSdyZSBkb2luZyAvLwppbiB5b3VyIHByb2R1Y3Rpb24gYXBwLiBub2RlSW50ZWdyYXRpb246IHRydWUsIGNvbnRleHRJc29sYXRpb246IGZhbHNlLCAvLyBTcGVjdHJvbiBuZWVkcyBhY2Nlc3MgdG8gcmVtb3RlIG1vZHVsZSBlbmFibGVSZW1vdGVNb2R1bGU6IGVudi5uYW1lID09PSAndGVzdCcgfSB9KTsgbWFpbldpbmRvdy5sb2FkVVJMKCB1cmwuZm9ybWF0KHsKcGF0aG5hbWU6IHBhdGguam9pbihfX2Rpcm5hbWUsICdhcHAuaHRtbCcpLCBwcm90b2NvbDogJ2ZpbGU6Jywgc2xhc2hlczogdHJ1ZSB9KSApOyBpZihlbnYubmFtZSA9PT0gJ2RldmVsb3BtZW50JykgbWFpbldpbmRvdy5vcGVuRGV2VG9vbHMoKTsgfSk7IGFwcC5vbignd2luZG93LWFsbC1jbG9zZWQnLCAoKSA9PiB7IGFwcC5xdWl0KCk7IH0pOwoAAAAAAAAAAOUIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwgAAAAAAABXCAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 2277,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXCAAALy8gVGhpcyBpcyBtYWluIHByb2Nlc3Mgb2YgRWxlY3Ryb24sIHN0YXJ0ZWQgYXMgZmlyc3QgdGhpbmcgd2hlbiB5b3VyIC8vIGFwcCBzdGFydHMuIEl0IHJ1bnMgdGhyb3VnaCBlbnRpcmUgbGlmZSBvZiB5b3VyIGFwcGxpY2F0aW9uLiAvLyBJdCBkb2Vzbid0IGhhdmUgYW55IHdpbmRvd3Mgd2hpY2ggeW91IGNhbiBzZWUgb24gc2NyZWVuLCBidXQgd2UKY2FuIG9wZW4gLy8gd2luZG93IGZyb20gaGVyZS4gaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7IGltcG9ydCB1cmwgZnJvbSAndXJsJzsgaW1wb3J0IHsgYXBwLCBNZW51LCBpcGNNYWluLCBzaGVsbCB9IGZyb20gJ2VsZWN0cm9uJzsgaW1wb3J0IGFwcE1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvYXBwX21lbnVfdGVtcGxhdGUnOyBpbXBvcnQKZWRpdE1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvZWRpdF9tZW51X3RlbXBsYXRlJzsgaW1wb3J0IGRldk1lbnVUZW1wbGF0ZSBmcm9tICcuL21lbnUvZGV2X21lbnVfdGVtcGxhdGUnOyBpbXBvcnQgY3JlYXRlV2luZG93IGZyb20gJy4vaGVscGVycy93aW5kb3cnOyAvLyBTcGVjaWFsIG1vZHVsZSBob2xkaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcwp3aGljaCB5b3UgZGVjbGFyZWQgLy8gaW4gY29uZmlnL2Vudl94eHguanNvbiBmaWxlLiBpbXBvcnQgZW52IGZyb20gJ2Vudic7IC8vIFNhdmUgdXNlckRhdGEgaW4gc2VwYXJhdGUgZm9sZGVycyBmb3IgZWFjaCBlbnZpcm9ubWVudC4gLy8gVGhhbmtzIHRvIHRoaXMgeW91IGNhbiB1c2UgcHJvZHVjdGlvbiBhbmQgZGV2ZWxvcG1lbnQgdmVyc2lvbnMKb2YgdGhlIGFwcCAvLyBvbiBzYW1lIG1hY2hpbmUgbGlrZSB0aG9zZSBhcmUgdHdvIHNlcGFyYXRlIGFwcHMuIGlmKGVudi5uYW1lICE9PSAncHJvZHVjdGlvbicpIHsgY29uc3QgdXNlckRhdGFQYXRoID0gYXBwLmdldFBhdGgoJ3VzZXJEYXRhJyk7IGFwcC5zZXRQYXRoKCd1c2VyRGF0YScsIGAke3VzZXJEYXRhUGF0aH0gKCR7ZW52Lm5hbWV9KWApOwp9IGNvbnN0IHNldEFwcGxpY2F0aW9uTWVudSA9ICgpID0+IHsgY29uc3QgbWVudXMgPSBbYXBwTWVudVRlbXBsYXRlLCBlZGl0TWVudVRlbXBsYXRlXTsgaWYoZW52Lm5hbWUgIT09ICdwcm9kdWN0aW9uJykgeyBtZW51cy5wdXNoKGRldk1lbnVUZW1wbGF0ZSk7IH0KTWVudS5zZXRBcHBsaWNhdGlvbk1lbnUoTWVudS5idWlsZEZyb21UZW1wbGF0ZShtZW51cykpOyB9OyAvLyBXZSBjYW4gY29tbXVuaWNhdGUgd2l0aCBvdXIgd2luZG93ICh0aGUgcmVuZGVyZXIgcHJvY2VzcykgdmlhIG1lc3NhZ2VzLiBjb25zdCBpbml0SXBjID0gKCkgPT4geyBpcGNNYWluLm9uKCduZWVkLWFwcC1wYXRoJywgKGV2ZW50LCBhcmcpCj0+IHsgZXZlbnQucmVwbHkoJ2FwcC1wYXRoJywgYXBwLmdldEFwcFBhdGgoKSk7IH0pOyBpcGNNYWluLm9uKCdvcGVuLWV4dGVybmFsLWxpbmsnLCAoZXZlbnQsIGhyZWYpID0+IHsgc2hlbGwub3BlbkV4dGVybmFsKGhyZWYpOyB9KTsgfTsgYXBwLm9uKCdyZWFkeScsICgpID0+IHsgc2V0QXBwbGljYXRpb25NZW51KCk7IGluaXRJcGMoKTsgY29uc3QKbWFpbldpbmRvdyA9IGNyZWF0ZVdpbmRvdygnbWFpbicsIHsgd2lkdGg6IDEwMDAsIGhlaWdodDogNjAwLCB3ZWJQcmVmZXJlbmNlczogeyAvLyBUd28gcHJvcGVydGllcyBiZWxvdyBhcmUgaGVyZSBmb3IgZGVtbyBwdXJwb3NlcywgYW5kIGFyZSAvLyBzZWN1cml0eSBoYXphcmQuIE1ha2Ugc3VyZSB5b3Uga25vdyB3aGF0IHlvdSdyZSBkb2luZyAvLwppbiB5b3VyIHByb2R1Y3Rpb24gYXBwLiBub2RlSW50ZWdyYXRpb246IHRydWUsIGNvbnRleHRJc29sYXRpb246IGZhbHNlLCAvLyBTcGVjdHJvbiBuZWVkcyBhY2Nlc3MgdG8gcmVtb3RlIG1vZHVsZSBlbmFibGVSZW1vdGVNb2R1bGU6IGVudi5uYW1lID09PSAndGVzdCcgfSB9KTsgbWFpbldpbmRvdy5sb2FkVVJMKCB1cmwuZm9ybWF0KHsKcGF0aG5hbWU6IHBhdGguam9pbihfX2Rpcm5hbWUsICdhcHAuaHRtbCcpLCBwcm90b2NvbDogJ2ZpbGU6Jywgc2xhc2hlczogdHJ1ZSB9KSApOyBpZihlbnYubmFtZSA9PT0gJ2RldmVsb3BtZW50JykgbWFpbldpbmRvdy5vcGVuRGV2VG9vbHMoKTsgfSk7IGFwcC5vbignd2luZG93LWFsbC1jbG9zZWQnLCAoKSA9PiB7IGFwcC5xdWl0KCk7IH0pOwoAAAAAAAAAAOUIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwgAAAAAAABXCAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Break every 10 lines"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/thomson-calculator",
		"/home/roman/Projects/thomson-calculator/app",
		"/home/roman/Projects/thomson-calculator/build",
		"/home/roman/Projects/thomson-calculator/src"
	],
	"file_history":
	[
		"/home/roman/Projects/thomson-calculator/multi_layer1.js",
		"/home/roman/Projects/thomson-calculator/app/app.html",
		"/home/roman/Projects/thomson-calculator/thomson-calculator-1.0-win32-ia32.txz",
		"/home/roman/Projects/thomson-calculator/src/tlite.js",
		"/home/roman/Projects/thomson-calculator/src/stylesheets/main.css",
		"/home/roman/Projects/thomson-calculator/src/app.js",
		"/home/roman/Projects/thomson-calculator/001.app.js.patch",
		"/home/roman/Projects/thomson-calculator/006.app.js.diff",
		"/home/roman/Projects/thomson-calculator/README.md",
		"/home/roman/Projects/thomson-calculator/app/app.js",
		"/home/roman/Projects/electron-boilerplate/app/app.html",
		"/home/roman/Projects/electron-boilerplate/src/stylesheets/main.css",
		"/home/roman/Projects/electron-boilerplate/src/main.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/electron-boilerplate/src/app.js",
		"/home/roman/Projects/electron-boilerplate/thomson-capacitance-equation-2.svg",
		"/home/roman/Projects/electron-boilerplate/thomson-freq-equation-2.svg",
		"/home/roman/Projects/electron-boilerplate/thomson-inductance-equation-2.svg",
		"/home/roman/Projects/lc-meter/lib/timer.h",
		"/home/roman/Projects/lc-meter/lib/timer.c",
		"/home/roman/Projects/lc-meter/Attic/julznc/main.c",
		"/home/roman/Projects/lc-meter/src/measure.c",
		"/home/roman/Projects/lc-meter/LC-meter.c",
		"/home/roman/Projects/pictest/src/pictest.h",
		"/home/roman/Projects/pictest/lib/typedef.h",
		"/home/roman/Projects/pictest/lib/timer.h",
		"/home/roman/Projects/pictest/lib/softpwm.c",
		"/home/roman/Projects/pictest/lib/ser.h",
		"/home/roman/Projects/pictest/lib/uart.c",
		"/home/roman/Projects/pictest/lib/uart.h",
		"/home/roman/Projects/pictest/lib/format.c",
		"/home/roman/Projects/pictest/lib/lcd5110.h",
		"/home/roman/Projects/pictest/lib/lcd5110.c",
		"/home/roman/Projects/pictest/build/sdcc.mk",
		"/home/roman/Projects/pictest/build/vars.mk",
		"/home/roman/Projects/pictest/src/serialtest.c",
		"/home/roman/Projects/pictest/pictest.sublime-project",
		"/home/roman/Projects/pictest/README.ipecmd",
		"/home/roman/Projects/pictest/src/config-18f25k50.h",
		"/home/roman/Projects/pictest/src/pictest.c",
		"/home/roman/Projects/pictest/build/xc8.mk",
		"/home/roman/Projects/pictest/lib/device.h",
		"/opt/sdcc-4.0.0/share/sdcc/non-free/include/pic16/pic18f25k50.h",
		"/home/roman/Projects/pictest/pictest.c",
		"/home/roman/Projects/pictest/pictest2.c",
		"/home/roman/Projects/pictest/serialtest.c",
		"/home/roman/Projects/pictest/Makefile",
		"/home/roman/Projects/pictest/src/7segtest.c",
		"/home/roman/Projects/pictest/src/config-bits.h",
		"/home/roman/Projects/pictest/tools/calc-midi-notes.c",
		"/home/roman/Projects/pictest/lib/softpwm.h",
		"/home/roman/Projects/pictest/lib/timer.c",
		"/home/roman/Projects/pictest/blinktest.c",
		"/home/roman/Projects/pictest/lib/softser.c",
		"/home/roman/Projects/pictest/lib/oscillator.h",
		"/home/roman/Projects/pictest/src/config-18f25k22.h",
		"/home/roman/Projects/pictest/build/common.mk",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-misc.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_predicate.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/tests/test_misc.js",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-path.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/utils.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-pointer.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/test-repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-pointer.h",
		"/home/roman/Sources/plot-cv/quickjs/modules/quickjs-predicate.c",
		"/home/roman/Sources/plot-cv/quickjs/modules/predicate.c",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/cmake/FindQuickJS.cmake",
		"/home/roman/Sources/plot-cv/quickjs/modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/lib/core-net/pollfd.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/test-apps/test-server.c",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/build/x86_64-linux-gnu/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/net/libwebsockets/READMEs/README.coding.md",
		"/home/roman/Projects/plot-cv/quickjs/modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/modules/quickjs-lexer.h"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 119.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"FormatRange",
			"CalcFreq",
			"CalcFre",
			"CalcFreq",
			"unit",
			"FormatRange",
			"    <link rel=\"shortcut icon\" sizes=\"16x16 32x32 48x48 64x64 128x128 256x256\" type=\"image/x-icon\" href=\"favicon.ico\" />\n",
			"removeChild",
			"removeStyleElement",
			"update",
			"\\bupdate\\b",
			"config\\b",
			"e\\.message",
			"Size",
			"catch",
			"Init",
			"Coil",
			"FormatNum",
			"tlite",
			"getBoundingClientRect",
			"GetRange",
			"GetRange,",
			"GetRange",
			"getTooltipOpts",
			"a\\.tooltip",
			"\\{\\[type\\]\\}",
			"\\bDk\\b",
			"rosaKs",
			"\\bp\\b",
			"CalcInductor",
			"CalcTurns",
			"CalcIn ",
			"\\{\\[type\\]\\}",
			"Calc01",
			"form",
			" *",
			"lM",
			"rosaKs",
			"Ks\\b",
			"\\bKs\\b",
			"Ks",
			"Dk",
			"lM",
			"rosaKm",
			"Km",
			"rosaKs",
			"padding:",
			"font-size",
			"FormatNumber",
			"RoundTo",
			"FormatNumber",
			"CalcThompson",
			"GetSize",
			"GetSize\\b",
			"ChangeSize",
			"RoundFunction\\b",
			"RoundFunction2\\b",
			"RoundFunction\\b",
			"ParseNumber\\b",
			"IsRange\\b",
			"IsRange",
			"GetFieldEle",
			"config",
			"GetFieldElements",
			"SetFieldValue\\b",
			"GetFieldValue\\b",
			"function\\s*\\*",
			"function\\*",
			"calculateInverse",
			"PI_2",
			"GetValue\\b",
			"SetField\\b",
			"SetField",
			"SetField\\b",
			"GetValue\\b",
			"ParseValue\\b",
			"ParseValue",
			"console.error",
			"^(async |)function ",
			"^function ",
			"ReadFields",
			"WriteFields",
			"SetField\\b",
			"SetField",
			"GetValue",
			"typeof ",
			"typeof ([^=]*) != 'string'",
			"typeof ([^=]*) == 'string'",
			"typeof ([^=]*) == '(.*)'",
			"typeof ([^=]*) != 'number'",
			"typeof ([^=]*) == 'number'",
			"'number'",
			"FormatNumber",
			"FormatNumber\\(",
			"FormatNumber",
			"Thousand",
			"FormatNumber",
			"SetValue",
			"\\bvalues\\b",
			"allValues",
			"FieldIndex",
			"valueIndex",
			"FieldIndex",
			"valueIndex",
			"Thousand",
			"'u'",
			"ChangePrec",
			"input.*{",
			"input ",
			"width:",
			"OnInput",
			"Init",
			"ParseNumber",
			"Capacity",
			"FormatNumber",
			"prec",
			"SetRange",
			"FormatNumber",
			"FormatNum",
			"CalcFreq",
			"SetRange",
			"SetField\\(",
			"FormatNumber\\(",
			"FormatNumber",
			"ParseValue\\(",
			"ParseValue",
			"_2PI",
			"reverse"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			".tooltip",
			"{Number}",
			"CoilInductance",
			"CoilTurns",
			"{Number}",
			"CalcTurns",
			"RoundTo",
			"RoundFunction",
			"FieldElements",
			"SetField",
			"GetField",
			"inverse",
			"PI2",
			"export \\1function ",
			"export function ",
			"!IsString(\\1)",
			"IsString(\\1)",
			"!IsNumber(\\1)",
			"IsNumber(\\1)",
			"Capacitance",
			"\\$2PI",
			"$2PI",
			"calculateInverse",
			"calculate",
			"",
			"NUM_FIELDS",
			" config",
			" ",
			"><",
			"&nbsp;=&nbsp;",
			"ReadFields",
			"\\1//console.",
			"\\1globalThis.config"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/thomson-calculator/src/app.html",
							"function_name_status_row": 42,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									542,
									548
								],
								[
									1161,
									1174
								],
								[
									1212,
									1225
								],
								[
									1277,
									1286
								],
								[
									1357,
									1370
								],
								[
									1442,
									1448
								]
							],
							"symlist":
							[
								"  fields",
								"  precision_grp",
								"  precision_lbl",
								"  precision",
								"  precision_num",
								"  status"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708221524.09,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "one_layer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12865,
						"regions":
						{
						},
						"selection":
						[
							[
								11540,
								12584
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 206,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708219528.71,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4130.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16675,
						"regions":
						{
						},
						"selection":
						[
							[
								7192,
								7192
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 277,
							"rulers":
							[
							],
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708222226.32,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 5038.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/app.html",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1493,
						"regions":
						{
						},
						"selection":
						[
							[
								296,
								103
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"show_line_column": "disabled",
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708235761.23,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/app.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1433,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								181
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"show_line_column": "disabled",
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708221380.65,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2277,
						"regions":
						{
						},
						"selection":
						[
							[
								1843,
								1843
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 53,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tabs_extra_last_activated": 1708221654.59,
							"tabs_extra_last_activated_sheet_index": 4
						},
						"translation.x": 0.0,
						"translation.y": 888.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "blinktest_18f25k50_xc8",
	"project": "thomson-calculator.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main.js",
				"src/main.js"
			],
			[
				"usb_cdc",
				"usb/USB_Stack/USB/usb_cdc.h"
			],
			[
				"blinkte",
				"src/blinktest.c"
			],
			[
				"blinktest",
				"src/blinktest.c"
			],
			[
				"pictest",
				"src/pictest.c"
			],
			[
				"blink",
				"src/blinktest.c"
			],
			[
				"format",
				"lib/format.h"
			],
			[
				"adc.h",
				"lib/adc.h"
			],
			[
				"device",
				"lib/device.h"
			],
			[
				"ipecm",
				"README.ipecmd"
			],
			[
				"makefile",
				"Makefile"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"",
				"tests/test_qjsm.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			],
			[
				"term_rest",
				"src/term/term_restore.c"
			],
			[
				"parse.h",
				"src/parse.h"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"shell.h",
				"lib/shell.h"
			],
			[
				"mmap_file",
				"lib/stralloc/mmap_filename.c"
			],
			[
				"uffer.h",
				"lib/buffer.h"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"scan.",
				"lib/scan.h"
			],
			[
				"debug_char",
				"src/debug/debug_char.c"
			],
			[
				"source_pop",
				"src/source/source_pop.c"
			],
			[
				"builtin.h",
				"src/builtin.h"
			],
			[
				"debug_node",
				"src/debug/debug_node.c"
			],
			[
				"sig_in",
				"lib/sig_internal.h"
			],
			[
				"term_",
				"src/term/term_attr.c"
			],
			[
				"glob.h",
				"lib/glob.h"
			],
			[
				"source.h",
				"src/source.h"
			],
			[
				"fdtable",
				"src/fdtable.h"
			],
			[
				"fd.h",
				"src/fd.h"
			],
			[
				"eval",
				"src/eval.h"
			],
			[
				"ieee",
				"doc/posix/ieee-p1003.2-d11.2-s3.txt"
			],
			[
				"expand.h",
				"src/expand.h"
			],
			[
				"builtin_dum",
				"src/builtin/builtin_dump.c"
			],
			[
				"h_main",
				"src/sh/sh_main.c"
			],
			[
				"parse_cha",
				"src/parse/parse_chartable.c"
			],
			[
				"debug.h",
				"src/debug.h"
			],
			[
				"exec_c",
				"src/exec/exec_command.c"
			],
			[
				"eval.h",
				"src/eval.h"
			],
			[
				"test-op",
				"test-operators.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 720.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 506.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
